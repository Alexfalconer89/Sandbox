{"job":{"components":{"234168":{"id":234168,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-363,"y":51,"width":32,"height":32,"inputConnectorIDs":[234195],"outputSuccessConnectorIDs":[234188],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"},"7":{"slot":7,"fromId":null,"fromName":"Status","mapTo":"Error_Status"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Recreate Automation Views"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/******************************************************************************************\nProgram           : Automated Extracts > Recreate Automated Views\nAuthor            : LeeW\nClient Name       : Nestle\nJob Number        :\nStandard Machine  : Snowflake\nAmendment History : v01 - Confec Aero automation\n\t\t\t\t\tv02 - Cereals automation\n\t\t\t\t\tv03 - Purina Direct (Cat) automation\n******************************************************************************************/\n\n/*\n\t\t\tCONFEC AERO\n*/\n/*\ncreate or replace view ${Database}.db.Confec_Aero_Exclusions_CID_View(\n\tCID\n\t) as\nselect distinct\n    cid\nfrom \t${Database}.live.cid_brand cb\njoin \t${Database}.live.ref_brand rb on rb.brand_id = cb.brand_id \nwhere   rb.brand='Aero'\nand     cb.brand_preference = 0\n;\n\ncreate or replace view ${Database}.db.Confec_Aero_Exclusions_Email_View(\n\tEMAIL_BRAND\n\t) as\nselect distinct\n    email_brand\nfrom \t${Database}.live.cid_brand cb\njoin \t${Database}.live.ref_brand rb on rb.brand_id = cb.brand_id \nwhere    rb.brand='Aero'\nand      cb.brand_preference = 0\n;\n\ncreate or replace view ${Database}.db.Confec_Aero_View(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n\tSPLIT_TEST,\n\tBRAND_ID,\n\tBRAND_PREFERENCE,\n\tBRAND_ENGAGEMENT,\n\tCELL_ID,\n\tPACK_ID,\n\tRECENCY,\n\tBATCH,\n\tKOG_PACK\n) as\n\nselect distinct          \n    name_urn,\n    forename,\n    email,\n    case when batch in (1,3) then 'A'\n         when batch in (2,4) then 'B'\n         end as split_test,\t\t\t\t--split test is across both pack ids\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    to_char(b.recency) as cell_id,\n    case \n\t\twhen b.batch in (1,2) then '1'\n\t\twhen b.batch in (3,4) then '2'\n\tend as pack_id,\n    recency,\n\tb.batch,\n    ('E'||'|'||'NUK10079'||'|'||'NUK10079_'||year(current_date)||TO_CHAR(CURRENT_DATE,'MM')||'|'||to_char(b.recency)||'|'||to_char(pack_id)) as kog_pack\nfrom ( \n  select \n    name_urn,\n    forename,\n    email,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    recency,\n    ntile(4) over(partition by recency order by hash('NUK10079'||email)) as batch,\n    row_number() over(partition by em.cid order by case when trim(forename) = '' then 1 else 0 end, case when brand = 'Aero' then 0 else 1 end) as c_run\nfrom ( \n         select distinct nvl(cb.cid,cdiv.cid) as cid,\n             case \n\t\t\t\twhen cb.email_brand > '' then na.name_urn\n\t\t\t\telse cd.name_urn end as name_urn,\n             nvl(cb.email_brand,cdiv.email_division) as email,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             cb.brand_id,\n             cb.brand,\n             cb.brand_preference,\n             cb.brand_engagement,\n             nvl(cb.customer_retention_date_brand,cdiv.customer_retention_date_division) as customer_retention_date_brand,\n             case  when nvl(cb.customer_retention_date_brand,cdiv.customer_retention_date_division) >= add_months(current_date,-6)                                                                     then 1\n                   when nvl(cb.customer_retention_date_brand,cdiv.customer_retention_date_division) >= add_months(current_date,-12)and nvl(cb.customer_retention_date_brand,cdiv.customer_retention_date_division) < add_months(current_date,-6)  then 2\n                   when nvl(cb.customer_retention_date_brand,cdiv.customer_retention_date_division) >= add_months(current_date,-18)and nvl(cb.customer_retention_date_brand,cdiv.customer_retention_date_division) < add_months(current_date,-12) then 3\n                   when nvl(cb.customer_retention_date_brand,cdiv.customer_retention_date_division) >= add_months(current_date,-24)and nvl(cb.customer_retention_date_brand,cdiv.customer_retention_date_division) < add_months(current_date,-18) then 4            \n                   else 5\n             end as recency,\n             row_number() over(partition by nvl(cb.email_brand,cdiv.email_division) order by case when trim(cd.firstname) = '' then 1 else 0 end, case when cb.brand = 'Aero' then 0 else 1 end, cb.first_date_brand nulls last) as em_run\nfrom \t${Database}.live.cid_details  cd                                   \njoin \t${Database}.live.cid          c  on cd.cid = c.cid \njoin \t${Database}.live.cid_division cdiv on cd.cid = cdiv.cid\njoin \t${Database}.live.ref_division rdiv on rdiv.division_id = cdiv.division_id \nleft join (select distinct cid,\n                           first_value(cid_brand_urn)\t              over (partition by cid order by case when email_brand>'' then 1 else 0 end desc, case when brand = 'Aero' then 0 else 1 end, customer_retention_date_brand desc nulls last, last_date_brand desc nulls last, nvl(last_email_open_date_brand,last_subscription_date_brand) desc) cid_brand_urn,\n                           first_value(acb.brand_id)\t              over (partition by cid order by case when email_brand>'' then 1 else 0 end desc, case when brand = 'Aero' then 0 else 1 end, customer_retention_date_brand desc nulls last, last_date_brand desc nulls last, nvl(last_email_open_date_brand,last_subscription_date_brand) desc) brand_id,\n                           first_value(brand)   \t\t              over (partition by cid order by case when email_brand>'' then 1 else 0 end desc, case when brand = 'Aero' then 0 else 1 end, customer_retention_date_brand desc nulls last, last_date_brand desc nulls last, nvl(last_email_open_date_brand,last_subscription_date_brand) desc) brand,\n                           first_value(brand_preference)              over (partition by cid order by case when email_brand>'' then 1 else 0 end desc, case when brand = 'Aero' then 0 else 1 end, customer_retention_date_brand desc nulls last, last_date_brand desc nulls last, nvl(last_email_open_date_brand,last_subscription_date_brand) desc) brand_preference,\n                           first_value(brand_engagement)              over (partition by cid order by case when email_brand>'' then 1 else 0 end desc, case when brand = 'Aero' then 0 else 1 end, customer_retention_date_brand desc nulls last, last_date_brand desc nulls last, nvl(last_email_open_date_brand,last_subscription_date_brand) desc) brand_engagement,\n                           first_value(email_brand) \t              over (partition by cid order by case when email_brand>'' then 1 else 0 end desc, case when brand = 'Aero' then 0 else 1 end, customer_retention_date_brand desc nulls last, last_date_brand desc nulls last, nvl(last_email_open_date_brand,last_subscription_date_brand) desc) email_brand,\n                           first_value(first_date_brand)              over (partition by cid order by case when email_brand>'' then 1 else 0 end desc, case when brand = 'Aero' then 0 else 1 end, customer_retention_date_brand desc nulls last, last_date_brand desc nulls last, nvl(last_email_open_date_brand,last_subscription_date_brand) desc) first_date_brand,\n                           first_value(customer_retention_date_brand) over (partition by cid order by case when email_brand>'' then 1 else 0 end desc, case when brand = 'Aero' then 0 else 1 end, customer_retention_date_brand desc nulls last, last_date_brand desc nulls last, nvl(last_email_open_date_brand,last_subscription_date_brand) desc) customer_retention_date_brand\n            from ${Database}.live.cid_brand acb\n\t\t\tjoin ${Database}.live.ref_brand arb on arb.brand_id = acb.brand_id\n            where arb.division='Confectionery'\n                  and brand_campaignable = 1 and emailable=1\n                  and email_brand > '') cb on cd.cid=cb.cid \nleft join ${Database}.db.names          na   on na.bbw_urn = cast(tbw.db.strchop(cb.cid_brand_urn,'-',1,1) as int)\nleft join ${Database}.db.Confec_Aero_Exclusions_CID_View xc on cd.cid = xc.cid\nleft join ${Database}.db.Confec_Aero_Exclusions_Email_View xe on cb.email_brand = xe.email_brand\nwhere    rdiv.division='Confectionery'\nand      ((cdiv.emailable = 1  and cdiv.first_date_division is not null)\n            or cb.cid is not null)\nand      lower(cd.country) in ('united kingdom','')\nand      not cd.postcode ilike any ('%ireland', '%^je[0-9]%', '%^gy[0-9]%', '%^im[0-9]%')\nand      lower(cd.county) not in ('co. kerry ireland', 'isle of man','westmeath', 'channel islands')\nand      not cd.county ilike any ('%channel%', '%isle of man%')\nand      not cd.add1||cd.add2||cd.town||cd.county||cd.postcode ilike any ('%bfpo%', '%b f p o%', '%b.f.p.o%', '%b. f. p. o%')\nand      not cd.town ilike any  ('%jersey%', '%guernsey%' , '%isle of man%', '%dublin%')\nand      cd.cid not in (select cid from ${Database}.live.cid_details \n                                   where (country is null or country = '')\n                                   and \tpostcode > ''\n                                   and not regexp_like (postcode, '[a-zA-Z]{1}.*')\n                         )\nand      (c.dob is null or c.dob < add_months(current_date(),-216))\nand\t\t xc.cid is null and xe.email_brand is null\n       ) em\nwhere em.em_run = 1\n  )b\nwhere b.c_run = 1\n;\n \n \nCreate or replace table ${Database}.jobs.NUK10079_Confec_Aero_Seeds \n (\n   \tNAME_URN varchar(150),\n\tFORENAME varchar(50),\n\tLASTNAME    varchar(50),\n\tEMAIL varchar(100),\n    SPLIT_TEST varchar(1),\n\tCELL varchar(20),\n\tBATCH varchar(20),\n\tKOG_PACK varchar(20)\n   )\n   ;\n   \ninsert into ${Database}.jobs.NUK10079_Confec_Aero_Seeds \n   \nvalues\n('999999',\t'Helena\t',\t'Clark',\t'Helena.clark@blueberrywave.com'\t,'','seeds','',''),\n('999999',\t'Vitanee',\t'Oliver',\t'Vitanee@blueberrywave.com'\t        ,'','seeds','',''),\n('999999',\t'Harriet',\t'Holland',\t'Harriet.Holland@blueberrywave.com'\t,'','seeds','',''),\n('999999',\t'Charlie',\t'Russell',\t'Charlie@blueberrywave.com'\t        ,'','seeds','',''),\n('999999',\t'Helena\t',\t'Symons',\t'Helena@blueberrywave.com'\t        ,'','seeds','',''),\n('999999',\t'Leanne\t',\t'Moore',\t'Leanne.moore@blueberrywave.com'\t,'','seeds','',''),\n('999999',\t'Samson' ,\t'Kovacs',\t'Samson.Kovacs@uk.nestle.com'\t\t,'','seeds','',''),\n('999999',\t'Digital',\t'Gmail',\t'hhgi.digital@gmail.com'\t        ,'','seeds','',''),\n('999999',\t'Digital',\t'Outlook',\t'hhgi.digital@outlook.com'\t        ,'','seeds','',''),\n('999999',\t'Digital',\t'Yahoo',\t'hhgi.digital@yahoo.com'\t        ,'','seeds','','')\n;\n\n\ncreate or replace view ${Database}.jobs.NUK10079_Confec_Aero_Consumers_A(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n    SPLIT_TEST,\n\tCELL_ID,\n\tPACK_ID,\n\tKOG_PACK\n) as\nselect name_urn, forename, email, split_test, cell_id,  batch as pack_id, kog_pack\nfrom ${Database}.db.Confec_Aero_View\nwhere recency in (1,2,3,4) and pack_id = 1\nunion all\nselect name_urn, forename, email, split_test, cell as cell_id, batch as pack_id, kog_pack\nfrom ${Database}.jobs.NUK10079_Confec_Aero_Seeds\n;\n\ncreate or replace view ${Database}.jobs.NUK10079_Confec_Aero_Consumers_B(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n    SPLIT_TEST,\n\tCELL_ID,\n\tPACK_ID,\n\tKOG_PACK\n) as\nselect name_urn, forename, email, split_test, cell_id, batch as pack_id, kog_pack\nfrom ${Database}.db.Confec_Aero_View\nwhere recency in (1,2,3,4) and pack_id = 2\nunion all\nselect name_urn, forename, email, split_test, cell as cell_id, batch as pack_id, kog_pack\nfrom ${Database}.jobs.NUK10079_Confec_Aero_Seeds\n;\n\ncreate or replace view ${Database}.jobs.NUK10079_Confec_Aero_Digital_Test_View(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n    SPLIT_TEST,\n\tCELL_ID,\n\tPACK_ID,\n\tKOG_PACK\n) as\nselect top 100 * \nfrom ${Database}.jobs.NUK10079_Confec_Aero_Consumers_A\nwhere name_urn<>'999999'\nunion\nselect top 100 * \nfrom ${Database}.jobs.NUK10079_Confec_Aero_Consumers_B\nwhere name_urn<>'999999'\n;\n*/     \n/*\n\t\t\tCEREALS\n*/\n     \n     \n     \n     \n/*     \ncreate or replace view ${Database}.JOBS.CEREALS_VIEW(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n\tSPLIT_TEST,\n\tBRAND_ID,\n\tBRAND_PREFERENCE,\n\tBRAND_ENGAGEMENT,\n\tCELL_ID,\n\tPACK_ID,\n\tRECENCY,\n\tKOG_PACK\n) as\n\nselect distinct      \n    \n    name_urn,\n    forename,\n    email,\n    case when batch in (1,3) then 'A'\n         when batch in (2,4) then 'B'\n         end as split_test,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    to_char(b.recency) as cell_id,\n    case when batch in (1,2) then '1'\n         when batch in (3,4) then '2' end as pack_id,\n    recency,\n    ('E'||'|'||'NUK10021'||'|'||'NUK10021_'||year(current_date)||TO_CHAR(CURRENT_DATE,'MM')||'|'||to_char(b.recency)||'|'||to_char(pack_id)) as kog_pack\nfrom ( \n  select \n    name_urn,\n    forename,\n    email,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    recency,\n    ntile(4) over(partition by recency order by hash('NUK10021'||email)) as batch,\n    row_number() over(partition by em.cid order by case when trim(forename) = '' then 1 else 0 end) as c_run\nfrom ( \n         select distinct cb.cid,\n             na.name_urn,\n             cb.email_brand as email,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             cb.customer_retention_date_brand,\n             case  when cb.customer_retention_date_brand >= add_months(current_date,-6)                                                                     then 1\n                   when cb.customer_retention_date_brand >= add_months(current_date,-12)and cb.customer_retention_date_brand < add_months(current_date,-6)  then 2\n                   when cb.customer_retention_date_brand >= add_months(current_date,-18)and cb.customer_retention_date_brand < add_months(current_date,-12) then 3\n                   when cb.customer_retention_date_brand >= add_months(current_date,-24)and cb.customer_retention_date_brand < add_months(current_date,-18) then 4            \n                   else 5\n             end as recency,\n             row_number() over(partition by cb.email_brand order by case when trim(cd.firstname) = '' then 1 else 0 end, cb.first_date_brand nulls last) as em_run\nfrom \tlive.cid_details  cd                                   \njoin \tlive.cid          cid on cd.cid = cid.cid \njoin \tlive.cid_brand \t  cb  on cd.cid = cb.cid                                                 \njoin \tlive.ref_brand \t  rb  on rb.brand_id = cb.brand_id \njoin    db.names          na  on na.bbw_urn = cast(tbw.db.strchop(cb.cid_brand_urn,'-',1,1) as int)\nleft join (\n               select distinct cid\n               from nestle.live.cid_business_unit\n               where business_unit_id = (select business_unit_id from live.ref_business_unit where business_unit = 'Cereal Partners UK')\n               and emailable = 1\n               and first_date_business_unit is not null\n          ) cbu on cd.cid =cbu.cid\nwhere    cb.business_unit_id = (select business_unit_id from live.ref_business_unit where business_unit = 'Cereal Partners UK') \nand      cb.emailable=1\nand      cb.division_id = 14\nand      (cb.brand_campaignable = 1 or cbu.cid is not null)\nand      lower(cd.country) in ('united kingdom','')\nand      not cd.postcode ilike any ('%ireland', '%^je[0-9]%', '%^gy[0-9]%', '%^im[0-9]%')\nand      lower(cd.county) not in ('co. kerry ireland', 'isle of man','westmeath', 'channel islands')\nand      not cd.county ilike any ('%channel%', '%isle of man%')\nand      not cd.add1||cd.add2||cd.town||cd.county||cd.postcode ilike any ('%bfpo%', '%b.f.p.o%')\nand      not cd.town ilike any  ('%jersey%', '%guernsey%' , '%isle of man%')\nand      cd.cid not in (select cid from live.cid_details \n                                   where (country is null or country = '')\n                                   and \tpostcode > ''\n                                   and not regexp_like (postcode, '[a-zA-Z]{1}.*')\n                         )\nand       lower(cb.email_brand) not in (select lower(email) from nestle.temp.NPP09054_suppression_profiles )\nand      (cid.dob is null or cid.dob < add_months(current_date(),-216))\n       ) em\nwhere em.em_run = 1\n  )b\n where b.c_run = 1\n ;\n \n \n \n Create or replace table ${Database}.JOBS.NUK10021_Cereals_Seeds \n (\n   \tNAME_URN varchar(150),\n\tFORENAME varchar(50),\n\tLASTNAME    varchar(50),\n\tEMAIL varchar(100),\n\tSPLIT_TEST varchar(1),\n\tCELL varchar(20),\n\tBATCH varchar(20),\n\tKOG_PACK varchar(20),\n   \n   )\n   ;\n   \n \n   \nInsert into ${Database}.jobs.NUK10021_Cereals_Seeds \n   \nvalues\n('999999',\t'Helena\t', 'Clark',\t    'Helena.clark@blueberrywave.com'\t,'','seeds','',''),\t\n('999999',\t'Vitanee',\t'Oliver',\t'Vitanee@blueberrywave.com'\t        ,'','seeds','',''),\t\n('999999',\t'Harriet',\t'Holland',\t'Harriet.Holland@blueberrywave.com'\t,'','seeds','',''),\t\n('999999',\t'Charlie',\t'Russell',\t'Charlie@blueberrywave.com'\t        ,'','seeds','',''),\t\n('999999',\t'Helena\t', 'Symons',\t'Helena@blueberrywave.com'\t        ,'','seeds','',''),\t\n('999999',\t'Leanne\t', 'Moore',\t    'Leanne.moore@blueberrywave.com'\t,'','seeds','',''),\t\n('999999',\t'Jack'   , 'Showell',\t'Jack.Showell@cpuk.nestle.com'\t    ,'','seeds','',''),\t\t\t\n('999999',\t'Digital',\t'Gmail',\t'hhgi.digital@gmail.com'\t        ,'','seeds','',''),\t\n('999999',\t'Digital',\t'Outlook',\t'hhgi.digital@outlook.com'\t        ,'','seeds','',''),\t\n('999999',\t'Digital',\t'Yahoo',\t'hhgi.digital@yahoo.com'\t        ,'','seeds','','')\t\t\n;\n\ncreate or replace view ${Database}.JOBS.NUK10021_CEREALS_CONSUMERS_A(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n\tSPLIT_TEST,\n\tCELL_ID,\n\tPACK_ID,\n\tKOG_PACK\n) as\nselect name_urn, forename, email, split_test, cell_id, pack_id, kog_pack\nfrom ${Database}.jobs.cereals_view\nwhere recency in (1,2,3,4) and pack_id = 1\nunion all\nselect name_urn, forename, email, cell as cell_id, batch as pack_id, kog_pack, split_test\nfrom ${Database}.jobs.NUK10021_Cereals_seeds\n;\n\ncreate or replace view ${Database}.JOBS.NUK10021_CEREALS_CONSUMERS_B(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n    SPLIT_TEST,\n\tCELL_ID,\n\tPACK_ID,\n\tKOG_PACK\n) as\nselect name_urn, forename, email,split_test, cell_id, pack_id, kog_pack\nfrom ${Database}.jobs.cereals_view\nwhere recency in (1,2,3,4) and pack_id = 2\nunion all\nselect name_urn, forename, email, cell as cell_id, batch as pack_id, kog_pack , split_test\nfrom ${Database}.jobs.NUK10021_Cereals_seeds\n;\n\ncreate or replace view ${Database}.JOBS.NUK10021_CEREALS_DIGITAL_TEST_VIEW(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n\tSPLIT_TEST,\n\tCELL_ID,\n\tPACK_ID,\n\tKOG_PACK\n) as\nselect top 100 * \nfrom ${Database}.JOBS.NUK10021_CEREALS_CONSUMERS_A\nwhere name_urn<>'999999'\nunion \nselect top 100 * \nfrom ${Database}.JOBS.NUK10021_CEREALS_CONSUMERS_B\nwhere name_urn<>'999999'\n;\n*/\n/*\n\t\t\tPurina Direct (Cat)\n*/\n\ncreate or replace view ${Database}.db.Purina_Direct_Cat_BrandInc_View(\n\tCID\n\t) as\nselect distinct\n    cid\nfrom \tlive.cid_brand cb\njoin \tlive.ref_brand rb on rb.brand_id = cb.brand_id \nwhere   lower(rb.brand) in ('felix','gourmet')\nand     cb.brand_campaignable = 1\n;\n\n\ncreate or replace view ${Database}.db.Purina_Direct_Cat_View(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n\tBRAND_ID,\n\tBRAND_PREFERENCE,\n\tBRAND_ENGAGEMENT,\n\tCELL_ID,\n\tPACK_ID,\n\tRECENCY,\n    PET_SEG,\n\tKOG_PACK\n) as\n\nselect distinct          \n    name_urn,\n    forename,\n    email,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    to_char(b.recency) as cell_id,\n\t'1' as pack_id,\n    recency,\n    pet_seg,\n    ('E'||'|'||'NPP10287'||'|'||'NPP10287_'||year(current_date)||TO_CHAR(CURRENT_DATE,'MM')||'|'||to_char(b.recency)||'|1') as kog_pack\nfrom ( \n  select \n    name_urn,\n    forename,\n    email,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    recency,\n    pet_seg,\n    row_number() over(partition by em.cid order by case when trim(forename) = '' then 1 else 0 end, recency) as c_run\nfrom ( \n         select distinct cb.cid,\n             case \n\t\t\t\twhen cb.email_brand > '' then na.name_urn\n\t\t\t\telse cd.name_urn end as name_urn,\n             cb.email_brand as email,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             cb.brand_id,\n             rb.brand,\n             cb.brand_preference,\n             cb.brand_engagement,\n             cb.customer_retention_date_brand,\n             case  when cb.customer_retention_date_brand >= add_months(current_date,-6)                                                                     then 1\n                   when cb.customer_retention_date_brand >= add_months(current_date,-12)and cb.customer_retention_date_brand < add_months(current_date,-6)  then 2\n                   when cb.customer_retention_date_brand >= add_months(current_date,-18)and cb.customer_retention_date_brand < add_months(current_date,-12) then 3\n                   when cb.customer_retention_date_brand >= add_months(current_date,-24)and cb.customer_retention_date_brand < add_months(current_date,-18) then 4            \n                   else 5\n             end as recency,\n             case when c.have_cat in ('Y','IN','IO') and c.have_dog in ('Y','IN','IO') then 'Both'\n                  when c.have_cat in ('Y','IN','IO') then 'Cat'\n                  when c.have_dog in ('Y','IN','IO') then 'Dog'               --will be zero\n                  when c.have_cat = 'N' and c.have_dog = 'N' then 'Unknown'   --will be zero\n             end as pet_seg,\n             row_number() over(partition by cb.email_brand order by case when trim(cd.firstname) = '' then 1 else 0 end, cb.customer_retention_date_brand desc, cb.first_date_brand nulls last) as em_run\nfrom \tlive.cid_details  cd                                   \njoin \tlive.cid          c  on cd.cid = c.cid \njoin    live.cid_brand cb on cd.cid = cb.cid and cb.brand_campaignable = 1 and cb.emailable=1 and cb.email_brand > ''\njoin    live.ref_brand rb on rb.brand_id = cb.brand_id\nleft join   db.names          na   on na.bbw_urn = cast(tbw.db.strchop(cb.cid_brand_urn,'-',1,1) as int)\nleft join   db.Purina_Direct_Cat_BrandInc_View cat on cd.cid = cat.cid\nwhere    lower(rb.brand) = 'purina direct'\nand      (c.have_cat in ('Y','IN','IO') or cat.cid is not null)\nand      lower(cd.country) in ('united kingdom','guernsey','isle of man','jersey','')\nand      not cd.postcode ilike any ('%ireland', '%dublin%')\nand      lower(cd.county) not in ('co. kerry ireland','westmeath')\nand      not cd.add1||cd.add2||cd.town||cd.county||cd.postcode ilike any ('%bfpo%', '%b f p o%', '%b.f.p.o%', '%b. f. p. o%')\nand      not cd.town ilike any  ('%dublin%')\nand      cd.cid not in (select cid from live.cid_details \n                                   where (country is null or country = '')\n                                   and \tpostcode > ''\n                                   and not regexp_like (postcode, '[a-zA-Z]{1}.*')\n                         )\nand      (c.dob is null or c.dob < add_months(current_date(),-216))\n       ) em\nwhere em.em_run = 1\n  )b\nwhere b.c_run = 1\n;\n \n \nCreate or replace table ${Database}.jobs.NPP10287_Purina_Direct_Cat_Seeds \n (\n   \tNAME_URN varchar(150),\n\tFORENAME varchar(50),\n\tLASTNAME varchar(50),\n\tEMAIL    varchar(100),\n\tCELL_ID  varchar(20),\n\tPACK_ID  varchar(20),\n\tKOG_PACK varchar(20)\n   )\n   ;\n   \ninsert into ${Database}.jobs.NPP10287_Purina_Direct_Cat_Seeds    \nvalues\n('999999',\t'Helena\t',\t'Clark'    ,\t'Helena.clark@blueberrywave.com'\t    ,'seeds','',''),\n('999999',\t'Vitanee',\t'Oliver'   ,\t'Vitanee@blueberrywave.com'\t            ,'seeds','',''),\n('999999',\t'Harriet',\t'Holland'  ,\t'Harriet.Holland@blueberrywave.com'\t    ,'seeds','',''),\n('999999',\t'James'  ,\t'Barklem'  ,\t'James.barklem@blueberrywave.com'       ,'seeds','',''),\n('999999',\t'Helena\t',\t'Symons'   ,\t'Helena@blueberrywave.com'\t            ,'seeds','',''),\n('999999',\t'Leanne\t',\t'Moore'    ,\t'Leanne.moore@blueberrywave.com'\t    ,'seeds','',''),\n('999999',\t'Charley',\t'Wilkinson',\t'Charlotte.Wilkinson@purina.nestle.com'\t,'seeds','',''),\n('999999',\t'Digital',\t'Gmail'    ,\t'hhgi.digital@gmail.com'\t            ,'seeds','',''),\n('999999',\t'Digital',\t'Outlook'  ,\t'hhgi.digital@outlook.com'\t            ,'seeds','',''),\n('999999',\t'Digital',\t'Yahoo'    ,\t'hhgi.digital@yahoo.com'\t            ,'seeds','','')\n;\n\n\ncreate or replace view ${Database}.jobs.NPP10287_Purina_Direct_Cat_Consumers_view(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n\tCELL_ID,\n\tPACK_ID,\n\tKOG_PACK\n) as\nselect name_urn, forename, email, cell_id, pack_id, kog_pack\nfrom ${Database}.db.Purina_Direct_Cat_View\nwhere recency in (1,2,3,4)\nunion all\nselect name_urn, forename, email, cell_id, pack_id, kog_pack\nfrom ${Database}.jobs.NPP10287_Purina_Direct_Cat_Seeds\n;\n\n\ncreate or replace view ${Database}.jobs.NPP10287_Purina_Direct_Cat_Digital_Test_View(\n\tNAME_URN,\n\tFORENAME,\n\tEMAIL,\n\tCELL_ID,\n\tPACK_ID,\n\tKOG_PACK\n) as\nselect top 200 * \nfrom ${Database}.jobs.NPP10287_Purina_Direct_Cat_Consumers_view\nwhere name_urn<>'999999'\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234169":{"id":234169,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-416,"y":240,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[234192,234194,234198],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234170":{"id":234170,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-240,"y":240,"width":32,"height":32,"inputConnectorIDs":[234192],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Carnation Manual Jobs"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Carnation Manual Jobs"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234172":{"id":234172,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-560,"y":-32,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[234193],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234173":{"id":234173,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-240,"y":368,"width":32,"height":32,"inputConnectorIDs":[234198],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Purina Direct Cat Manual Jobs"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Purina Direct Cat Manual Jobs"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234174":{"id":234174,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-240,"y":304,"width":32,"height":32,"inputConnectorIDs":[234194],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Confec Aero Manual Jobs"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Confec Aero Manual Jobs"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234175":{"id":234175,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":235671163,"x":-218,"y":41,"width":32,"height":32,"inputConnectorIDs":[234188,234190],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[234199],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234176":{"id":234176,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"ITERATE","implementationID":-424773870,"x":-48,"y":-32,"width":32,"height":16,"inputConnectorIDs":[234186],"outputSuccessConnectorIDs":[234184],"outputFailureConnectorIDs":[234197],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"},"7":{"slot":7,"fromId":null,"fromName":"Status","mapTo":"Error_Status"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Grid Iterator 0"}}}},"visible":true},"3":{"slot":3,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AutomatedEmailExtract"}}}},"visible":true},"4":{"slot":4,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"TableName"},"2":{"slot":2,"type":"STRING","value":"TableName"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Filename"},"2":{"slot":2,"type":"STRING","value":"Filename"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"ExtractDB"},"2":{"slot":2,"type":"STRING","value":"ExtractDB"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"ExtractSchema"},"2":{"slot":2,"type":"STRING","value":"ExtractSchema"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"ExtractFolder"},"2":{"slot":2,"type":"STRING","value":"ExtractFolder"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"ExtractDelimiter"},"2":{"slot":2,"type":"STRING","value":"ExtractDelimiter"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"Date_format"},"2":{"slot":2,"type":"STRING","value":"Date_format"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"Time_format"},"2":{"slot":2,"type":"STRING","value":"Time_format"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"Timestamp_format"},"2":{"slot":2,"type":"STRING","value":"Timestamp_format"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"Encoding"},"2":{"slot":2,"type":"STRING","value":"Encoding"}}},"11":{"slot":11,"values":{"1":{"slot":1,"type":"STRING","value":"Extra_parameters"},"2":{"slot":2,"type":"STRING","value":"Extra_parameters"}}},"12":{"slot":12,"values":{"1":{"slot":1,"type":"STRING","value":"HeaderFlag"},"2":{"slot":2,"type":"STRING","value":"HeaderFlag"}}},"13":{"slot":13,"values":{"1":{"slot":1,"type":"STRING","value":"Stage"},"2":{"slot":2,"type":"STRING","value":"DatabaseStage"}}}},"visible":true},"5":{"slot":5,"name":"Break on Failure","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":false},"6":{"slot":6,"name":"Concurrency","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Concurrent"}}}},"visible":true},"7":{"slot":7,"name":"Stop on Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"No"}}}},"visible":false},"8":{"slot":8,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":false},"9":{"slot":9,"name":"Condition","elements":{},"visible":false},"10":{"slot":10,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":false},"11":{"slot":11,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"999":{"slot":999,"name":"Record Values In Task History","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Yes"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[234196],"inputIterationConnectorIDs":[]},"234177":{"id":234177,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1155583855,"x":-128,"y":-32,"width":32,"height":32,"inputConnectorIDs":[234199],"outputSuccessConnectorIDs":[234186],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"},"7":{"slot":7,"fromId":null,"fromName":"Status","mapTo":"Error_Status"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Get Tables to Extract"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Basic"}}}},"visible":true},"3":{"slot":3,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":true},"4":{"slot":4,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AUTOMATED_EMAIL_OUTPUTS"}}}},"visible":true},"6":{"slot":6,"name":"Table Columns","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_DATABASE"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_SCHEMA"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_TABLE_NAME"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_FILE_NAME"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_DIRECTORY"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_DELIMITED"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_DAY"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_SET"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"DATE_FORMAT"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"TIME_FORMAT"}}},"11":{"slot":11,"values":{"1":{"slot":1,"type":"STRING","value":"TIMESTAMP_FORMAT"}}},"12":{"slot":12,"values":{"1":{"slot":1,"type":"STRING","value":"ENCODING"}}},"13":{"slot":13,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRA_PARAMETERS"}}},"14":{"slot":14,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_HEADER"}}},"15":{"slot":15,"values":{"1":{"slot":1,"type":"STRING","value":"STAGE"}}}},"visible":true},"7":{"slot":7,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/* Note: This query will be run as a subquery for the purposes of sampling the data. As such it will be restricted by any subquery limitations specified by the current platform.*/"}}}},"visible":false},"8":{"slot":8,"name":"Grid Variable","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AutomatedEmailExtract"}}}},"visible":true},"9":{"slot":9,"name":"Grid Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_TABLE_NAME"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_FILE_NAME"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_DATABASE"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_SCHEMA"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_DIRECTORY"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_DELIMITED"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"DATE_FORMAT"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"TIME_FORMAT"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"TIMESTAMP_FORMAT"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"ENCODING"}}},"11":{"slot":11,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRA_PARAMETERS"}}},"12":{"slot":12,"values":{"1":{"slot":1,"type":"STRING","value":"EXTRACT_HEADER"}}},"13":{"slot":13,"values":{"1":{"slot":1,"type":"STRING","value":"STAGE"}}}},"visible":true},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":true},"11":{"slot":11,"name":"Order By","elements":{},"visible":true},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":true},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":true},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":true},"20":{"slot":20,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"TEMP"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234178":{"id":234178,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-288,"y":-32,"width":32,"height":32,"inputConnectorIDs":[234191],"outputSuccessConnectorIDs":[234190],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"},"7":{"slot":7,"fromId":null,"fromName":"Status","mapTo":"Error_Status"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create Extract Table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create or replace table ${Database}.temp.automated_email_outputs\nas\nselect\n    extract_database,\n    extract_schema,\n    extract_table_name,\n    replace(extract_file_name,'<outputdate>',to_char(current_date,extract_file_date)) as extract_file_name,\n    extract_directory,\n    extract_delimited,\n    extract_day,\n    extract_set,\n    date_format,\n    time_format,\n    timestamp_format,\n    encoding,\n    extra_parameters,\n    extract_header,\n    replace(stage,'NESTLE','${Database}') as stage\nfrom ${Database}.db.data_feeds_outputs\nwhere extract_set = 'AUTOMATED_EMAIL'\n    and (extract_day = 'ALL' or extract_day = upper(dayname(current_date)));"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234179":{"id":234179,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-432,"y":-32,"width":32,"height":32,"inputConnectorIDs":[234193],"outputSuccessConnectorIDs":[234191,234195],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"},"7":{"slot":7,"fromId":null,"fromName":"Status","mapTo":"Error_Status"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Log Extract Start"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into tbw.db.monitoring\n(monitoring_timestamp,client,process,description,sub_description,value)\nselect\nCURRENT_TIMESTAMP::timestamp_ntz\n,'${Database}'\n,'BUILD'\n,'AUTOMATED EMAIL EXTRACTS'\n,'BUILD'\n,'STARTED'\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234180":{"id":234180,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":384,"y":-32,"width":32,"height":32,"inputConnectorIDs":[234185],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Extract Success"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234181":{"id":234181,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":80,"y":-32,"width":32,"height":32,"inputConnectorIDs":[234184],"outputSuccessConnectorIDs":[234189],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"},"7":{"slot":7,"fromId":null,"fromName":"Status","mapTo":"Error_Status"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Log Extract Finished"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into tbw.db.monitoring\n(monitoring_timestamp,client,process,description,sub_description,value)\nselect\nCURRENT_TIMESTAMP::timestamp_ntz\n,'${Database}'\n,'BUILD'\n,'EMAIL OUTPUTS EXTRACT'\n,'BUILD'\n,'FINISHED'\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234182":{"id":234182,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-48,"y":112,"width":32,"height":32,"inputConnectorIDs":[234197],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Extract Failure"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"234183":{"id":234183,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"TRANSFORM","implementationID":1785813072,"x":-48,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"},"7":{"slot":7,"fromId":null,"fromName":"Status","mapTo":"Error_Status"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"External Extract Loop"}}}},"visible":true},"2":{"slot":2,"name":"Orchestration Job","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"External Extract Loop"}}}},"visible":true},"3":{"slot":3,"name":"","elements":{},"visible":false},"4":{"slot":4,"name":"Set Scalar Variables","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Date_format"},"2":{"slot":2,"type":"STRING","value":"${Date_format}"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Encoding"},"2":{"slot":2,"type":"STRING","value":"${Encoding}"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"Extra_parameters"},"2":{"slot":2,"type":"STRING","value":"${Extra_parameters}"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"ExtractDB"},"2":{"slot":2,"type":"STRING","value":"${ExtractDB}"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"ExtractDelimiter"},"2":{"slot":2,"type":"STRING","value":"${ExtractDelimiter}"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"ExtractFolder"},"2":{"slot":2,"type":"STRING","value":"${ExtractFolder}"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"ExtractSchema"},"2":{"slot":2,"type":"STRING","value":"${ExtractSchema}"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"Filename"},"2":{"slot":2,"type":"STRING","value":"${Filename}"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"TableName"},"2":{"slot":2,"type":"STRING","value":"${TableName}"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"Time_format"},"2":{"slot":2,"type":"STRING","value":"${Time_format}"}}},"11":{"slot":11,"values":{"1":{"slot":1,"type":"STRING","value":"Timestamp_format"},"2":{"slot":2,"type":"STRING","value":"${Timestamp_format}"}}},"12":{"slot":12,"values":{"1":{"slot":1,"type":"STRING","value":"HeaderFlag"},"2":{"slot":2,"type":"STRING","value":"${HeaderFlag}"}}},"13":{"slot":13,"values":{"1":{"slot":1,"type":"STRING","value":"DatabaseStage"},"2":{"slot":2,"type":"STRING","value":"${DatabaseStage}"}}}},"visible":true},"5":{"slot":5,"name":"Set Grid Variables","elements":{},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[234196]},"234187":{"id":234187,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":224,"y":-32,"width":32,"height":32,"inputConnectorIDs":[234189],"outputSuccessConnectorIDs":[234185],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Automated Extract Counts Refresh"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${SQSClient}_reporting.fifo"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database} REPORT Automated_Extracts"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Plain"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}_REPORTS"}}}},"visible":true},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${DateForQueue.now().format(\"yyyyMMddHHmmssSSS\")}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"234184":{"id":234184,"sourceID":234176,"targetID":234181},"234185":{"id":234185,"sourceID":234187,"targetID":234180},"234186":{"id":234186,"sourceID":234177,"targetID":234176},"234188":{"id":234188,"sourceID":234168,"targetID":234175},"234189":{"id":234189,"sourceID":234181,"targetID":234187},"234190":{"id":234190,"sourceID":234178,"targetID":234175},"234191":{"id":234191,"sourceID":234179,"targetID":234178},"234195":{"id":234195,"sourceID":234179,"targetID":234168}},"failureConnectors":{"234197":{"id":234197,"sourceID":234176,"targetID":234182}},"unconditionalConnectors":{"234192":{"id":234192,"sourceID":234169,"targetID":234170},"234193":{"id":234193,"sourceID":234172,"targetID":234179},"234194":{"id":234194,"sourceID":234169,"targetID":234174},"234198":{"id":234198,"sourceID":234169,"targetID":234173},"234199":{"id":234199,"sourceID":234175,"targetID":234177}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{"234196":{"id":234196,"sourceID":234176,"targetID":234183}},"noteConnectors":{},"notes":{"234171":{"id":234171,"x":-613,"y":168,"width":566,"height":265,"text":"This part has to be run manually whenever the email is actually going to be output.  \nUpdate all job variables for the brand you are extracting e.g. Carnation_","colour":"e6e63c"}},"variables":{"CheckVolM":{"definition":{"name":"CheckVolM","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"CheckVolS":{"definition":{"name":"CheckVolS","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"DatabaseStage":{"definition":{"name":"DatabaseStage","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"DateForQueue":{"definition":{"name":"DateForQueue","type":"DATETIME","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2020-03-19"},"Date_format":{"definition":{"name":"Date_format","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"Encoding":{"definition":{"name":"Encoding","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"Extra_parameters":{"definition":{"name":"Extra_parameters","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":",FIELD_OPTIONALLY_ENCLOSED_BY"},"ExtractDB":{"definition":{"name":"ExtractDB","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"ExtractDelimiter":{"definition":{"name":"ExtractDelimiter","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"ExtractFolder":{"definition":{"name":"ExtractFolder","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"ExtractSchema":{"definition":{"name":"ExtractSchema","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"LIVE"},"Filename":{"definition":{"name":"Filename","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"cid_brand.txt"},"HeaderFlag":{"definition":{"name":"HeaderFlag","type":"DECIMAL","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"1"},"OutputSet":{"definition":{"name":"OutputSet","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"BUILD"},"SQSQueue":{"definition":{"name":"SQSQueue","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"${SQSClient}_reformat.fifo"},"Schema":{"definition":{"name":"Schema","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"DB"},"SingleFile":{"definition":{"name":"SingleFile","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"True"},"TableName":{"definition":{"name":"TableName","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":"CID_BRAND"},"Time_format":{"definition":{"name":"Time_format","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"Timestamp_format":{"definition":{"name":"Timestamp_format","type":"TEXT","scope":"BRANCH","description":"","visibility":"PUBLIC"},"value":""},"WarehouseSize":{"definition":{"name":"WarehouseSize","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"XLARGE"}},"grids":{"AutomatedEmailExtract":{"definition":{"name":"AutomatedEmailExtract","scope":"BRANCH","definitions":[{"name":"TableName","type":"TEXT"},{"name":"Filename","type":"TEXT"},{"name":"ExtractDB","type":"TEXT"},{"name":"ExtractSchema","type":"TEXT"},{"name":"ExtractFolder","type":"TEXT"},{"name":"ExtractDelimiter","type":"TEXT"},{"name":"Date_format","type":"TEXT"},{"name":"Time_format","type":"TEXT"},{"name":"Timestamp_format","type":"TEXT"},{"name":"Encoding","type":"TEXT"},{"name":"Extra_parameters","type":"TEXT"},{"name":"HeaderFlag","type":"DECIMAL"},{"name":"Stage","type":"TEXT"}],"description":"","visibility":"PUBLIC"},"values":[{"values":["XYZ","X","HCP","TEMP","True","","","","","","","1",""]}]}}},"info":{"name":"Automated Extracts","description":"","type":"ORCHESTRATION","tag":"84102eb6-12d8-4853-92ef-c5f811b4d81b"}}