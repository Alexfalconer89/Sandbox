{"job":{"components":{"197092":{"id":197092,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1041475954,"x":-2144,"y":-288,"width":32,"height":32,"inputConnectorIDs":[197121],"outputSuccessConnectorIDs":[197120],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"},"5":{"slot":5,"fromId":null,"fromName":"Status","mapTo":"Error_Status"},"6":{"slot":6,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"7":{"slot":7,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AIO FaststatsOutput"}}}},"visible":true},"2":{"slot":2,"name":"Bucket","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Bucket}"}}}},"visible":true},"3":{"slot":3,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":true},"4":{"slot":4,"name":"Filename","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"X"}}}},"visible":true},"5":{"slot":5,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"DB"}}}},"visible":true},"6":{"slot":6,"name":"SQSQueue","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${SQSClient}_faststats.fifo"}}}},"visible":true},"7":{"slot":7,"name":"TableName","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"X"}}}},"visible":true},"8":{"slot":8,"name":"DateForQueue","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"DATETIME","value":"2020-03-19"}}}},"visible":true},"9":{"slot":9,"name":"FaststatsOutputs","elements":{},"visible":true},"10":{"slot":10,"name":"ExtractDB","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":true},"11":{"slot":11,"name":"ExtractSchema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"LIVE"}}}},"visible":true},"12":{"slot":12,"name":"WarehouseSize","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SMALL"}}}},"visible":true},"13":{"slot":13,"name":"SingleFile","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"True"}}}},"visible":true},"14":{"slot":14,"name":"InternalStage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}.db.faststats_extract"}}}},"visible":true},"15":{"slot":15,"name":"Date_format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"X"}}}},"visible":true},"16":{"slot":16,"name":"Time_format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"X"}}}},"visible":true},"17":{"slot":17,"name":"Timestamp_format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"X"}}}},"visible":true},"18":{"slot":18,"name":"Encoding","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"X"}}}},"visible":true},"19":{"slot":19,"name":"Extra_parameters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"X"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197096":{"id":197096,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-2032,"y":-288,"width":32,"height":32,"inputConnectorIDs":[197120],"outputSuccessConnectorIDs":[197123],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Drop output tables"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"drop table if exists ${Database}.temp.aio_faststats_cid;\ndrop table if exists ${Database}.temp.aio_faststats_cid_brand;\ndrop table if exists ${Database}.temp.aio_faststats_ref_brand;\ndrop table if exists ${Database}.temp.aio_faststats_ref_division;\ndrop table if exists ${Database}.temp.aio_faststats_cid_xref_email;\ndrop table if exists ${Database}.temp.aio_faststats_cid_brand_details;\ndrop table if exists ${Database}.temp.aio_faststats_cid_brand_question;\ndrop table if exists ${Database}.temp.aio_faststats_cid_brand_product;\ndrop table if exists ${Database}.temp.aio_faststats_shopmium_rewards;\ndrop table if exists ${Database}.temp.aio_faststats_comms_hist;\ndrop table if exists ${Database}.temp.aio_faststats_comms_hist_lookup;\ndrop table if exists ${Database}.temp.aio_faststats_adestra_events;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"DISABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197097":{"id":197097,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-2384,"y":-288,"width":32,"height":32,"inputConnectorIDs":[197127],"outputSuccessConnectorIDs":[197122],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Log FS Feeds Start"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into tbw.db.monitoring\n(monitoring_timestamp,client,process,description,sub_description,value)\nselect\nCURRENT_TIMESTAMP::timestamp_ntz\n,'${Database}'\n,'BUILD'\n,'FS FEEDS OUT'\n,'BUILD'\n,'STARTED'\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197098":{"id":197098,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-1920,"y":-288,"width":32,"height":32,"inputConnectorIDs":[197123],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Log FS Feeds End"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into tbw.db.monitoring\n(monitoring_timestamp,client,process,description,sub_description,value)\nselect\nCURRENT_TIMESTAMP::timestamp_ntz\n,'${Database}'\n,'BUILD'\n,'FS FEEDS OUT'\n,'BUILD'\n,'FINISHED'\n;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197099":{"id":197099,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-2496,"y":-288,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[197127],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197100":{"id":197100,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-2272,"y":-288,"width":32,"height":32,"inputConnectorIDs":[197122],"outputSuccessConnectorIDs":[197121],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create tables for output"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/******************************************************************************************\nProgram           : Nestle AiO Faststats\nAuthor            : Luke Dudley\nClient Name       : Nestle\nJob Number        :\nStandard Machine  : Snowflake\nAmendment History : v01 - LD 20122021\n                    v02 - LW 20220314 Additional Fields for Orbit/New retention banding \n                    v03   LG 20220921 Added in a clause to remove test campaigns from the AIO_Adestra_Events table\n\t\t\t\t\tv04 - SM 20220802 Added new code that has been added to the \"Output for SMA FS\" extract since this was set up\n\t\t\t\t\tv05 - SM 20220909 Added additional fields missing from Discoverer for SMA campaigns\n\t\t\t\t\tv06 - Shira 20221010 Update the re-engagement code to stop duplicate inserts and added sma engagement cluster new field.\n******************************************************************************************/\n\n/******************************************************************************************\n                                     AiO FASTSTATS\n******************************************************************************************/\n\n--NOTE: FastStats integers are a maximum of 2.1 billion\n\n/*\n    Initial Selection\n*/\ncreate or replace table ${Database}.temp.aio_faststats_cid\nas\n--nestle live\nselect distinct\t\t\t\n    c.cid,\n    to_char(c.bbw_urn) as bbw_urn,\n    c.hid,\n    cast('' as varchar(1)) as churn_flag,\n    case when c.created_date < to_date('1999-01-01') then to_date('1999-01-01') else c.created_date end as acquisition_date,\n    cbu.dp_processing_expiry_date as expiry_date\nfrom ${Database}.live.cid c\njoin (select cid, max(dp_processing_expiry_date) as dp_processing_expiry_date from ${Database}.live.cid_business_unit group by cid) cbu on cbu.cid = c.cid\nwhere cbu.dp_processing_expiry_date >= current_date\n    and exists (select 1 from ${Database}.live.cid_brand cb\n                where c.cid=cb.cid and \n                    cb.division_id not in (select division_id from ${Database}.live.ref_division \n                                          where division in ('Lactalis','Nespresso','Deleted')\n                                          )\n               )\nunion\n--nestle churned\nselect distinct\t\t\t\n    c.cid,\n    'XXX-'||c.cid,\n    c.hid,\n    'Y' as churn_flag,\n    case when c.created_date < to_date('1999-01-01') then to_date('1999-01-01') else c.created_date end as acquisition_date,\n    cbu.dp_processing_expiry_date as expiry_date\nfrom ${Database}.live.cid c\njoin (select cid, max(dp_processing_expiry_date) as dp_processing_expiry_date from ${Database}.live.cid_business_unit group by cid) cbu on cbu.cid = c.cid\nwhere cbu.dp_processing_expiry_date >= add_months(current_date,-1)\n    and cbu.dp_processing_expiry_date < current_date\n    and exists (select 1 from ${Database}.live.cid_brand cb\n                where c.cid=cb.cid and \n                    cb.division_id not in (select division_id from ${Database}.live.ref_division \n                                          where division in ('Lactalis','Nespresso','Deleted')\n                                          )\n               )\n;\n\n\n/*\n        HCP Initial Selection\n*/\n\ninsert into ${Database}.temp.aio_faststats_cid\n--hcp live\nselect distinct\t\t\t\n    2000000000 + c.cid as cid,\n    'HCP-'||to_char(c.bbw_urn) as bbw_urn,\n    2000000000 + c.hid,\n    cast('' as varchar(1)) as churn_flag,\n    to_date(coalesce(c.first_registration, c.last_active_date)) as acquisition_date,\n    add_months(c.last_active_date,24) as expiry_date\nfrom ${DatabaseHCP}.live.cid c\nwhere c.last_active_date >= add_months(current_date,-24)\nunion\n--hcp churned\nselect distinct\t\t\t\n    2000000000 + c.cid as cid,\n    'XXX-HCP-'||to_char(2000000000 + c.cid),\n    2000000000 + c.hid,\n    'Y' as churn_flag,\n    to_date(coalesce(c.first_registration, c.last_active_date)) as acquisition_date,\n    add_months(c.last_active_date,24) as expiry_date\nfrom ${DatabaseHCP}.live.cid c\nwhere c.last_active_date >= add_months(current_date,-25)\n    and c.last_active_date < add_months(current_date,-24)\n;\n\n/*\n        HID\n*/\n\ncreate or replace table ${Database}.temp.aio_faststats_hid\nas\nselect h.hid\nfrom ${Database}.live.hid h\njoin (select distinct hid from ${Database}.temp.aio_faststats_cid) a on a.hid = h.hid\nunion\nselect 2000000000 + h.hid\nfrom ${DatabaseHCP}.live.hid h\njoin (select distinct hid from ${Database}.temp.aio_faststats_cid) a on a.hid = 2000000000 + h.hid\n;\n\n\n/*\n        Identify CIAM account holders per brand\n*/\n\ncreate or replace table  ${Database}.temp.aio_faststats_CIAM_accounts\nas\nselect \ncid\n,brand_id\n,division_id\n,business_unit_id\n,min(data_date) as first_reg_date\n,max(data_date) as last_activity_date\nfrom\n(\nselect distinct\n    xn.cid\n    ,np.brand_id\n    ,rb.division_id\n    ,rd.business_unit_id\n    ,np.data_date\nfrom ${Database}.db.names_preference np\njoin ${Database}.live.xref_name_urn xn on trim(np.name_urn) = xn.name_urn\nleft join ${Database}.live.ref_brand rb on np.brand_id = rb.brand_id\nleft join ${Database}.db.ref_division rd on rb.division_id = rd.division_id\nwhere np.source = 'REG_GIG' --have a gigya/ciam account\nand lower(np.source_file) not regexp '.*json.*'\n) t\ngroup by 1,2,3,4\n;\n\n/*\n    Reporting Division subsets for use in selections\n*/\n\ncreate or replace table ${Database}.temp.ref_reporting_bu_subset as \nselect business_unit_id, \n    50 + business_unit_id as reporting_division_id,\n    business_unit as reporting_division\nfrom ${Database}.live.ref_business_unit \nwhere lower(business_unit) not regexp '.*nestec.*|.*r&r.*|.*vitaflo.*|.*lactalis.*|.*nespresso.*|.*international.*'\n;\n\ncreate or replace table ${Database}.temp.ref_reporting_div_subset as \nselect division_id, \n    'Nestlé '||replace(division,'Nestle ','') as reporting_division\nfrom ${Database}.live.ref_division \nwhere division in ('Beverage','Confectionery','Food','Nestle Professional','Nestle Health Science')\n;\n\n\n\nalter warehouse set warehouse_size = 'Medium';\n\n/*\n        Brand level data\n*/\ncreate or replace table ${Database}.temp.aio_faststats_cid_brand\nas\nselect distinct\n    trim(to_char(cb.brand_id))||'-'||trim(to_char(cb.cid)) as cid_brand,\n    cb.cid,\n    cast(tbw.db.strchop(cb.cid_brand_urn,'-',1,1) as int) as brand_bbw_urn,\n    cb.business_unit_id,\n    cb.division_id,\n    coalesce(rds.division_id,rbus.reporting_division_id,cb.division_id) as reporting_division_id,\n    cb.brand_id,\n    case\n\t\twhen cs.cid is not null and cb.customer_retention_date_brand < add_months(current_date,-36) then 'Y'  --change for sma\n        when cs.cid is null     and cb.customer_retention_date_brand < add_months(current_date,-24) then 'Y'\n        else ''\n     end as churn_flag,\n    cast(case\n         when lower(cb.customer_retention_group_brand) regexp '.*data orphan.*' then 'Expiring'\n         else cb.customer_retention_group_brand\n     end as varchar(25)) as customer_retention_group,\n    cast(case\n         when lower(cb.customer_retention_group_brand) regexp '.*data orphan.*' then 'Expiring'\n         when cb.customer_retention_group_brand = 'New' and cb.customer_retention_date_brand <= c.acquisition_date and c.acquisition_date > add_months(current_date,-1)-1 then 'New Never Seen'\n         when cb.customer_retention_group_brand = 'New' then 'New To Brand'\n         else cb.customer_retention_group_brand\n     end as varchar(25)) as customer_retention_group_v2,\n    cb.customer_retention_date_brand as customer_retention_date,\n    case\n        when cb.customer_retention_date_brand >= add_months(current_date, -3)                                                                     then 'A: 0 - 3 Months'\n        when cb.customer_retention_date_brand >= add_months(current_date, -6) and cb.customer_retention_date_brand < add_months(current_date,-3)  then 'B: 4 - 6 Months'\n        when cb.customer_retention_date_brand >= add_months(current_date, -9) and cb.customer_retention_date_brand < add_months(current_date,-6)  then 'C: 7 - 9 Months'\n        when cb.customer_retention_date_brand >= add_months(current_date,-12) and cb.customer_retention_date_brand < add_months(current_date,-9)  then 'D: 10 - 12 Months'\n        when cb.customer_retention_date_brand >= add_months(current_date,-15) and cb.customer_retention_date_brand < add_months(current_date,-12) then 'E: 13 - 15 Months'\n        when cb.customer_retention_date_brand >= add_months(current_date,-18) and cb.customer_retention_date_brand < add_months(current_date,-15) then 'F: 16 - 18 Months'\n        when cb.customer_retention_date_brand >= add_months(current_date,-21) and cb.customer_retention_date_brand < add_months(current_date,-18) then 'G: 19 - 21 Months'\n        when cb.customer_retention_date_brand >= add_months(current_date,-24) and cb.customer_retention_date_brand < add_months(current_date,-21) then 'H: 22 - 24 Months'\n        else 'J: 24+ Months'\n    end as customer_retention_date_band,    \n    case\n\t\twhen cs.cid is not null and cb.customer_retention_date_brand_ios15 < add_months(current_date,-36) then 'Y'  --change for sma\n        when cs.cid is null     and cb.customer_retention_date_brand_ios15 < add_months(current_date,-24) then 'Y'\n        else ''\n     end as churn_flag_pilot,\n    cast(case\n         when lower(cb.customer_retention_group_brand_ios15) regexp '.*data orphan.*' then 'Expiring'\n         else cb.customer_retention_group_brand_ios15\n     end as varchar(25)) as customer_retention_group_pilot,\n    cast(case\n         when lower(cb.customer_retention_group_brand_ios15) regexp '.*data orphan.*' then 'Expiring'\n         when cb.customer_retention_group_brand = 'New' and cb.customer_retention_date_brand_ios15 <= c.acquisition_date and c.acquisition_date > add_months(current_date,-1)-1 then 'New Never Seen'\n         when cb.customer_retention_group_brand = 'New' then 'New To Brand'\n         else cb.customer_retention_group_brand_ios15\n     end as varchar(25)) as customer_retention_group_v2_pilot,\n    cb.customer_retention_date_brand_ios15 as customer_retention_date_pilot,\n    case\n        when cb.customer_retention_date_brand_ios15 >= add_months(current_date, -3)                                                                           then 'A: 0 - 3 Months'\n        when cb.customer_retention_date_brand_ios15 >= add_months(current_date, -6) and cb.customer_retention_date_brand_ios15 < add_months(current_date,-3)  then 'B: 4 - 6 Months'\n        when cb.customer_retention_date_brand_ios15 >= add_months(current_date, -9) and cb.customer_retention_date_brand_ios15 < add_months(current_date,-6)  then 'C: 7 - 9 Months'\n        when cb.customer_retention_date_brand_ios15 >= add_months(current_date,-12) and cb.customer_retention_date_brand_ios15 < add_months(current_date,-9)  then 'D: 10 - 12 Months'\n        when cb.customer_retention_date_brand_ios15 >= add_months(current_date,-15) and cb.customer_retention_date_brand_ios15 < add_months(current_date,-12) then 'E: 13 - 15 Months'\n        when cb.customer_retention_date_brand_ios15 >= add_months(current_date,-18) and cb.customer_retention_date_brand_ios15 < add_months(current_date,-15) then 'F: 16 - 18 Months'\n        when cb.customer_retention_date_brand_ios15 >= add_months(current_date,-21) and cb.customer_retention_date_brand_ios15 < add_months(current_date,-18) then 'G: 19 - 21 Months'\n        when cb.customer_retention_date_brand_ios15 >= add_months(current_date,-24) and cb.customer_retention_date_brand_ios15 < add_months(current_date,-21) then 'H: 22 - 24 Months'\n        else 'J: 24+ Months'\n    end as customer_retention_date_band_pilot,\n    case \n        when cb.customer_retention_date_brand=cb.customer_retention_date_brand_ios15 then 'U'       --Unchanged\n        when cb.customer_retention_date_brand<cb.customer_retention_date_brand_ios15 then 'P'       --Positively affected\n        when cb.customer_retention_date_brand>cb.customer_retention_date_brand_ios15 then 'N'       --Negatively affected\n    end as customer_retention_compare,\n    case \n        when cb.first_date_brand >= add_months(current_date,  -6)                                                             then 'A: 0 - 6 Months'\n        when cb.first_date_brand >= add_months(current_date, -12) and cb.first_date_brand < add_months(current_date,  -6) then 'B: 7 - 12 Months'\n        when cb.first_date_brand >= add_months(current_date, -24) and cb.first_date_brand < add_months(current_date, -12) then 'C: 13 - 24 Months'\n        when cb.first_date_brand >= add_months(current_date, -36) and cb.first_date_brand < add_months(current_date, -24) then 'D: 25 - 36 Months'\n        when cb.first_date_brand >= add_months(current_date, -48) and cb.first_date_brand < add_months(current_date, -36) then 'E: 37 - 48 Months'\n        when cb.first_date_brand >= add_months(current_date, -60) and cb.first_date_brand < add_months(current_date, -48) then 'F: 49 - 60 Months'\n        when cb.first_date_brand >= add_months(current_date,-120) and cb.first_date_brand < add_months(current_date, -60) then 'G: 6 - 10 Years'\n        when cb.first_date_brand >= add_months(current_date,-180) and cb.first_date_brand < add_months(current_date,-120) then 'H: 11 - 15 Years'\n        else 'J: Over 15 Years'\n    end as tenure_group,\n    cb.last_email_open_date_brand as last_email_open_date,\n    cb.first_date_brand as first_date,\n    cb.brand_preference,\n    cb.brand_engagement,\n    cb.brand_campaignable,\n    case \n        when cb.customer_suppression_group_brand > '' then cb.customer_suppression_group_brand\n        when cb.customer_retention_date_brand < add_months(current_date,-24) then 'Consent Expired'\n        else ''\n    end as customer_suppression_group,\n    case when cs.cid is not null then cs.mailable else cb.mailable end as mailable,\n    case \n        when cs.cid is not null then cs.emailable \n        when cb.division_id in (select division_id from ${Database}.live.ref_division where division ilike '%carnation%') then cb.emailable_newsletter\n        else cb.emailable end as emailable,\n    case \n        when cb.emailable_first_date >= add_months(current_date,  -6)                                                        then 'A: 0 - 6 Months'\n        when cb.emailable_first_date >= add_months(current_date, -12) and cb.emailable_first_date < add_months(current_date,  -6) then 'B: 7 - 12 Months'\n        when cb.emailable_first_date >= add_months(current_date, -24) and cb.emailable_first_date < add_months(current_date, -12) then 'C: 13 - 24 Months'\n        when cb.emailable_first_date >= add_months(current_date, -36) and cb.emailable_first_date < add_months(current_date, -24) then 'D: 25 - 36 Months'\n        when cb.emailable_first_date >= add_months(current_date, -48) and cb.emailable_first_date < add_months(current_date, -36) then 'E: 37 - 48 Months'\n        when cb.emailable_first_date >= add_months(current_date, -60) and cb.emailable_first_date < add_months(current_date, -48) then 'F: 49 - 60 Months'\n        when cb.emailable_first_date >= add_months(current_date,-120) and cb.emailable_first_date < add_months(current_date, -60) then 'G: 6 - 10 Years'\n        when cb.emailable_first_date >= add_months(current_date,-180) and cb.emailable_first_date < add_months(current_date,-120) then 'H: 11 - 15 Years'\n        else 'J: Over 15 Years'\n    end as emailable_tenure_group,\n    cb.emailable_first_date,\n    cb.emailable_first_source,\n    cb.emailable_last_date,\n    cb.emailable_last_source,\n    cb.emailable_newsletter,\n    cs.mailable_ignoring_name_address as sma_mailable_ignoring_address,\n    case when cs.cid is not null then cs.mailable_ignoring_dp else cb.mailable_ignoring_dp end as mailable_ignoring_dp,\n    case when cs.cid is not null then cs.emailable_ignoring_dp else cb.emailable_ignoring_dp end as emailable_ignoring_dp,\n    case when lower(cs.live_joinedsource) regexp '(.*)(roi|mummypages|babyfairie)(.*)' or cs.country = 'Ireland' then cs.mailable else 0 end as sma_mailable_ie,\n    cs.member as sma_member,\n    cs.thirdparty as sma_thirdparty,\n    cs.source_nestle,\n    cs.source_moac,\n    cs.source_moac_date,\n    cs.first_regdate as sma_first_regdate,\n    cs.live_regdate as sma_live_regdate,\n    cs.child_under_27w,\n    cs.children_under_3,\n    case when na.account_created < na.last_login then 1 else 0 end as login_since_reg,\n    cs.last_active_date,\n    cs.stage_indicator,\n    cs.shopmium_stage_indicator,\n    cs.email_cluster as sma_email_cluster,\n\tcs.email_cluster_new as sma_email_cluster_new,\n    cs.due_date_char,\n    cs.pregnancy_status,\n    cs.partnersite as sma_partnersite,\n    cs.password_reset as sma_password_reset,\n    cs.subject_line as sma_subject_line,\n    cs.welcome_pack_claimdate as sma_welcome_pack_claimdate,\n    substr(cs.thirdparty_url,1,255) as sma_thirdparty_url_a,\n    substr(cs.thirdparty_url,256,255) as sma_thirdparty_url_b,\n    substr(cs.thirdparty_url,511,255) as sma_thirdparty_url_c,\n    substr(cs.thirdparty_url,766,255) as sma_thirdparty_url_d,\n\tcoalesce(cs.little_steps_flag,0) as little_steps_flag,\n    de.comms_duedate as sma_comms_duedate,\n    de.comms_programme_description as sma_comms_programme_description,\n    coalesce(sh.fo_products,'') as sma_fo_product,\n    coalesce(sh.gum_products,'') as sma_gum_product,\n    case when ca.cid is null then 'N' else 'Y' end as CIAM_account,\n    cast('Brand' as varchar(20)) as data_level\nfrom ${Database}.live.cid_brand cb\njoin ${Database}.temp.aio_faststats_cid c on c.cid = cb.cid --and c.churn_flag = ''\nleft join ${Database}.live.cid_sma cs on cs.cid = cb.cid \n                                    and cb.brand_id = (select brand_id from ${Database}.live.ref_brand where brand = 'SMA')--32\n                                    and cs.member = 1\nleft join ${Database}.live.dependant de on de.cid = cb.cid\n                                      and de.comms_duedate is not null\nleft join ${Database}.live.sma_shopmium_rewards sh on sh.cid = cs.cid\nleft join ${Database}.temp.aio_faststats_CIAM_accounts ca on ca.cid = cb.cid\n                                                        and ca.brand_id = cb.brand_id\nleft join ${Database}.temp.ref_reporting_bu_subset rbus on cb.business_unit_id = rbus.business_unit_id\nleft join ${Database}.temp.ref_reporting_div_subset rds on cb.division_id = rds.division_id\nleft join ${Database}.live.cid_division cd on cd.cid = cb.cid\n                                         and cd.first_date_division is not null\nleft join ${Database}.live.cid_business_unit cbu on cbu.cid = cb.cid\n                                               and cbu.first_date_business_unit is not null\nleft join (\n              select\n                  name_urn, account_created, last_login,\n                  row_number() over(partition by name_urn order by source_date desc) as row_num\n              from ${Database}.db.names_attributes\n          ) na on cs.live_name_urn = na.name_urn and na.row_num = 1\t\t\t\t\t\t\t\t\t\t\t   \nwhere  (\n    --Nestle/Purina (not SMA)\n        ( (  cb.customer_retention_date_brand      >= add_months(current_date,-25)\n         or cb.customer_retention_date_brand_ios15 >= add_months(current_date,-25)\n         )   and cs.cid is null \n             and (cb.brand_campaignable = 1 or cd.cid is not null or cbu.cid is not null)\n       )\n     or\n    --SMA\n      ( (  cb.customer_retention_date_brand        >= add_months(current_date,-37)\n         or cb.customer_retention_date_brand_ios15 >= add_months(current_date,-37)\n         )   and cs.cid is not null\n       )\n        )\n    --Exclusions\n    and cb.division_id not in (select division_id \n                                 from ${Database}.live.ref_division \n                                where division in ('Lactalis','Nespresso','Deleted')) --these divisions are not required for reporting or campaigning\n;\n\n/*\n        Division level data - inserted into Brand table\n*/\ninsert into ${Database}.temp.aio_faststats_cid_brand\n(\n    cid_brand,\n    cid,\n    brand_bbw_urn,\n    business_unit_id,\n    division_id,\n    reporting_division_id,\n    brand_id,\n    churn_flag,\n    customer_retention_group,\n    customer_retention_group_v2,\n    customer_retention_date,\n    customer_retention_date_band,\n    churn_flag_pilot,\n    customer_retention_group_pilot,\n    customer_retention_group_v2_pilot,\n    customer_retention_date_pilot,\n    customer_retention_date_band_pilot,\n    customer_retention_compare,\n    tenure_group,\n    last_email_open_date,\n    first_date,\n    brand_preference,\n    brand_engagement,\n    brand_campaignable,\n    customer_suppression_group,\n    mailable,\n    emailable,\n    emailable_tenure_group,\n    emailable_first_date,\n    emailable_first_source,\n    emailable_last_date,\n    emailable_last_source,\n    emailable_newsletter,\n    mailable_ignoring_dp,\n    emailable_ignoring_dp,\n    CIAM_account,\n    data_level\n)\n--Reporting Division subset\nselect distinct\n    trim(to_char(1000 + cd.division_id))||'-'||trim(to_char(cd.cid)) as cid_brand,\n    cd.cid,\n    cast(tbw.db.strchop(cd.cid_division_urn,'-',1,1) as int) as brand_bbw_urn,\n    cd.business_unit_id,\n    cd.division_id,\n    rds.division_id as reporting_division_id,\n    1000 + cd.division_id,\n    case\n        when cd.customer_retention_date_division < add_months(current_date,-24) then 'Y'\n        else ''\n     end as churn_flag,\n    case\n         when lower(cd.customer_retention_group_division) regexp '.*data orphan.*' then 'Expiring'\n         else cd.customer_retention_group_division\n     end as customer_retention_group,\n    case\n         when lower(cd.customer_retention_group_division) regexp '.*data orphan.*' then 'Expiring'\n         when cd.customer_retention_group_division = 'New' and cd.customer_retention_date_division <= c.acquisition_date and c.acquisition_date > add_months(current_date,-1)-1 then 'New Never Seen'\n         when cd.customer_retention_group_division = 'New' then 'New To Division'\n         else cd.customer_retention_group_division\n     end as customer_retention_group_v2,\n    cd.customer_retention_date_division,\n    case\n        when cd.customer_retention_date_division >= add_months(current_date, -3)                                                                        then 'A: 0 - 3 Months'\n        when cd.customer_retention_date_division >= add_months(current_date, -6) and cd.customer_retention_date_division < add_months(current_date,-3)  then 'B: 4 - 6 Months'\n        when cd.customer_retention_date_division >= add_months(current_date, -9) and cd.customer_retention_date_division < add_months(current_date,-6)  then 'C: 7 - 9 Months'\n        when cd.customer_retention_date_division >= add_months(current_date,-12) and cd.customer_retention_date_division < add_months(current_date,-9)  then 'D: 10 - 12 Months'\n        when cd.customer_retention_date_division >= add_months(current_date,-15) and cd.customer_retention_date_division < add_months(current_date,-12) then 'E: 13 - 15 Months'\n        when cd.customer_retention_date_division >= add_months(current_date,-18) and cd.customer_retention_date_division < add_months(current_date,-15) then 'F: 16 - 18 Months'\n        when cd.customer_retention_date_division >= add_months(current_date,-21) and cd.customer_retention_date_division < add_months(current_date,-18) then 'G: 19 - 21 Months'\n        when cd.customer_retention_date_division >= add_months(current_date,-24) and cd.customer_retention_date_division < add_months(current_date,-21) then 'H: 22 - 24 Months'\n        else 'J: 24+ Months'\n    end as customer_retention_date_band,\n    case\n        when cd.customer_retention_date_division_ios15 < add_months(current_date,-24) then 'Y'\n        else ''\n     end as churn_flag_pilot,\n    case\n         when lower(cd.customer_retention_group_division_ios15) regexp '.*data orphan.*' then 'Expiring'\n         else cd.customer_retention_group_division_ios15\n     end as customer_retention_group_pilot,\n    case\n         when lower(cd.customer_retention_group_division_ios15) regexp '.*data orphan.*' then 'Expiring'\n         when cd.customer_retention_group_division_ios15 = 'New' and cd.customer_retention_date_division_ios15 <= c.acquisition_date and c.acquisition_date > add_months(current_date,-1)-1 then 'New Never Seen'\n         when cd.customer_retention_group_division_ios15 = 'New' then 'New To Division'\n         else cd.customer_retention_group_division_ios15\n     end as customer_retention_group_v2_pilot,\n    cd.customer_retention_date_division_ios15 as customer_retention_date_pilot,\n    case\n        when cd.customer_retention_date_division_ios15 >= add_months(current_date, -3)                                                                              then 'A: 0 - 3 Months'\n        when cd.customer_retention_date_division_ios15 >= add_months(current_date, -6) and cd.customer_retention_date_division_ios15 < add_months(current_date,-3)  then 'B: 4 - 6 Months'\n        when cd.customer_retention_date_division_ios15 >= add_months(current_date, -9) and cd.customer_retention_date_division_ios15 < add_months(current_date,-6)  then 'C: 7 - 9 Months'\n        when cd.customer_retention_date_division_ios15 >= add_months(current_date,-12) and cd.customer_retention_date_division_ios15 < add_months(current_date,-9)  then 'D: 10 - 12 Months'\n        when cd.customer_retention_date_division_ios15 >= add_months(current_date,-15) and cd.customer_retention_date_division_ios15 < add_months(current_date,-12) then 'E: 13 - 15 Months'\n        when cd.customer_retention_date_division_ios15 >= add_months(current_date,-18) and cd.customer_retention_date_division_ios15 < add_months(current_date,-15) then 'F: 16 - 18 Months'\n        when cd.customer_retention_date_division_ios15 >= add_months(current_date,-21) and cd.customer_retention_date_division_ios15 < add_months(current_date,-18) then 'G: 19 - 21 Months'\n        when cd.customer_retention_date_division_ios15 >= add_months(current_date,-24) and cd.customer_retention_date_division_ios15 < add_months(current_date,-21) then 'H: 22 - 24 Months'\n        else 'J: 24+ Months'\n    end as customer_retention_date_band_pilot,\n    case \n        when cd.customer_retention_date_division=cd.customer_retention_date_division_ios15 then 'U'       --Unchanged\n        when cd.customer_retention_date_division<cd.customer_retention_date_division_ios15 then 'P'       --Positively affected\n        when cd.customer_retention_date_division>cd.customer_retention_date_division_ios15 then 'N'       --Negatively affected\n    end as customer_retention_compare,\n    case \n        when cd.first_date_division >= add_months(current_date,  -6)                                                        then 'A: 0 - 6 Months'\n        when cd.first_date_division >= add_months(current_date, -12) and cd.first_date_division < add_months(current_date,  -6) then 'B: 7 - 12 Months'\n        when cd.first_date_division >= add_months(current_date, -24) and cd.first_date_division < add_months(current_date, -12) then 'C: 13 - 24 Months'\n        when cd.first_date_division >= add_months(current_date, -36) and cd.first_date_division < add_months(current_date, -24) then 'D: 25 - 36 Months'\n        when cd.first_date_division >= add_months(current_date, -48) and cd.first_date_division < add_months(current_date, -36) then 'E: 37 - 48 Months'\n        when cd.first_date_division >= add_months(current_date, -60) and cd.first_date_division < add_months(current_date, -48) then 'F: 49 - 60 Months'\n        when cd.first_date_division >= add_months(current_date,-120) and cd.first_date_division < add_months(current_date, -60) then 'G: 6 - 10 Years'\n        when cd.first_date_division >= add_months(current_date,-180) and cd.first_date_division < add_months(current_date,-120) then 'H: 11 - 15 Years'\n        else 'J: Over 15 Years'\n    end as tenure_group,\n    cd.last_email_open_date_division,\n    cd.first_date_division,\n    case when cd.first_date_division is not null then 1 else -1 end as division_preference,\n    case when cd.last_email_open_date_division > add_months(current_date,-60) then 1 else 0 end division_engagement,\n    case\n        when cd.first_date_division is not null then 1\n        when cd.last_email_open_date_division > add_months(current_date,-60) then 1\n        else 0\n    end as division_campaignable,\n    case \n        when cd.customer_suppression_group_division > '' then cd.customer_suppression_group_division\n        when cd.customer_retention_date_division < add_months(current_date,-24) then 'Consent Expired'\n        else ''\n    end as customer_suppression_group,\n    case when cs.cid is not null then cs.mailable else cd.mailable end as mailable,\n    case \n        when cs.cid is not null then cs.emailable \n        when cd.division_id in (select division_id from ${Database}.live.ref_division where division ilike '%carnation%') then cd.emailable_newsletter\n        else greatest(cd.emailable,cd.emailable_newsletter) end as emailable,\n    case \n        when cd.emailable_first_date >= add_months(current_date,  -6)                                                        then 'A: 0 - 6 Months'\n        when cd.emailable_first_date >= add_months(current_date, -12) and cd.emailable_first_date < add_months(current_date,  -6) then 'B: 7 - 12 Months'\n        when cd.emailable_first_date >= add_months(current_date, -24) and cd.emailable_first_date < add_months(current_date, -12) then 'C: 13 - 24 Months'\n        when cd.emailable_first_date >= add_months(current_date, -36) and cd.emailable_first_date < add_months(current_date, -24) then 'D: 25 - 36 Months'\n        when cd.emailable_first_date >= add_months(current_date, -48) and cd.emailable_first_date < add_months(current_date, -36) then 'E: 37 - 48 Months'\n        when cd.emailable_first_date >= add_months(current_date, -60) and cd.emailable_first_date < add_months(current_date, -48) then 'F: 49 - 60 Months'\n        when cd.emailable_first_date >= add_months(current_date,-120) and cd.emailable_first_date < add_months(current_date, -60) then 'G: 6 - 10 Years'\n        when cd.emailable_first_date >= add_months(current_date,-180) and cd.emailable_first_date < add_months(current_date,-120) then 'H: 11 - 15 Years'\n        else 'J: Over 15 Years'\n    end as emailable_tenure_group,\n    cd.emailable_first_date,\n    cd.emailable_first_source,\n    cd.emailable_last_date,\n    cd.emailable_last_source,\n    cd.emailable_newsletter,\n    cd.mailable_ignoring_dp,\n    cd.emailable_ignoring_dp,\n    case when ca.cid is null then 'N' else 'Y' end as CIAM_account,\n    'Division' as data_level\nfrom ${Database}.live.cid_division cd\njoin ${Database}.temp.aio_faststats_cid c on c.cid = cd.cid --and c.churn_flag=''\njoin ${Database}.temp.ref_reporting_div_subset rds on cd.division_id = rds.division_id\nleft join ${Database}.live.cid_sma cs on cs.cid = cd.cid\n                                and cd.division_id = (select division_id from ${Database}.live.ref_division where division ilike 'nestl_ infant nutrition' )\n                                and cs.member = 1\nleft join (select distinct cid, division_id from ${Database}.temp.aio_faststats_CIAM_accounts) ca on ca.cid = cd.cid\n                                                                                    and ca.division_id = cd.division_id\nleft join ${Database}.live.ref_division del on cd.division_id = del.division_id and del.division ilike '%delete%'\nwhere cd.first_date_division is not null\n    and del.division_id is null\n    and (cd.customer_retention_date_division       >= add_months(current_date,-25)\n      or cd.customer_retention_date_division_ios15 >= add_months(current_date,-25)\n         )\n    and cd.division_id not in (select division_id \n                                 from ${Database}.live.ref_division \n                                where division in ('Lactalis','Nespresso','Deleted')) --these divisions are not required for reporting or campaigning\nunion\n--Reporting Business Unit subset\nselect distinct\n    trim(to_char(1000 + cd.division_id))||'-'||trim(to_char(cd.cid)) as cid_brand,\n    cd.cid,\n    cast(tbw.db.strchop(cd.cid_division_urn,'-',1,1) as int) as brand_bbw_urn,\n    cd.business_unit_id,\n    cd.division_id,\n    coalesce(rbus.reporting_division_id,cd.division_id) as reporting_division_id,\n    1000 + cd.division_id,\n    case\n\t\twhen cs.cid is not null and coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) < add_months(current_date,-36) then 'Y'  --change for sma\n        when cs.cid is null     and coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) < add_months(current_date,-24) then 'Y'\n        else ''\n     end as churn_flag,\n    case\n         when lower(coalesce(cbu.customer_retention_group_business_unit,cd.customer_retention_group_division)) regexp '.*data orphan.*' then 'Expiring'\n         else coalesce(cbu.customer_retention_group_business_unit,cd.customer_retention_group_division)\n     end as customer_retention_group,\n    case\n         when lower(coalesce(cbu.customer_retention_group_business_unit,cd.customer_retention_group_division)) regexp '.*data orphan.*' then 'Expiring'\n         when coalesce(cbu.customer_retention_group_business_unit,cd.customer_retention_group_division) = 'New' and coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) <= c.acquisition_date and c.acquisition_date > add_months(current_date,-1)-1 then 'New Never Seen'\n         when coalesce(cbu.customer_retention_group_business_unit,cd.customer_retention_group_division) = 'New' then 'New To Division'\n         else coalesce(cbu.customer_retention_group_business_unit,cd.customer_retention_group_division)\n     end as customer_retention_group_v2,\n    coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) as customer_retention_date,\n    case\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) >= add_months(current_date, -3)                                                                                                                            then 'A: 0 - 3 Months'\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) >= add_months(current_date, -6) and coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) < add_months(current_date,-3)  then 'B: 4 - 6 Months'\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) >= add_months(current_date, -9) and coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) < add_months(current_date,-6)  then 'C: 7 - 9 Months'\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) >= add_months(current_date,-12) and coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) < add_months(current_date,-9)  then 'D: 10 - 12 Months'\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) >= add_months(current_date,-15) and coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) < add_months(current_date,-12) then 'E: 13 - 15 Months'\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) >= add_months(current_date,-18) and coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) < add_months(current_date,-15) then 'F: 16 - 18 Months'\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) >= add_months(current_date,-21) and coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) < add_months(current_date,-18) then 'G: 19 - 21 Months'\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) >= add_months(current_date,-24) and coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) < add_months(current_date,-21) then 'H: 22 - 24 Months'\n        else 'J: 24+ Months'\n    end as customer_retention_date_band,\n    case\n\t\twhen cs.cid is not null and coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) < add_months(current_date,-36) then 'Y'  --change for sma\n        when cs.cid is null     and coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) < add_months(current_date,-24) then 'Y'\n        else ''\n     end as churn_flag_pilot,\n    case\n         when lower(coalesce(cbu.customer_retention_group_business_unit_ios15,cd.customer_retention_group_division_ios15)) regexp '.*data orphan.*' then 'Expiring'\n         else coalesce(cbu.customer_retention_group_business_unit_ios15,cd.customer_retention_group_division_ios15)\n     end as customer_retention_group_pilot,\n    case\n         when lower(coalesce(cbu.customer_retention_group_business_unit_ios15,cd.customer_retention_group_division_ios15)) regexp '.*data orphan.*' then 'Expiring'\n         when coalesce(cbu.customer_retention_group_business_unit_ios15,cd.customer_retention_group_division_ios15) = 'New' and coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) <= c.acquisition_date and c.acquisition_date > add_months(current_date,-1)-1 then 'New Never Seen'\n         when coalesce(cbu.customer_retention_group_business_unit_ios15,cd.customer_retention_group_division_ios15) = 'New' then 'New To Division'\n         else coalesce(cbu.customer_retention_group_business_unit_ios15,cd.customer_retention_group_division_ios15)\n     end as customer_retention_group_v2_pilot,\n    coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) as customer_retention_date_pilot,\n    case\n        when coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) >= add_months(current_date, -3)                                                                                                                                        then 'A: 0 - 3 Months'\n        when coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) >= add_months(current_date, -6) and coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) < add_months(current_date,-3)  then 'B: 4 - 6 Months'\n        when coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) >= add_months(current_date, -9) and coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) < add_months(current_date,-6)  then 'C: 7 - 9 Months'\n        when coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) >= add_months(current_date,-12) and coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) < add_months(current_date,-9)  then 'D: 10 - 12 Months'\n        when coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) >= add_months(current_date,-15) and coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) < add_months(current_date,-12) then 'E: 13 - 15 Months'\n        when coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) >= add_months(current_date,-18) and coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) < add_months(current_date,-15) then 'F: 16 - 18 Months'\n        when coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) >= add_months(current_date,-21) and coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) < add_months(current_date,-18) then 'G: 19 - 21 Months'\n        when coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) >= add_months(current_date,-24) and coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) < add_months(current_date,-21) then 'H: 22 - 24 Months'\n        else 'J: 24+ Months'\n    end as customer_retention_date_band_pilot,\n    case \n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division)=coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) then 'U'       --Unchanged\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division)<coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) then 'P'       --Positively affected\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division)>coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) then 'N'       --Negatively affected\n    end as customer_retention_compare,\n    case \n        when coalesce(cbu.first_date_business_unit,cd.first_date_division) >= add_months(current_date,  -6)                                                                                                   then 'A: 0 - 6 Months'\n        when coalesce(cbu.first_date_business_unit,cd.first_date_division) >= add_months(current_date, -12) and coalesce(cbu.first_date_business_unit,cd.first_date_division) < add_months(current_date,  -6) then 'B: 7 - 12 Months'\n        when coalesce(cbu.first_date_business_unit,cd.first_date_division) >= add_months(current_date, -24) and coalesce(cbu.first_date_business_unit,cd.first_date_division) < add_months(current_date, -12) then 'C: 13 - 24 Months'\n        when coalesce(cbu.first_date_business_unit,cd.first_date_division) >= add_months(current_date, -36) and coalesce(cbu.first_date_business_unit,cd.first_date_division) < add_months(current_date, -24) then 'D: 25 - 36 Months'\n        when coalesce(cbu.first_date_business_unit,cd.first_date_division) >= add_months(current_date, -48) and coalesce(cbu.first_date_business_unit,cd.first_date_division) < add_months(current_date, -36) then 'E: 37 - 48 Months'\n        when coalesce(cbu.first_date_business_unit,cd.first_date_division) >= add_months(current_date, -60) and coalesce(cbu.first_date_business_unit,cd.first_date_division) < add_months(current_date, -48) then 'F: 49 - 60 Months'\n        when coalesce(cbu.first_date_business_unit,cd.first_date_division) >= add_months(current_date,-120) and coalesce(cbu.first_date_business_unit,cd.first_date_division) < add_months(current_date, -60) then 'G: 6 - 10 Years'\n        when coalesce(cbu.first_date_business_unit,cd.first_date_division) >= add_months(current_date,-180) and coalesce(cbu.first_date_business_unit,cd.first_date_division) < add_months(current_date,-120) then 'H: 11 - 15 Years'\n        else 'J: Over 15 Years'\n    end as tenure_group,\n    coalesce(cbu.last_email_open_date_business_unit,cd.last_email_open_date_division) as last_email_open_date,\n    coalesce(cbu.first_date_business_unit,cd.first_date_division) as first_date,\n    case when cbu.first_date_business_unit is not null then 1 else -1 end as division_preference,\n    case when cbu.last_email_open_date_business_unit > add_months(current_date,-60) then 1 else 0 end division_engagement,\n    case\n        when cbu.first_date_business_unit is not null then 1\n        when cbu.last_email_open_date_business_unit > add_months(current_date,-60) then 1\n        else 0\n    end as division_campaignable,\n    case \n        when coalesce(cbu.customer_suppression_group_business_unit,cd.customer_suppression_group_division) > '' then coalesce(cbu.customer_suppression_group_business_unit,cd.customer_suppression_group_division)\n        when coalesce(cbu.customer_retention_date_business_unit,cd.customer_retention_date_division) < add_months(current_date,-24) then 'Consent Expired' \n        else ''\n    end as customer_suppression_group,\n    case when cs.cid is not null then cs.mailable else coalesce(cbu.mailable,cd.mailable) end as mailable,\n    case \n        when cs.cid is not null then cs.emailable \n        when cd.division_id in (select division_id from ${Database}.live.ref_division where division ilike '%carnation%') then coalesce(cbu.emailable_newsletter,cd.emailable_newsletter)\n        else greatest(cbu.emailable,cbu.emailable_newsletter) end as emailable,\n    case \n        when coalesce(cbu.emailable_first_date,cd.emailable_first_date) >= add_months(current_date,  -6)                                                             then 'A: 0 - 6 Months'\n        when coalesce(cbu.emailable_first_date,cd.emailable_first_date) >= add_months(current_date, -12) and coalesce(cbu.emailable_first_date,cd.emailable_first_date) < add_months(current_date,  -6) then 'B: 7 - 12 Months'\n        when coalesce(cbu.emailable_first_date,cd.emailable_first_date) >= add_months(current_date, -24) and coalesce(cbu.emailable_first_date,cd.emailable_first_date) < add_months(current_date, -12) then 'C: 13 - 24 Months'\n        when coalesce(cbu.emailable_first_date,cd.emailable_first_date) >= add_months(current_date, -36) and coalesce(cbu.emailable_first_date,cd.emailable_first_date) < add_months(current_date, -24) then 'D: 25 - 36 Months'\n        when coalesce(cbu.emailable_first_date,cd.emailable_first_date) >= add_months(current_date, -48) and coalesce(cbu.emailable_first_date,cd.emailable_first_date) < add_months(current_date, -36) then 'E: 37 - 48 Months'\n        when coalesce(cbu.emailable_first_date,cd.emailable_first_date) >= add_months(current_date, -60) and coalesce(cbu.emailable_first_date,cd.emailable_first_date) < add_months(current_date, -48) then 'F: 49 - 60 Months'\n        when coalesce(cbu.emailable_first_date,cd.emailable_first_date) >= add_months(current_date,-120) and coalesce(cbu.emailable_first_date,cd.emailable_first_date) < add_months(current_date, -60) then 'G: 6 - 10 Years'\n        when coalesce(cbu.emailable_first_date,cd.emailable_first_date) >= add_months(current_date,-180) and coalesce(cbu.emailable_first_date,cd.emailable_first_date) < add_months(current_date,-120) then 'H: 11 - 15 Years'\n        else 'J: Over 15 Years'\n    end as emailable_tenure_group,\n    coalesce(cbu.emailable_first_date,cd.emailable_first_date),\n    coalesce(cbu.emailable_first_source,cd.emailable_first_source),\n    coalesce(cbu.emailable_last_date,cd.emailable_last_date),\n    coalesce(cbu.emailable_last_source,cd.emailable_last_source),\n    coalesce(cbu.emailable_newsletter,cd.emailable_newsletter),\n    coalesce(cbu.mailable_ignoring_dp,cd.mailable_ignoring_dp),\n    coalesce(cbu.emailable_ignoring_dp,cd.emailable_ignoring_dp),\n    case when ca.cid is null then 'N' else 'Y' end as CIAM_account,\n    'Division' as data_level\nfrom ${Database}.live.cid_division cd\njoin ${Database}.temp.aio_faststats_cid c on c.cid = cd.cid --and c.churn_flag=''\njoin ${Database}.temp.ref_reporting_bu_subset rbus on cd.business_unit_id = rbus.business_unit_id\nleft join ${Database}.live.cid_sma cs on cs.cid = cd.cid\n                                and cd.division_id = (select division_id from ${Database}.live.ref_division where division ilike 'nestl_ infant nutrition' )\n                                and cs.member = 1\nleft join (select distinct cid, division_id from ${Database}.temp.aio_faststats_CIAM_accounts) ca on ca.cid = cd.cid\n                                                                                                and ca.division_id = cd.division_id\nleft join ${Database}.live.ref_division del on cd.division_id = del.division_id \n                                          and del.division ilike '%delete%'\nleft join ${Database}.temp.ref_reporting_div_subset rds on cd.division_id = rds.division_id\nleft join ${Database}.live.cid_business_unit cbu on cbu.cid = cd.cid \n                                               and rbus.business_unit_id = cbu.business_unit_id\n                                               and cbu.first_date_business_unit is not null\nleft join (select\n               cid,\n               business_unit_id\n           from ${Database}.live.cid_brand \n           where brand_campaignable = 1\n           group by cid, business_unit_id) cb on cb.cid = cbu.cid\n                                             and cb.business_unit_id = cbu.business_unit_id \n                                             and cb.business_unit_id = rbus.business_unit_id\nwhere coalesce(cbu.first_date_business_unit, cd.first_date_division) is not null\n    and del.division_id is null\n\tand ( \n\t--Nestle/Purina (not SMA)\n      (\n      (  coalesce(cbu.customer_retention_date_business_unit      ,cd.customer_retention_date_division)       >= add_months(current_date,-25)\n      or coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) >= add_months(current_date,-25)\n         ) and cs.cid is null \n        --and (cbu.cid is not null or (cd.first_date_division is not null and rds.division_id is not null))\n        and (cbu.cid is not null or cb.cid is not null) \n        )\n\t--SMA\n      or\n            (\n      (  coalesce(cbu.customer_retention_date_business_unit      ,cd.customer_retention_date_division)       >= add_months(current_date,-37)\n      or coalesce(cbu.customer_retention_date_business_unit_ios15,cd.customer_retention_date_division_ios15) >= add_months(current_date,-37)\n         ) and cs.cid is not null \n        )\n      )\n\t--Exclusions\t\t \n    and cd.division_id not in (select division_id \n                                 from ${Database}.live.ref_division \n                                where division in ('Lactalis','Nespresso','Deleted')) --these divisions are not required for reporting or campaigning\n    and rds.division_id is null\n;\n\n\n/*\n            HCP inserts\n*/\n\n/*\n        HCP Brand level data\n*/\ninsert into ${Database}.temp.aio_faststats_cid_brand\n(\n    cid_brand,\n    cid,\n    brand_bbw_urn,\n    business_unit_id,\n    division_id,\n    reporting_division_id,\n    brand_id,\n    churn_flag,\n    customer_retention_group,\n    customer_retention_group_v2,\n    customer_retention_date,\n    customer_retention_date_band,\n    churn_flag_pilot,\n    customer_retention_group_pilot,\n    customer_retention_group_v2_pilot,\n    customer_retention_date_pilot,\n    customer_retention_date_band_pilot,\n    customer_retention_compare,\n    tenure_group,\n    last_email_open_date,\n    first_date,\n    brand_preference,\n    brand_engagement,\n    brand_campaignable,\n    customer_suppression_group,\n    mailable,\n    emailable,\n    emailable_tenure_group,\n    emailable_first_date,\n    emailable_first_source,\n    emailable_last_date,\n    emailable_last_source,\n    emailable_newsletter,\n    mailable_ignoring_dp,\n    emailable_ignoring_dp,\n    CIAM_account,\n    data_level\n)\nselect distinct\n    trim(to_char((select brand_id from ${Database}.live.ref_brand where brand ilike '%HCP%')))||'-'||trim(to_char(2000000000 + c.cid)) as cid_brand,\n    2000000000 + c.cid as cid,\n    c.bbw_urn as brand_bbw_urn,\n    (select business_unit_id from ${Database}.live.ref_business_unit where business_unit ilike '%HCP%') as business_unit_id,\n    (select division_id from ${Database}.live.ref_division where division ilike '%HCP%') as division_id,\n    50 + (select business_unit_id from ${Database}.live.ref_business_unit where business_unit ilike '%HCP%') as reporting_division_id,\n    (select brand_id from ${Database}.live.ref_brand where brand ilike '%HCP%') as brand_id,\n    case\n        when c.last_active_date < add_months(current_date,-24) then 'Y'\n        else ''\n     end as churn_flag,\n    case\n         when cast(c.first_registration as date) >= to_date(to_char((current_date-1),'YYYYMM01'), 'YYYYMMDD') then 'New'\n         when c.last_active_date >= add_months(current_date,-21)                                              then 'Safe'\n         when c.last_active_date >= add_months(current_date,-23)                                              then 'At Risk'\n         when c.last_active_date >= add_months(current_date,-24)                                              then 'Expiring'\n         when c.last_active_date >= add_months(current_date,-25)                                              then 'Gone this month'\n         else 'Anonymise'\n     end as customer_retention_group,\n    case\n         when cast(c.first_registration as date) >= to_date(to_char((current_date-1),'YYYYMM01'), 'YYYYMMDD') then 'New Never Seen'\n         when c.last_active_date >= add_months(current_date,-21)                                              then 'Safe'\n         when c.last_active_date >= add_months(current_date,-23)                                              then 'At Risk'\n         when c.last_active_date >= add_months(current_date,-24)                                              then 'Expiring'\n         when c.last_active_date >= add_months(current_date,-25)                                              then 'Gone this month'\n         else 'Anonymise'\n     end as customer_retention_group_v2,\n    c.last_active_date as customer_retention_date,\n    case\n        when c.last_active_date >= add_months(current_date, -3)                                                       then 'A: 0 - 3 Months'\n        when c.last_active_date >= add_months(current_date, -6) and c.last_active_date < add_months(current_date,-3)  then 'B: 4 - 6 Months'\n        when c.last_active_date >= add_months(current_date, -9) and c.last_active_date < add_months(current_date,-6)  then 'C: 7 - 9 Months'\n        when c.last_active_date >= add_months(current_date,-12) and c.last_active_date < add_months(current_date,-9)  then 'D: 10 - 12 Months'\n        when c.last_active_date >= add_months(current_date,-15) and c.last_active_date < add_months(current_date,-12) then 'E: 13 - 15 Months'\n        when c.last_active_date >= add_months(current_date,-18) and c.last_active_date < add_months(current_date,-15) then 'F: 16 - 18 Months'\n        when c.last_active_date >= add_months(current_date,-21) and c.last_active_date < add_months(current_date,-18) then 'G: 19 - 21 Months'\n        when c.last_active_date >= add_months(current_date,-24) and c.last_active_date < add_months(current_date,-21) then 'H: 22 - 24 Months'\n        else 'J: 24+ Months'\n    end as customer_retention_date_band,\n    case\n        when c.last_active_date_ios15 < add_months(current_date,-24) then 'Y'\n        else ''\n     end as churn_flag_pilot,\n    case\n         when cast(c.first_registration as date) >= to_date(to_char((current_date-1),'YYYYMM01'), 'YYYYMMDD') then 'New'\n         when c.last_active_date_ios15 >= add_months(current_date,-21)                                        then 'Safe'\n         when c.last_active_date_ios15 >= add_months(current_date,-23)                                        then 'At Risk'\n         when c.last_active_date_ios15 >= add_months(current_date,-24)                                        then 'Expiring'\n         when c.last_active_date_ios15 >= add_months(current_date,-25)                                        then 'Gone this month'\n         else 'Anonymise'\n     end as customer_retention_group_pilot,\n    case\n         when cast(c.first_registration as date) >= to_date(to_char((current_date-1),'YYYYMM01'), 'YYYYMMDD') then 'New Never Seen'\n         when c.last_active_date_ios15 >= add_months(current_date,-21)                                        then 'Safe'\n         when c.last_active_date_ios15 >= add_months(current_date,-23)                                        then 'At Risk'\n         when c.last_active_date_ios15 >= add_months(current_date,-24)                                        then 'Expiring'\n         when c.last_active_date_ios15 >= add_months(current_date,-25)                                        then 'Gone this month'\n         else 'Anonymise'\n     end as customer_retention_group_v2_pilot,\n    c.last_active_date_ios15 as customer_retention_date_pilot,\n    case\n        when c.last_active_date_ios15 >= add_months(current_date, -3)                                                             then 'A: 0 - 3 Months'\n        when c.last_active_date_ios15 >= add_months(current_date, -6) and c.last_active_date_ios15 < add_months(current_date,-3)  then 'B: 4 - 6 Months'\n        when c.last_active_date_ios15 >= add_months(current_date, -9) and c.last_active_date_ios15 < add_months(current_date,-6)  then 'C: 7 - 9 Months'\n        when c.last_active_date_ios15 >= add_months(current_date,-12) and c.last_active_date_ios15 < add_months(current_date,-9)  then 'D: 10 - 12 Months'\n        when c.last_active_date_ios15 >= add_months(current_date,-15) and c.last_active_date_ios15 < add_months(current_date,-12) then 'E: 13 - 15 Months'\n        when c.last_active_date_ios15 >= add_months(current_date,-18) and c.last_active_date_ios15 < add_months(current_date,-15) then 'F: 16 - 18 Months'\n        when c.last_active_date_ios15 >= add_months(current_date,-21) and c.last_active_date_ios15 < add_months(current_date,-18) then 'G: 19 - 21 Months'\n        when c.last_active_date_ios15 >= add_months(current_date,-24) and c.last_active_date_ios15 < add_months(current_date,-21) then 'H: 22 - 24 Months'\n        else 'J: 24+ Months'\n    end as customer_retention_date_band_pilot,\n    case \n        when c.last_active_date=c.last_active_date_ios15 then 'U'       --Unchanged\n        when c.last_active_date<c.last_active_date_ios15 then 'P'       --Positively affected\n        when c.last_active_date>c.last_active_date_ios15 then 'N'       --Negatively affected\n    end as customer_retention_compare,\n    case \n        when a.acquisition_date >= add_months(current_date,  -6)                                                        then 'A: 0 - 6 Months'\n        when a.acquisition_date >= add_months(current_date, -12) and a.acquisition_date < add_months(current_date,  -6) then 'B: 7 - 12 Months'\n        when a.acquisition_date >= add_months(current_date, -24) and a.acquisition_date < add_months(current_date, -12) then 'C: 13 - 24 Months'\n        when a.acquisition_date >= add_months(current_date, -36) and a.acquisition_date < add_months(current_date, -24) then 'D: 25 - 36 Months'\n        when a.acquisition_date >= add_months(current_date, -48) and a.acquisition_date < add_months(current_date, -36) then 'E: 37 - 48 Months'\n        when a.acquisition_date >= add_months(current_date, -60) and a.acquisition_date < add_months(current_date, -48) then 'F: 49 - 60 Months'\n        when a.acquisition_date >= add_months(current_date,-120) and a.acquisition_date < add_months(current_date, -60) then 'G: 6 - 10 Years'\n        when a.acquisition_date >= add_months(current_date,-180) and a.acquisition_date < add_months(current_date,-120) then 'H: 11 - 15 Years'\n        else 'J: Over 15 Years'\n    end as tenure_group,\n    null as last_email_open_date,             --<-- value does not exist on HCP\n    c.first_registration as first_date,\n    c.emailable_ignoring_dp as brand_preference,    --<-- specific value does not exist on HCP, but I believe they are all registered on HCP\n    null as brand_engagement,\n    c.emailable as brand_campaignable,\n    case \n        when ns.supp_unsubscribe_channel_email = 1              then 'Unsub'\n        when ns.supp_dp_emailable = 1                           then 'Opt-Out'\n        when ns.supp_dead = 1                                   then 'Deceased'\n        when ns.supp_manual_channel_email = 1                   then 'Manual'\n        when ns.supp_bounce_email = 1 and emailable = 0         then 'Bounce'\n        when ns.supp_bad_email = 1                              then 'Misc'\n        when c.last_active_date < add_months(current_date,-24)  then 'Consent Expired'\n        else ''\n    end as customer_suppression_group, \n    c.mailable,\n    c.emailable,\n    case \n        when c.first_registration >= add_months(current_date,  -6)                                                        then 'A: 0 - 6 Months'\n        when c.first_registration >= add_months(current_date, -12) and c.first_registration < add_months(current_date,  -6) then 'B: 7 - 12 Months'\n        when c.first_registration >= add_months(current_date, -24) and c.first_registration < add_months(current_date, -12) then 'C: 13 - 24 Months'\n        when c.first_registration >= add_months(current_date, -36) and c.first_registration < add_months(current_date, -24) then 'D: 25 - 36 Months'\n        when c.first_registration >= add_months(current_date, -48) and c.first_registration < add_months(current_date, -36) then 'E: 37 - 48 Months'\n        when c.first_registration >= add_months(current_date, -60) and c.first_registration < add_months(current_date, -48) then 'F: 49 - 60 Months'\n        when c.first_registration >= add_months(current_date,-120) and c.first_registration < add_months(current_date, -60) then 'G: 6 - 10 Years'\n        when c.first_registration >= add_months(current_date,-180) and c.first_registration < add_months(current_date,-120) then 'H: 11 - 15 Years'\n        else 'J: Over 15 Years'\n    end as emailable_tenure_group,\n    c.first_registration as emailable_first_date,\n    c.registration_source as emailable_first_source,\n    null as emailable_last_date,\n    null as emailable_last_source,\n    null as emailable_newsletter,\n    c.mailable_ignoring_dp,\n    c.emailable_ignoring_dp,\n    'N' as CIAM_account,\n    'Brand' as data_level\nfrom ${DatabaseHCP}.live.cid c\njoin ${Database}.temp.aio_faststats_cid a on a.cid = 2000000000 + c.cid --and a.churn_flag = ''\nleft join ${DatabaseHCP}.live.names_supps ns on c.name_urn = ns.name_urn\nwhere   add_months(c.last_active_date,24)       >= add_months(current_date,-25)\n     or add_months(c.last_active_date_ios15,24) >= add_months(current_date,-25)\n;\n\n/*\n        HCP Division level data - inserted into Brand table\n*/\ninsert into ${Database}.temp.aio_faststats_cid_brand\n(\n    cid_brand,\n    cid,\n    brand_bbw_urn,\n    business_unit_id,\n    division_id,\n    reporting_division_id,\n    brand_id,\n    churn_flag,\n    customer_retention_group,\n    customer_retention_group_v2,\n    customer_retention_date,\n    customer_retention_date_band,\n    churn_flag_pilot,\n    customer_retention_group_pilot,\n    customer_retention_group_v2_pilot,\n    customer_retention_date_pilot,\n    customer_retention_date_band_pilot,\n    customer_retention_compare,\n    tenure_group,\n    last_email_open_date,\n    first_date,\n    brand_preference,\n    brand_engagement,\n    brand_campaignable,\n    customer_suppression_group,\n    mailable,\n    emailable,\n    emailable_tenure_group,\n    emailable_first_date,\n    emailable_first_source,\n    emailable_last_date,\n    emailable_last_source,\n    emailable_newsletter,\n    mailable_ignoring_dp,\n    emailable_ignoring_dp,\n    CIAM_account,\n    data_level\n)\nselect distinct\n    trim(to_char(1000 + (select division_id from ${Database}.live.ref_division where division ilike '%HCP%')))||'-'||trim(to_char(2000000000 + c.cid)) as cid_brand,\n    2000000000 + c.cid as cid,\n    c.bbw_urn as brand_bbw_urn,\n    (select business_unit_id from ${Database}.live.ref_business_unit where business_unit ilike '%HCP%') as business_unit_id,\n    (select division_id from ${Database}.live.ref_division where division ilike '%HCP%') as division_id,\n    50 + (select business_unit_id from ${Database}.live.ref_business_unit where business_unit ilike '%HCP%') as reporting_division_id,\n    1000 + (select division_id from ${Database}.live.ref_division where division ilike '%HCP%') as brand_id,\n    case\n        when c.last_active_date < add_months(current_date,-24) then 'Y'\n        else ''\n     end as churn_flag,\n    case\n         when cast(c.first_registration as date) >= to_date(to_char((current_date-1),'YYYYMM01'), 'YYYYMMDD') then 'New'\n         when c.last_active_date >= add_months(current_date,-21)                                              then 'Safe'\n         when c.last_active_date >= add_months(current_date,-23)                                              then 'At Risk'\n         when c.last_active_date >= add_months(current_date,-24)                                              then 'Expiring'\n         when c.last_active_date >= add_months(current_date,-25)                                              then 'Gone this month'\n         else 'Anonymise'\n     end as customer_retention_group,\n    case\n         when cast(c.first_registration as date) >= to_date(to_char((current_date-1),'YYYYMM01'), 'YYYYMMDD') then 'New Never Seen'\n         when c.last_active_date >= add_months(current_date,-21)                                              then 'Safe'\n         when c.last_active_date >= add_months(current_date,-23)                                              then 'At Risk'\n         when c.last_active_date >= add_months(current_date,-24)                                              then 'Expiring'\n         when c.last_active_date >= add_months(current_date,-25)                                              then 'Gone this month'\n         else 'Anonymise'\n     end as customer_retention_group_v2,\n    c.last_active_date as customer_retention_date,\n    case\n        when c.last_active_date >= add_months(current_date, -3)                                                       then 'A: 0 - 3 Months'\n        when c.last_active_date >= add_months(current_date, -6) and c.last_active_date < add_months(current_date,-3)  then 'B: 4 - 6 Months'\n        when c.last_active_date >= add_months(current_date, -9) and c.last_active_date < add_months(current_date,-6)  then 'C: 7 - 9 Months'\n        when c.last_active_date >= add_months(current_date,-12) and c.last_active_date < add_months(current_date,-9)  then 'D: 10 - 12 Months'\n        when c.last_active_date >= add_months(current_date,-15) and c.last_active_date < add_months(current_date,-12) then 'E: 13 - 15 Months'\n        when c.last_active_date >= add_months(current_date,-18) and c.last_active_date < add_months(current_date,-15) then 'F: 16 - 18 Months'\n        when c.last_active_date >= add_months(current_date,-21) and c.last_active_date < add_months(current_date,-18) then 'G: 19 - 21 Months'\n        when c.last_active_date >= add_months(current_date,-24) and c.last_active_date < add_months(current_date,-21) then 'H: 22 - 24 Months'\n        else 'J: 24+ Months'\n    end as customer_retention_date_band,\n    case\n        when c.last_active_date_ios15 < add_months(current_date,-24) then 'Y'\n        else ''\n     end as churn_flag_pilot,\n    case\n         when cast(c.first_registration as date) >= to_date(to_char((current_date-1),'YYYYMM01'), 'YYYYMMDD') then 'New'\n         when c.last_active_date_ios15 >= add_months(current_date,-21)                                        then 'Safe'\n         when c.last_active_date_ios15 >= add_months(current_date,-23)                                        then 'At Risk'\n         when c.last_active_date_ios15 >= add_months(current_date,-24)                                        then 'Expiring'\n         when c.last_active_date_ios15 >= add_months(current_date,-25)                                        then 'Gone this month'\n         else 'Anonymise'\n     end as customer_retention_group_pilot,\n    case\n         when cast(c.first_registration as date) >= to_date(to_char((current_date-1),'YYYYMM01'), 'YYYYMMDD') then 'New Never Seen'\n         when c.last_active_date_ios15 >= add_months(current_date,-21)                                        then 'Safe'\n         when c.last_active_date_ios15 >= add_months(current_date,-23)                                        then 'At Risk'\n         when c.last_active_date_ios15 >= add_months(current_date,-24)                                        then 'Expiring'\n         when c.last_active_date_ios15 >= add_months(current_date,-25)                                        then 'Gone this month'\n         else 'Anonymise'\n     end as customer_retention_group_v2_pilot,\n    c.last_active_date_ios15 as customer_retention_date_pilot,\n    case\n        when c.last_active_date_ios15 >= add_months(current_date, -3)                                                             then 'A: 0 - 3 Months'\n        when c.last_active_date_ios15 >= add_months(current_date, -6) and c.last_active_date_ios15 < add_months(current_date,-3)  then 'B: 4 - 6 Months'\n        when c.last_active_date_ios15 >= add_months(current_date, -9) and c.last_active_date_ios15 < add_months(current_date,-6)  then 'C: 7 - 9 Months'\n        when c.last_active_date_ios15 >= add_months(current_date,-12) and c.last_active_date_ios15 < add_months(current_date,-9)  then 'D: 10 - 12 Months'\n        when c.last_active_date_ios15 >= add_months(current_date,-15) and c.last_active_date_ios15 < add_months(current_date,-12) then 'E: 13 - 15 Months'\n        when c.last_active_date_ios15 >= add_months(current_date,-18) and c.last_active_date_ios15 < add_months(current_date,-15) then 'F: 16 - 18 Months'\n        when c.last_active_date_ios15 >= add_months(current_date,-21) and c.last_active_date_ios15 < add_months(current_date,-18) then 'G: 19 - 21 Months'\n        when c.last_active_date_ios15 >= add_months(current_date,-24) and c.last_active_date_ios15 < add_months(current_date,-21) then 'H: 22 - 24 Months'\n        else 'J: 24+ Months'\n    end as customer_retention_date_band_pilot,\n    case \n        when c.last_active_date=c.last_active_date_ios15 then 'U'       --Unchanged\n        when c.last_active_date<c.last_active_date_ios15 then 'P'       --Positively affected\n        when c.last_active_date>c.last_active_date_ios15 then 'N'       --Negatively affected\n    end as customer_retention_compare,\n    case \n        when c.first_registration >= add_months(current_date,  -6)                                                        then 'A: 0 - 6 Months'\n        when c.first_registration >= add_months(current_date, -12) and c.first_registration < add_months(current_date,  -6) then 'B: 7 - 12 Months'\n        when c.first_registration >= add_months(current_date, -24) and c.first_registration < add_months(current_date, -12) then 'C: 13 - 24 Months'\n        when c.first_registration >= add_months(current_date, -36) and c.first_registration < add_months(current_date, -24) then 'D: 25 - 36 Months'\n        when c.first_registration >= add_months(current_date, -48) and c.first_registration < add_months(current_date, -36) then 'E: 37 - 48 Months'\n        when c.first_registration >= add_months(current_date, -60) and c.first_registration < add_months(current_date, -48) then 'F: 49 - 60 Months'\n        when c.first_registration >= add_months(current_date,-120) and c.first_registration < add_months(current_date, -60) then 'G: 6 - 10 Years'\n        when c.first_registration >= add_months(current_date,-180) and c.first_registration < add_months(current_date,-120) then 'H: 11 - 15 Years'\n        else 'J: Over 15 Years'\n    end as tenure_group,\n    null as last_email_open_date,             --<-- value does not exist on HCP\n    c.first_registration as first_date,\n    c.emailable_ignoring_dp as brand_preference,    --<-- specific value does not exist on HCP, but I believe they are all registered on HCP\n    null as brand_engagement,\n    c.emailable as brand_campaignable,    \n    case \n        when ns.supp_unsubscribe_channel_email = 1              then 'Unsub'\n        when ns.supp_dp_emailable = 1                           then 'Opt-Out'\n        when ns.supp_dead = 1                                   then 'Deceased'\n        when ns.supp_manual_channel_email = 1                   then 'Manual'\n        when ns.supp_bounce_email = 1 and emailable = 0         then 'Bounce'\n        when ns.supp_bad_email = 1                              then 'Misc'\n        when c.last_active_date < add_months(current_date,-24)  then 'Consent Expired'\n        else ''\n    end as customer_suppression_group,       --<-- value does not exist on HCP\n    c.mailable,\n    c.emailable,\n    case \n        when c.first_registration >= add_months(current_date,  -6)                                                        then 'A: 0 - 6 Months'\n        when c.first_registration >= add_months(current_date, -12) and c.first_registration < add_months(current_date,  -6) then 'B: 7 - 12 Months'\n        when c.first_registration >= add_months(current_date, -24) and c.first_registration < add_months(current_date, -12) then 'C: 13 - 24 Months'\n        when c.first_registration >= add_months(current_date, -36) and c.first_registration < add_months(current_date, -24) then 'D: 25 - 36 Months'\n        when c.first_registration >= add_months(current_date, -48) and c.first_registration < add_months(current_date, -36) then 'E: 37 - 48 Months'\n        when c.first_registration >= add_months(current_date, -60) and c.first_registration < add_months(current_date, -48) then 'F: 49 - 60 Months'\n        when c.first_registration >= add_months(current_date,-120) and c.first_registration < add_months(current_date, -60) then 'G: 6 - 10 Years'\n        when c.first_registration >= add_months(current_date,-180) and c.first_registration < add_months(current_date,-120) then 'H: 11 - 15 Years'\n        else 'J: Over 15 Years'\n    end as emailable_tenure_group,\n    c.first_registration as emailable_first_date,\n    c.registration_source as emailable_first_source,\n    null as emailable_last_date,\n    null as emailable_last_source,\n    null as emailable_newsletter,\n    c.mailable_ignoring_dp,\n    c.emailable_ignoring_dp,\n    'N' as CIAM_account,\n    'Division' as data_level\nfrom ${DatabaseHCP}.live.cid c\njoin ${Database}.temp.aio_faststats_cid a on a.cid = 2000000000 + c.cid --and a.churn_flag = ''\nleft join ${DatabaseHCP}.live.names_supps ns on c.name_urn = ns.name_urn\nwhere   add_months(c.last_active_date,24)       >= add_months(current_date,-25)\n     or add_months(c.last_active_date_ios15,24) >= add_months(current_date,-25)\n;\n\n\n/*\n        Overall market level  - inserted into Brand table\n*/\ninsert into ${Database}.temp.aio_faststats_cid_brand\n(\n    cid_brand,\n    cid,\n    brand_bbw_urn,\n    business_unit_id,\n    division_id,\n    reporting_division_id,\n    brand_id,\n    churn_flag,\n    customer_retention_group,\n    customer_retention_group_v2,\n    customer_retention_date,\n    customer_retention_date_band,\n    churn_flag_pilot,\n    customer_retention_group_pilot,\n    customer_retention_group_v2_pilot,\n    customer_retention_date_pilot,\n    customer_retention_date_band_pilot,\n    --customer_retention_compare,       --do this as a subsequent update\n    tenure_group,\n    last_email_open_date,\n    first_date,\n    brand_preference,\n    brand_engagement,\n    brand_campaignable,\n    customer_suppression_group,         --empty string with a subsequent update\n    mailable,\n    emailable,\n    emailable_tenure_group,\n    emailable_first_date,\n    emailable_first_source,\n    emailable_last_date,\n    emailable_last_source,\n    emailable_newsletter,\n    mailable_ignoring_dp,\n    emailable_ignoring_dp,\n    CIAM_account,\n    data_level\n)\nselect \n    trim(to_char(1000000))||'-'||trim(to_char(c.cid)) as cid_brand,\n    c.cid,\n    min(case when try_to_number(c.bbw_urn) is null then cb.brand_bbw_urn else to_number(c.bbw_urn) end) as brand_bbw_urn,\n    1000000,\n    1000000,\n    1000000,\n    1000000,\n    c.churn_flag,\n    substring(max(case \n                    when left(cb.customer_retention_group,3) = 'New'  then 'AA_'||left(cb.customer_retention_group,3) -- no need for differentiating at this level \n                    when left(cb.customer_retention_group,3) = 'Gon'  then 'AB_'||cb.customer_retention_group \n                    when left(cb.customer_retention_group,3) = 'Exp'  then 'AC_'||cb.customer_retention_group \n                    when left(cb.customer_retention_group,3) = 'At '  then 'AD_'||cb.customer_retention_group \n                    else 'AZ_'||cb.customer_retention_group        --Re-consent and Safe are in correct alpha order                \n                end),4,25),\n    substring(max(case \n                    when left(cb.customer_retention_group_v2,3) = 'New'  then 'AA_'||left(cb.customer_retention_group_v2,3) -- no need for differentiating at this level \n                    when left(cb.customer_retention_group_v2,3) = 'Gon'  then 'AB_'||cb.customer_retention_group_v2 \n                    when left(cb.customer_retention_group_v2,3) = 'Exp'  then 'AC_'||cb.customer_retention_group_v2 \n                    when left(cb.customer_retention_group_v2,3) = 'At '  then 'AD_'||cb.customer_retention_group_v2 \n                    else 'AZ_'||cb.customer_retention_group_v2        --Re-consent and Safe are in correct alpha order                \n                end),4,25),\n    max(cb.customer_retention_date),\n    min(customer_retention_date_band),\n    c.churn_flag,\n    substring(max(case \n                    when left(cb.customer_retention_group_pilot,3) = 'New'  then 'AA_'||left(cb.customer_retention_group_pilot,3) -- no need for differentiating at this level \n                    when left(cb.customer_retention_group_pilot,3) = 'Gon'  then 'AB_'||cb.customer_retention_group_pilot \n                    when left(cb.customer_retention_group_pilot,3) = 'Exp'  then 'AC_'||cb.customer_retention_group_pilot \n                    when left(cb.customer_retention_group_pilot,3) = 'At '  then 'AD_'||cb.customer_retention_group_pilot \n                    else 'AZ_'||cb.customer_retention_group_pilot        --Re-consent and Safe are in correct alpha order                \n                end),4,25),\n    substring(max(case \n                    when left(cb.customer_retention_group_v2_pilot,3) = 'New'  then 'AA_'||left(cb.customer_retention_group_v2_pilot,3) -- no need for differentiating at this level \n                    when left(cb.customer_retention_group_v2_pilot,3) = 'Gon'  then 'AB_'||cb.customer_retention_group_v2_pilot \n                    when left(cb.customer_retention_group_v2_pilot,3) = 'Exp'  then 'AC_'||cb.customer_retention_group_v2_pilot \n                    when left(cb.customer_retention_group_v2_pilot,3) = 'At '  then 'AD_'||cb.customer_retention_group_v2_pilot \n                    else 'AZ_'||cb.customer_retention_group_v2_pilot        --Re-consent and Safe are in correct alpha order                \n                end),4,25),\n    max(cb.customer_retention_date_pilot),\n    min(customer_retention_date_band_pilot),\n    max(cb.tenure_group),\n    max(cb.last_email_open_date),\n    min(cb.first_date),\n    max(cb.brand_preference),\n    max(cb.brand_engagement),\n    max(cb.brand_campaignable),\n    '' as customer_suppression_group,   --updated below\n    max(greatest(coalesce(cs.mailable,0),cb.mailable)),\n    max(greatest(coalesce(cs.emailable,0),cb.emailable)),\n    max(cb.emailable_tenure_group),\n    min(cb.emailable_first_date),\n    min(cb.first_source),\n    max(cb.emailable_last_date),\n    max(cb.last_source),\n    max(cb.emailable_newsletter),\n    max(cb.mailable_ignoring_dp),\n    max(cb.emailable_ignoring_dp),\n    max(CIAM_account),\n    'Market Level' as data_level\nfrom ${Database}.temp.aio_faststats_cid c\njoin (select distinct \n        a.*,  \n        first_value(emailable_first_source) over (partition by a.cid order by emailable_first_date    , emailable_first_source) as first_source,\n        first_value(emailable_last_source)  over (partition by a.cid order by emailable_last_date desc, emailable_last_source)  as last_source\n      from ${Database}.temp.aio_faststats_cid_brand a) cb on c.cid = cb.cid\nleft join ${Database}.live.cid_sma cs on cs.cid = cb.cid\ngroup by c.cid, c.bbw_urn, c.churn_flag\n;\n\n--update market level fields not calculated in main selection\n\n--market level - customer retention compare\nupdate ${Database}.temp.aio_faststats_cid_brand\nset\n    customer_retention_compare = case \n                                      when customer_retention_date = customer_retention_date_pilot then 'U'       --Unchanged\n                                      when customer_retention_date < customer_retention_date_pilot then 'P'       --Positively affected\n                                      when customer_retention_date > customer_retention_date_pilot then 'N'       --Negatively affected\n                                  end\nwhere \n    brand_id = 1000000\n;    \n\n--market level - customer suppression_group\nmerge into ${Database}.temp.aio_faststats_cid_brand a\nusing\n    (\n    select\n        a.cid,\n        max(replace(a.customer_suppression_group,' TM','')) as customer_suppression_group\n    from ${Database}.temp.aio_faststats_cid_brand a\n    where \n        a.brand_id<1000\n        and not exists\n        (select 1 from ${Database}.temp.aio_faststats_cid_brand b where a.cid = b.cid and b.brand_id<1000 and b.customer_suppression_group='')\n    group by a.cid\n    ) s\non a.cid=s.cid and a.brand_id = 1000000\nwhen matched then \nupdate set customer_suppression_group = s.customer_suppression_group\n; \n\nalter warehouse set warehouse_size = 'Xsmall';\n\n/*\n    Ref Brand inc. Division / Business Unit / Market Level\n*/\ncreate or replace table ${Database}.temp.aio_faststats_ref_brand\nas\nselect\n    brand_id,\n    brand,\n    brand_pet_type\nfrom ${Database}.live.ref_brand rb\nwhere exists (select 1 from ${Database}.temp.aio_faststats_cid_brand cb where rb.brand_id=cb.brand_id)\nunion\nselect\n    1000 + division_id,\n    'Division - '||trim(division),\n    ''\nfrom ${Database}.live.ref_division rd\nwhere exists (select 1 from ${Database}.temp.aio_faststats_cid_brand cb where 1000+rd.division_id=cb.brand_id)\n;\n\ninsert into ${Database}.temp.aio_faststats_ref_brand\n(\n    brand_id,\n    brand,\n    brand_pet_type\n)\nvalues (\n    1000000,\n    'Market Level',\n    ''\n);\n\n\n/*\n    Ref Division inc. Business Unit / Market Level\n*/\ncreate or replace table ${Database}.temp.aio_faststats_ref_division\nas\nselect\n    division_id,\n    division\nfrom ${Database}.live.ref_division rd\nwhere exists (select 1 from ${Database}.temp.aio_faststats_cid_brand cb where rd.division_id=cb.division_id)\n;\n\n\ninsert into ${Database}.temp.aio_faststats_ref_division\n(\n    division_id,\n    division\n)\nvalues (\n    1000000,\n    'Market Level'\n);\n\n/*\n    Ref Reporting Division inc. Business Unit / Market Level\n*/\ncreate or replace table ${Database}.temp.aio_faststats_ref_reporting_division\nas\nselect\n    division_id as reporting_division_id,\n    'Nestlé '||replace(division,'Nestle ','') as reporting_division\nfrom ${Database}.live.ref_division rd\nwhere division in ('Beverage','Confectionery','Food','Nestle Professional','Nestle Health Science')\n    and exists (select 1 from ${Database}.temp.aio_faststats_cid_brand cb where rd.division_id=cb.reporting_division_id)\nunion\nselect\n    50 + business_unit_id,\n    business_unit\nfrom ${Database}.live.ref_business_unit rbu\nwhere lower(business_unit) not regexp '.*nestec.*|.*r&r.*|.*vitaflo.*|.*lactalis.*|.*nespresso.*|.*international.*'\n    and exists (select 1 from ${Database}.temp.aio_faststats_cid_brand cb where 50 + rbu.business_unit_id=cb.reporting_division_id)\n;\n\n\ninsert into ${Database}.temp.aio_faststats_ref_reporting_division\n(\n    reporting_division_id,\n    reporting_division\n)\nvalues (\n    1000000,\n    'Market Level'\n);\n\n\nalter warehouse set warehouse_size = 'Medium';\n\ncreate or replace table ${Database}.temp.aio_faststats_cid_brand_details\nas\nselect distinct\n    cb.cid_brand,\n    cd.name_urn,\n    cd.title,\n    cd.firstname,\n    cd.lastname,\n    cd.add1,\n    cd.add2,\n    cd.add3,\n    cd.add4,\n    cd.add5,\n    cd.town,\n    cd.county,\n    cd.country,\n    cd.postcode,\n    case \n        when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n        then regexp_replace(left(cd.postcode,2),'[0-9]','') else '' \n    end as postcode_area,\n    case \n        when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n        then left(upper(tbw.db.strchop(cd.postcode,' ',1,1)||' '||left(tbw.db.strchop(cd.postcode,' ',-1,-1),1)),10)\n        else ''  \n    end as postal_sector,\n    case\n            when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n            then left(upper(tbw.db.strchop(cd.postcode,' ',1,1)),10)\n            else ''\n    end as postal_district,\n    coalesce(xe.email,'') as email,\n    cd.phone_home,\n    cd.phone_work,\n    cd.phone_mobile,\n    ci.gender,\n    case \n        when ci.dob>add_months(current_date,-1212) and ci.dob<add_months(current_date,-144) --between 12 min and 101 max\n        then ci.dob\n    end as dob,\n    case \n        when ci.dob>add_months(current_date,-1212) and ci.dob<add_months(current_date,-144) --between 12 min and 101 max\n        then floor((cast(replace(cast(current_date as char(10)),'-','') as int)-cast(replace(cast(ci.dob as char(10)),'-','') as int))/10000) \n    end as age_today,\n    case \n        when ci.dob<add_months(current_date,-144) and ci.dob>=add_months(current_date,-300)  then 'A: <25 years' \n        when ci.dob<add_months(current_date,-300) and ci.dob>=add_months(current_date,-420)  then 'B: 25 years - <35 years' \n        when ci.dob<add_months(current_date,-420) and ci.dob>=add_months(current_date,-540)  then 'C: 35 years - <45 years' \n        when ci.dob<add_months(current_date,-540) and ci.dob>=add_months(current_date,-660)  then 'D: 45 years - <55 years' \n        when ci.dob<add_months(current_date,-660) and ci.dob>=add_months(current_date,-780)  then 'E: 55 years - <65 years' \n        when ci.dob<add_months(current_date,-780) and ci.dob>=add_months(current_date,-1212) then 'F: 65+ years' \n    end as age_group_today, \n    ci.have_cat,\n    ci.have_dog,\n    case when ci.have_cat in ('Y','IN','IO') and ci.have_dog in ('Y','IN','IO') then 'Both'\n             when ci.have_cat in ('Y','IN','IO') then 'Cat'\n             when ci.have_dog in ('Y','IN','IO') then 'Dog'\n             when ci.have_cat = 'N' and ci.have_dog = 'N' then 'Unknown'\n             end as pet_seg,\n    case when ci.have_cat = 'Y' and ci.have_dog = 'Y' then 'Known Both'\n         when ci.have_cat = 'N' and ci.have_dog = 'Y' then 'Known Dog'\n         when ci.have_cat = 'Y' and ci.have_dog = 'N' then 'Known Cat'\n         when ci.have_cat in ('IN','IO') and ci.have_dog = 'Y' then 'Known Dog and Inferred Cat'\n         when ci.have_cat = 'Y' and ci.have_dog in ('IN','IO') then 'Known Cat and Inferred Dog'\n         when ci.have_cat in ('IN','IO') and ci.have_dog in ('IN','IO') then 'Inferred Both'\n         when ci.have_cat in ('IN','IO') and ci.have_dog = 'N' then 'Inferred Cat'\n         when ci.have_cat = 'N' and ci.have_dog in ('IN','IO') then 'Inferred Dog'\n         when ci.have_cat = 'N' and ci.have_dog = 'N' then 'Unknown'\n         else 'error'\n    end as detailed_pet_seg,\n    ci.number_of_cats,\n    ci.number_of_dogs,\n    case when cb.business_unit_id = 5 then purina_engagement_score end as engagement_score,\n    case when cb.business_unit_id = 5 then purina_lapse_risk_segment end as lapse_risk_segment,\n    case\n        when cb.customer_retention_date >= add_months(current_date,-1)                                                                then 'A: 0 - 1 Months'\n        when cb.customer_retention_date >= add_months(current_date,-6)  and cb.customer_retention_date < add_months(current_date,-1)  then 'B: > 1 - 6 Months'\n        when cb.customer_retention_date >= add_months(current_date,-12) and cb.customer_retention_date < add_months(current_date,-6)  then 'C: > 6 - 12 Months'\n        when cb.customer_retention_date >= add_months(current_date,-18) and cb.customer_retention_date < add_months(current_date,-12) then 'D: > 12 - 18 Months'\n        when cb.customer_retention_date >= add_months(current_date,-23) and cb.customer_retention_date < add_months(current_date,-18) then 'E: > 18 - 23 Months'\n        when cb.customer_retention_date >= add_months(current_date,-24) and cb.customer_retention_date < add_months(current_date,-23) then 'F: > 23 - 24 Months'\n        else 'J: 24 Months+'\n    end as recency_group,\n    case\n        when cb.customer_retention_date_pilot >= add_months(current_date,-1)                                                                      then 'A: 0 - 1 Months'\n        when cb.customer_retention_date_pilot >= add_months(current_date,-6)  and cb.customer_retention_date_pilot < add_months(current_date,-1)  then 'B: > 1 - 6 Months'\n        when cb.customer_retention_date_pilot >= add_months(current_date,-12) and cb.customer_retention_date_pilot < add_months(current_date,-6)  then 'C: > 6 - 12 Months'\n        when cb.customer_retention_date_pilot >= add_months(current_date,-18) and cb.customer_retention_date_pilot < add_months(current_date,-12) then 'D: > 12 - 18 Months'\n        when cb.customer_retention_date_pilot >= add_months(current_date,-23) and cb.customer_retention_date_pilot < add_months(current_date,-18) then 'E: > 18 - 23 Months'\n        when cb.customer_retention_date_pilot >= add_months(current_date,-24) and cb.customer_retention_date_pilot < add_months(current_date,-23) then 'F: > 23 - 24 Months'\n        else 'J: 24 Months+'\n    end as recency_group_pilot\nfrom ${Database}.temp.aio_faststats_cid_brand cb\njoin ${Database}.temp.aio_faststats_cid a on cb.cid = a.cid\njoin ${Database}.live.cid_details cd on cd.cid = cb.cid\njoin ${Database}.live.cid ci on ci.cid = cb.cid\nleft join ${Database}.live.xref_email xe on xe.bbw_urn = cb.brand_bbw_urn\nwhere a.churn_flag=''\nunion\n--Nestle churned\nselect distinct\n    cb.cid_brand,\n    cd.name_urn,\n    '' as title,\n    '' as firstname,\n    '' as lastname,\n    '' as add1,\n    '' as add2,\n    '' as add3,\n    '' as add4,\n    '' as add5,\n    cd.town,\n    cd.county,\n    cd.country,\n    '' as postcode,\n    case \n        when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n        then regexp_replace(left(cd.postcode,2),'[0-9]','') else '' \n    end as postcode_area,\n    case \n        when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n        then left(upper(tbw.db.strchop(cd.postcode,' ',1,1)||' '||left(tbw.db.strchop(cd.postcode,' ',-1,-1),1)),10)\n        else ''  \n    end as postal_sector,\n    case\n            when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n            then left(upper(tbw.db.strchop(cd.postcode,' ',1,1)),10)\n            else ''\n    end as postal_district,\n    '' as email,\n    '' as phone_home,\n    '' as phone_work,\n    '' as phone_mobile,\n    ci.gender,\n    null as dob,\n    null as age_today, \n    null as age_group_today, \n    ci.have_cat,\n    ci.have_dog,\n    case when ci.have_cat in ('Y','IN','IO') and ci.have_dog in ('Y','IN','IO') then 'Both'\n             when ci.have_cat in ('Y','IN','IO') then 'Cat'\n             when ci.have_dog in ('Y','IN','IO') then 'Dog'\n             when ci.have_cat = 'N' and ci.have_dog = 'N' then 'Unknown'\n             end as pet_seg,\n    case when ci.have_cat = 'Y' and ci.have_dog = 'Y' then 'Known Both'\n         when ci.have_cat = 'N' and ci.have_dog = 'Y' then 'Known Dog'\n         when ci.have_cat = 'Y' and ci.have_dog = 'N' then 'Known Cat'\n         when ci.have_cat in ('IN','IO') and ci.have_dog = 'Y' then 'Known Dog and Inferred Cat'\n         when ci.have_cat = 'Y' and ci.have_dog in ('IN','IO') then 'Known Cat and Inferred Dog'\n         when ci.have_cat in ('IN','IO') and ci.have_dog in ('IN','IO') then 'Inferred Both'\n         when ci.have_cat in ('IN','IO') and ci.have_dog = 'N' then 'Inferred Cat'\n         when ci.have_cat = 'N' and ci.have_dog in ('IN','IO') then 'Inferred Dog'\n         when ci.have_cat = 'N' and ci.have_dog = 'N' then 'Unknown'\n         else 'error'\n    end as detailed_pet_seg,\n    ci.number_of_cats,\n    ci.number_of_dogs,\n    case when cb.business_unit_id = 5 then purina_engagement_score end as engagement_score,\n    case when cb.business_unit_id = 5 then purina_lapse_risk_segment end as lapse_risk_segment,\n    'J: 24 Months+' as recency_group,\n    'J: 24 Months+' as recency_group_pilot\nfrom ${Database}.temp.aio_faststats_cid_brand cb\njoin ${Database}.temp.aio_faststats_cid a on cb.cid = a.cid\njoin ${Database}.live.cid_details cd on cd.cid = cb.cid\njoin ${Database}.live.cid ci on ci.cid = cb.cid\nwhere a.churn_flag='Y'\nunion\n-- HCP details\nselect distinct\n    trim(to_char((select brand_id from ${Database}.live.ref_brand where brand ilike '%HCP%')))||'-'||trim(to_char(2000000000 + c.cid)) as cid_brand,\n    cd.name_urn,\n    cd.title,\n    cd.firstname,\n    cd.lastname,\n    cd.add1,\n    cd.add2,\n    cd.add3,\n    cd.add4,\n    cd.add5,\n    cd.town,\n    cd.county,\n    cd.country,\n    cd.postcode,\n    case \n        when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n        then regexp_replace(left(cd.postcode,2),'[0-9]','') else '' \n    end as postcode_area,\n    case \n        when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n        then left(upper(tbw.db.strchop(cd.postcode,' ',1,1)||' '||left(tbw.db.strchop(cd.postcode,' ',-1,-1),1)),10)\n        else ''  \n    end as postal_sector,\n    case\n            when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n            then left(upper(tbw.db.strchop(cd.postcode,' ',1,1)),10)\n            else ''\n    end as postal_district,\n    coalesce(cd.email,'') as email,\n    cd.phone_home,\n    '' as phone_work,\n    cd.phone_mobile,\n    c.gender,\n    null as dob,\n    null as age_today, \n    null as age_group_today, \n    'N' as have_cat,\n    'N' as have_dog,\n    'Unknown' as pet_seg,\n    'Unknown' as detailed_pet_seg,\n    0 as number_of_cats,\n    0 as number_of_dogs,\n    null as engagement_score,\n    null as lapse_risk_segment,\n    case\n        when cb.customer_retention_date >= add_months(current_date,-1)                                                                then 'A: 0 - 1 Months'\n        when cb.customer_retention_date >= add_months(current_date,-6)  and cb.customer_retention_date < add_months(current_date,-1)  then 'B: > 1 - 6 Months'\n        when cb.customer_retention_date >= add_months(current_date,-12) and cb.customer_retention_date < add_months(current_date,-6)  then 'C: > 6 - 12 Months'\n        when cb.customer_retention_date >= add_months(current_date,-18) and cb.customer_retention_date < add_months(current_date,-12) then 'D: > 12 - 18 Months'\n        when cb.customer_retention_date >= add_months(current_date,-23) and cb.customer_retention_date < add_months(current_date,-18) then 'E: > 18 - 23 Months'\n        when cb.customer_retention_date >= add_months(current_date,-24) and cb.customer_retention_date < add_months(current_date,-23) then 'F: > 23 - 24 Months'\n        else 'J: 24 Months+'\n    end as recency_group,\n    case\n        when cb.customer_retention_date_pilot >= add_months(current_date,-1)                                                                      then 'A: 0 - 1 Months'\n        when cb.customer_retention_date_pilot >= add_months(current_date,-6)  and cb.customer_retention_date_pilot < add_months(current_date,-1)  then 'B: > 1 - 6 Months'\n        when cb.customer_retention_date_pilot >= add_months(current_date,-12) and cb.customer_retention_date_pilot < add_months(current_date,-6)  then 'C: > 6 - 12 Months'\n        when cb.customer_retention_date_pilot >= add_months(current_date,-18) and cb.customer_retention_date_pilot < add_months(current_date,-12) then 'D: > 12 - 18 Months'\n        when cb.customer_retention_date_pilot >= add_months(current_date,-23) and cb.customer_retention_date_pilot < add_months(current_date,-18) then 'E: > 18 - 23 Months'\n        when cb.customer_retention_date_pilot >= add_months(current_date,-24) and cb.customer_retention_date_pilot < add_months(current_date,-23) then 'F: > 23 - 24 Months'\n        else 'J: 24 Months+'\n    end as recency_group_pilot\nfrom ${Database}.temp.aio_faststats_cid_brand cb\njoin ${Database}.temp.aio_faststats_cid a on cb.cid = a.cid\njoin ${DatabaseHCP}.live.cid c on 2000000000 + c.cid = cb.cid\njoin ${DatabaseHCP}.live.cid_details cd on cd.cid = c.cid\nwhere a.churn_flag=''\nunion\n-- HCP churned\nselect distinct\n    trim(to_char((select brand_id from ${Database}.live.ref_brand where brand ilike '%HCP%')))||'-'||trim(to_char(2000000000 + c.cid)) as cid_brand,\n    cd.name_urn,\n    '' as title,\n    '' as firstname,\n    '' as lastname,\n    '' as add1,\n    '' as add2,\n    '' as add3,\n    '' as add4,\n    '' as add5,\n    cd.town,\n    cd.county,\n    cd.country,\n    '' as postcode,\n    case \n        when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n        then regexp_replace(left(cd.postcode,2),'[0-9]','') else '' \n    end as postcode_area,\n    case \n        when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n        then left(upper(tbw.db.strchop(cd.postcode,' ',1,1)||' '||left(tbw.db.strchop(cd.postcode,' ',-1,-1),1)),10)\n        else ''  \n    end as postal_sector,\n    case\n            when cd.country in ('United Kingdom','Jersey','Guernsey','Isle of Man','') and cd.postcode > '' \n            then left(upper(tbw.db.strchop(cd.postcode,' ',1,1)),10)\n            else ''\n    end as postal_district,\n    '' as email,\n    '' as phone_home,\n    '' as phone_work,\n    '' as phone_mobile,\n    c.gender,\n    null as dob,\n    null as age_today, \n    null as age_group_today, \n    'N' as have_cat,\n    'N' as have_dog,\n    'Unknown' as pet_seg,\n    'Unknown' as detailed_pet_seg,\n    0 as number_of_cats,\n    0 as number_of_dogs,\n    null as engagement_score,\n    null as lapse_risk_segment,\n    'J: 24 Months+' as recency_group,\n    'J: 24 Months+' as recency_group_pilot\nfrom ${Database}.temp.aio_faststats_cid_brand cb\njoin ${Database}.temp.aio_faststats_cid a on cb.cid = a.cid\njoin ${DatabaseHCP}.live.cid c on 2000000000 + c.cid = cb.cid\njoin ${DatabaseHCP}.live.cid_details cd on cd.cid = c.cid\nwhere a.churn_flag='Y'\n;\n\nalter warehouse set warehouse_size = 'XSmall';\n\ncreate or replace table ${Database}.temp.aio_faststats_cid_brand_question\nas\nselect distinct \n    trim(to_char(cbq.brand_id))||'-'||trim(to_char(cbq.cid)) as cid_brand,\n    cbq.cid,\n    cbq.brand_id,\n    cbq.question_id as brand_question_id,\n    cbq.question as brand_question,\n    cbq.answer as brand_answer,\n    cbq.answer_data_date as brand_answer_date\nfrom ${Database}.live.cid_brand_question cbq\njoin ${Database}.temp.aio_faststats_cid c on c.cid = cbq.cid\n;\n\n\ncreate or replace table ${Database}.temp.aio_faststats_cid_brand_product\nas\nselect distinct\n    trim(to_char(cbp.brand_id))||'-'||trim(to_char(cbp.cid)) as cid_brand,\n    cbp.*\nfrom ${Database}.live.cid_brand_product cbp\njoin ${Database}.temp.aio_faststats_cid c on c.cid = cbp.cid\n;\n\n\ncreate or replace table ${Database}.temp.aio_faststats_shopmium_rewards\nas\nselect distinct\n    '32'||'-'||trim(to_char(sh.cid)) as cid_brand,\n    sh.*\nfrom ${Database}.live.sma_shopmium_rewards sh\njoin ${Database}.temp.aio_faststats_cid c on c.cid = sh.cid\n;\n\ncreate or replace table ${Database}.temp.aio_faststats_nescafe_coffee_finder\nas\nselect distinct\n    trim(to_char(coalesce(hl.brand_id,a.brand_id)))||'-'||trim(to_char(a.cid)) as cid_brand,\n    hl.answer as Q_how_like,\n    i.answer as Q_intense,\n    md.answer as Q_mostly_drink,\n    fm.answer as Q_fav_moment,\n    case when hl.cid is not null or i.cid is not null or md.cid is not null or fm.cid is not null then 'Y' else 'N' end as Coffee_Finder_Answered\nfrom ${Database}.temp.aio_faststats_cid_brand a    \nleft join (select distinct cid, brand_id, first_value(answer) over (partition by cid, brand_id order by answer_data_date desc) as answer from ${Database}.live.cid_brand_question where question ilike '%how do you like your coffee%' and answer ilike '%like%') hl on hl.cid = a.cid\nleft join (select distinct cid, brand_id, first_value(answer) over (partition by cid, brand_id order by answer_data_date desc) as answer from ${Database}.live.cid_brand_question where question ilike '%what intensity do you prefer%' and lower(answer) in ('light','medium','dark')) i on i.cid = a.cid\nleft join (select distinct cid, brand_id, first_value(answer) over (partition by cid, brand_id order by answer_data_date desc) as answer from ${Database}.live.cid_brand_question where question ilike '%in what way do you require%want a coffee%' and lower(left(answer,4)) in ('enjo','give','get ')) md on md.cid = a.cid\nleft join (select distinct cid, brand_id, first_value(answer) over (partition by cid, brand_id order by answer_data_date desc) as answer from ${Database}.live.cid_brand_question where question ilike '%what time of day do you drink your coffee%' and lower(answer) in ('morning','afternoon','evening','anytime')) fm on fm.cid = a.cid\nwhere division_id in (select division_id from ${Database}.temp.aio_faststats_ref_division where division = 'Beverage')\n;\n\ncreate or replace table ${Database}.temp.aio_faststats_hcp_attributes\nas\nselect distinct\n    trim(to_char((select brand_id from ${Database}.live.ref_brand where brand ilike '%HCP%')))||'-'||trim(to_char(2000000000 + c.cid)) as cid_brand,\n    c.pref_productrange,\n    c.pref_studydays,\n    c.pref_website_newsletter,\n    c.job_role as hcp_job_role,\n    c.segment as hcp_segment,\n    c.segment_group as hcp_segment_group\nfrom ${DatabaseHCP}.live.cid c\njoin ${Database}.temp.aio_faststats_cid a on 2000000000 + c.cid = a.cid\n;\n\ncreate or replace table ${Database}.temp.aio_faststats_cid_pet\nas\nselect distinct\n    p.cid,\n    p.pet_id,\n    p.pet_number,\n    p.pet_type,\n    p.pet_name,\n    p.pet_breed,\n    p.pet_gender,\n    p.pet_dob,\n    p.pet_size,\n    p.pet_indoor_outdoor,\n    p.pet_colour,\n    case \n            when p.pet_dob >= current_date then p.pet_life_stage\n            when p.pet_dob >= add_months(current_date,-12) and Pet_Type = 'Cat' then 'Kitten'   --to 1 year\n            when p.pet_dob >= add_months(current_date,-12) and Pet_Type = 'Dog' then 'Puppy'    --to 1 year\n            when p.pet_dob >= add_months(current_date,-84)  then 'Adult'        --to 8 years\n            when p.pet_dob >= add_months(current_date,-204) then 'Senior'       --to 17 years\n            when p.pet_dob <  add_months(current_date,-204) then 'Older'        --over 17 years\n        else p.pet_life_stage \n    end as pet_life_stage,\n    case \n            when p.pet_dob >= current_date and pet_life_stage     in ('Kitten','Puppy') then p.pet_life_stage\n            when p.pet_dob >= current_date and pet_life_stage not in ('Kitten','Puppy') then p.pet_life_stage||' '||p.pet_type\n            when p.pet_dob >= add_months(current_date,-12) and Pet_Type = 'Cat' then 'Kitten'   --to 1 year\n            when p.pet_dob >= add_months(current_date,-12) and Pet_Type = 'Dog' then 'Puppy'    --to 1 year\n            when p.pet_dob >= add_months(current_date,-84)  then 'Adult '||p.pet_type        --to 8 years\n            when p.pet_dob >= add_months(current_date,-204) then 'Senior '||p.pet_type       --to 17 years\n            when p.pet_dob <  add_months(current_date,-204) then 'Older '||p.pet_type        --over 17 years\n            when pet_life_stage     in ('Kitten','Puppy') then p.pet_life_stage\n            when pet_life_stage not in ('Kitten','Puppy') then p.pet_life_stage||' '||p.pet_type\n        else p.pet_life_stage \n    end  as pet_life_stage_detail,\n    p.source as pet_source,\n    p.pet_data_date\n--select distinct p.*        \nfrom ${Database}.live.cid c\njoin ${Database}.live.cid_pet p on c.cid = p.cid\n;\n\nalter warehouse set warehouse_size = 'Small';\n\ncreate or replace table ${Database}.temp.aio_faststats_comms_hist\nas\nselect distinct\n    trim(ch.programme_id)||'|'||trim(ch.campaign_id)||'|'||trim(ch.promotion_id)||'|'||trim(ch.cell_id)||'|'||trim(ch.pack_id) as combined_id,\n    xr.cid,\n    ch.drop_date,\n    ch.brand_preference,\n    ch.brand_engagement,\n    ch.control_cell,\n    ch.data_brand_id\nfrom ${Database}.db.comms_hist ch\ninner join ${Database}.live.xref_name_urn xr on xr.name_urn = ch.name_urn\ninner join ${Database}.temp.aio_faststats_cid c on c.cid = xr.cid\nwhere ch.drop_date >= add_months(current_date,-12)\n;\n\n\nalter warehouse set warehouse_size = 'Xsmall';\n\ncreate or replace table ${Database}.temp.aio_faststats_comms_hist_lookup\nas\nselect distinct\n    chl.*\nfrom (\n         select\n             trim(programme_id)||'|'||trim(campaign_id)||'|'||trim(promotion_id)||'|'||trim(cell_id)||'|'||trim(pack_id) as combined_id,\n             programme_id,\n             programme_description,\n             campaign_id,\n             campaign_description,\n             promotion_id,\n             promotion_description,\n             cell_id,\n             cell_description,\n             pack_id,\n             pack_description,\n             control,\n             contact_type,\n             promo_type,\n             data_controller_id,\n             brand_id,\n             final_destination\n         from ${Database}.db.comms_hist_lookup\n         ) chl\ninner join (\n               select distinct\n                   combined_id\n               from ${Database}.temp.aio_faststats_comms_hist\n           ) ch on ch.combined_id = chl.combined_id\n;\n\nalter warehouse set warehouse_size = 'Medium';\n\ncreate or replace table ${Database}.temp.aio_faststats_adestra_events\nas\nselect distinct\n    c.cid,\n    amf_id,\n\tcampaign_id,\n    kog_pack as ch_combined_id,\n    adestra_campaign_id,\n    adestra_campaign_name,\n    ae.email,\n    event_name,\n    event_timestamp,\n    link_label,\n    link_url,\n    form_builder_id\nfrom ${Database}.live.adestra_events ae\njoin ${Database}.temp.aio_faststats_cid c on c.cid = ae.cid\nwhere cast(event_timestamp as date) >= add_months(current_date,-13)\nand campaign_id not in ('18632')\n;\n\nCREATE OR REPLACE TABLE ${Database}.temp.aio_faststats_campaign_information\nas\nselect\n    x.cid,\n    x.campaign_id,\n    x.adestra_campaign_id,\n    case when lk.campaign_name is null then replace(x.adestra_campaign_name, '_', ' ') else trim(lk.campaign_name) end as campaign_name,\n    x.link_label,\n    x.Engagement_Prefix,\n    x.Content_Pillar,\n    x.Sub_Categories,\n    trim(lk.email_tag) as email_tag,\n    trim(lk.message) as message,\n    trim(lk.brand) as brand,\n    case when x.sent_date is not null then 1 else 0 end as sent,\n    x.sent_date,\n    case when (x.bounce_date is null and x.sent_date is not null) then 1 else 0 end as delivered,\n    case when (x.bounce_date is null and x.sent_date is not null) then x.sent_date end as delivered_date,\n    case when x.open_date is not null then 1 else 0 end as opened,\n    x.open_date,\n    case when x.clicked_date is not null then 1 else 0 end as clicked,\n    x.clicked_date,\n    case when x.unsubscribed_date is not null then 1 else 0 end as unsubscribed,\n    x.unsubscribed_date\nfrom (\n         select\n             ae1.cid,\n             ae1.campaign_id,\n             ae1.adestra_campaign_id,\n             ae1.adestra_campaign_name,\n             ae1.ch_combined_id,\n             ae2.link_label,\n             ae2.Engagement_Prefix,\n             ae2.Content_Pillar,\n             ae2.Sub_Categories,\n             max(case when ae1.event_name = 'sent_campaign' then cast(ae1.event_timestamp as date) end) as sent_date,\n             max(case when lower(ae1.event_name) in ('inbound_bounce','inbound_domain','inbound_quota','inbound_user') then cast(ae1.event_timestamp as date) end) as bounce_date,\n             max(case when lower(ae1.event_name) regexp '.*read.*|.*click.*' then cast(ae1.event_timestamp as date) end) as open_date,\n\t\t\t max(\n                    case\n                        when lower(ae1.event_name) regexp '.*click.*'\n                            and lower(ae1.link_url) not regexp '.*unsub.*'\n                            and lower(ae1.event_name) not regexp '.*unsub.*'\n                            and rauf.form_builder_id is null                --('365','380','381','201','278','364','370','371','372','373','374','375','376','377','378','379','408')\n                        then cast(ae1.event_timestamp as date)\n                    end\n                ) as clicked_date,\n             max(coalesce(u2.data_date,u1.data_date)) as unsubscribed_date\n         from ${Database}.temp.aio_faststats_adestra_events ae1\n         left join (\n                       select distinct\n                           ae.cid,\n                           un.data_date,\n                           ae.campaign_id,\n                           ae.adestra_campaign_id,\n                           ae.adestra_campaign_name,\n                           row_number() over(partition by ae.cid, un.data_date order by case when lower(link_url) regexp '.*unsub.*' then 1 else 0 end desc, event_timestamp desc) as rn\n                       from ${Database}.db.supps_unsubscribe un\n                       inner join ${Database}.temp.aio_faststats_adestra_events ae on lower(ae.email) = lower(trim(un.email))\n                                                               and un.data_date >= cast(ae.event_timestamp as date)\n                                                               and un.data_date <= (cast(ae.event_timestamp as date) + 7)\n                       where lower(ae.event_name) regexp '.*click.*|.*read.*'\n                           and lower(un.source_file) regexp '.*export.csv.*'\n                           and un.brand_id is null\n                   ) u1 on ae1.cid = u1.cid\n                      and ae1.campaign_id = u1.campaign_id\n                      and ae1.adestra_campaign_id = u1.adestra_campaign_id\n                      and ae1.adestra_campaign_name = u1.adestra_campaign_name\n                      and u1.rn = 1\n         left join (\n                       select distinct\n                           ae.cid,\n                           un.data_date,\n                           ae.campaign_id,\n                           ae.adestra_campaign_id,\n                           ae.adestra_campaign_name\n                       from ${Database}.db.supps_unsubscribe un\n                       inner join ${Database}.temp.aio_faststats_adestra_events ae on lower(ae.email) = lower(un.email)\n                                                               and ae.adestra_campaign_name = un.unsub_campaign\n                       where un.unsub_campaign > ''\n                   ) u2 on ae1.cid = u2.cid\n                       and ae1.campaign_id = u2.campaign_id\n                       and ae1.adestra_campaign_id = u2.adestra_campaign_id\n                       and ae1.adestra_campaign_name = u2.adestra_campaign_name\n                       and cast(ae1.event_timestamp as date) = u2.data_date\n         left join (\n                       select\n                           cid,\n                           campaign_id,\n                           adestra_campaign_id,\n                           adestra_campaign_name,\n                           link_label,\n                           case\n                               when lower(link_label) regexp '.*\\\\|.*' then trim(split_part(link_label,'|',1))\n                               else trim(split_part(link_label,'-',1))\n                           end as engagement_prefix,\n                           case\n                               when lower(link_label) regexp '.*\\\\|.*' then trim(split_part(link_label,'|',2))\n                               else trim(split_part(link_label,'-',2))\n                           end as content_pillar,\n                           case\n                               when lower(link_label) regexp '.*\\\\|.*' then trim(split_part(link_label,'|',3))\n                               else trim(split_part(link_label,'-',3))\n                           end as sub_categories\n                       from ${Database}.temp.aio_faststats_adestra_events\n                       where link_label > ''\n                   ) ae2 on ae1.cid = ae2.cid\n                        and ae1.campaign_id = ae2.campaign_id\n                        and ae1.adestra_campaign_id = ae2.adestra_campaign_id\n                        and ae1.adestra_campaign_name = ae2.adestra_campaign_name\n         left join ${Database}.db.ref_adestra_unsub_forms rauf on ae1.form_builder_id = rauf.form_builder_id\n         group by 1,2,3,4,5,6,7,8,9\n     ) x\nleft join ${Database}.db.adestra_tag_lookup lk on x.adestra_campaign_id = trim(lk.adestra_campaign_id)  \nwhere sent_date>= add_months(current_date,-13)\n;\n\n\n/* I don't think this table is needed?? stops the hcp records going through from previous table\ncreate or replace table ${Database}.temp.aio_faststats_campaign_summary_information\nas\nselect\n    c.cid,\n    ci.campaign_id,\n    ci.adestra_campaign_id,\n    ci.campaign_name,\n    ci.link_label,\n    ci.engagement_prefix,\n    ci.content_pillar,\n    ci.sub_categories,\n    ci.email_tag,\n    ci.message,\n    upper(to_char(sent_date, 'MON-YYYY'))as campaign_month,\n    ci.sent,\n    ci.sent_date,\n    ci.delivered,\n    ci.delivered_date,\n    ci.opened,\n    ci.open_date,\n    ci.clicked,\n    ci.clicked_date,\n    ci.unsubscribed,\n    ci.unsubscribed_date,\n    ci.brand as brand\nfrom ${Database}.live.cid c\ninner join ${Database}.temp.aio_faststats_campaign_information ci on c.cid = ci.cid\n;\n*/\n\ndrop table if exists ${Database}.temp.aio_faststats_campaign_information_rollup;\ncreate table ${Database}.temp.aio_faststats_campaign_information_rollup\nas\nselect\n    cid,\n    campaign_id,\n    adestra_campaign_id,\n    case when lower(campaign_name) in ('kitten code programme') then campaign_name||' '||message\n         when lower(campaign_name) in ('growing pup triggered emails') then \n                                    case when message ilike any ('generic%','bakers%','beta%') then campaign_name||' '||tbw.db.strchop(message,' ',2,255) \n                                         when message ilike any ('pro plan%') then campaign_name||' '||tbw.db.strchop(message,' ',3,255) else campaign_name||' '||message end\n            else campaign_name\n            end as campaign_name,\n    email_tag,\n    message,\n    upper(to_char(sent_date, 'MON-YYYY'))as campaign_month,\n    max(sent) as sent,\n    sent_date, \n    max(delivered) as delivered,\n    max(opened) as opened,\n    max(clicked) as clicked,\n    max(unsubscribed) as unsubscribed,\n    rb.brand_id as brand_id,\n    rb.division_id as division_id,\n\tcoalesce(rds.division_id,rbus.reporting_division_id,rb.division_id) as reporting_division_id\nfrom ${Database}.temp.aio_faststats_campaign_information a\nleft join ${Database}.live.ref_brand rb on a.brand = rb.brand\nleft join ${Database}.live.ref_business_unit_brand rbub on rb.brand_id = rbub.brand_id\nleft join ${Database}.temp.ref_reporting_bu_subset rbus on rbub.business_unit_id = rbus.business_unit_id\nleft join ${Database}.temp.ref_reporting_div_subset rds on rb.division_id = rds.division_id\ngroup by\n    cid,\n    campaign_id,\n    adestra_campaign_id,\n    campaign_name,\n    email_tag,\n    message,\n    campaign_month,\n    sent_date,\n    rb.brand_id,\n    rb.division_id,\n    reporting_division_id,\n    rds.division_id\n;\n\n/* no longer need to insert these parts seperately as we are already getting the info further up - this was causing dupes\n--SMA\ninsert into ${Database}.temp.aio_faststats_campaign_information_rollup\n(\n    cid,\n    campaign_id,\n    adestra_campaign_id,\n    campaign_name,\n    email_tag,\n    message,\n    campaign_month,\n    sent,\n    sent_date, \n    delivered,\n    opened,\n    clicked,\n    unsubscribed,\n    brand_id,\n    division_id,\n\treporting_division_id\n)\nselect\n    e.cid,\n    'SMA' as campaign_id,\n    '' as adestra_campaign_id,\n    case\n        when (lower(messagename) regexp '.*welcome 1.*' and lower(messagename) regexp '.*uk.*') or lower(messagename) regexp '.*welcome_pregnancy_uk.*' then 'WELCOME ANTENATAL UK'\n        when (lower(messagename) regexp '.*welcome 1.*' and lower(messagename) regexp '.*roi.*') or lower(messagename) regexp '.*welcome_pregnancy_roi.*' then 'WELCOME ANTENATAL ROI'\n        when (lower(messagename) regexp '.*welcome 2.*' and lower(messagename) regexp '.*uk.*') or lower(messagename) regexp '.*welcome_newborn_uk.*' then 'WELCOME POST NEWBORN UK'\n        when (lower(messagename) regexp '.*welcome 2.*' and lower(messagename) regexp '.*roi.*') or lower(messagename) regexp '.*welcome_newborn_roi.*' then 'WELCOME POST NEWBORN ROI'\n        when (lower(messagename) regexp '.*welcome 3.*' and lower(messagename) regexp '.*uk.*') or lower(messagename) regexp '.*welcome_baby_uk.*' then 'WELCOME POST BABY UK'\n        when (lower(messagename) regexp '.*welcome 3.*' and lower(messagename) regexp '.*roi.*') or lower(messagename) regexp '.*welcome_baby_roi.*' then 'WELCOME POST BABY ROI'\n        when (lower(messagename) regexp '.*welcome 4.*' and lower(messagename) regexp '.*uk.*') or lower(messagename) regexp '.*welcome_toddler_uk.*' then 'WELCOME TODDLER UK'\n        when (lower(messagename) regexp '.*welcome 4.*' and lower(messagename) regexp '.*roi.*') or lower(messagename) regexp '.*welcome_toddler_roi.*' then 'WELCOME TODDLER ROI'\n        else messagename\n    end as campaign_name,\n    master_category as email_tag,\n    category as message,\n    upper(to_char(sent_date, 'MON-YYYY')) as campaign_month,\n    sent_flag as sent,\n    sent_date as sent_date,\n    case when sent_flag = 1 and bounce_reporting_flag = 0 and suppress_flag = 0 then 1 else 0 end as delivered,\n    case when open_qty > 0 then 1 else 0 end as opened,\n    case when click_qty > 0 and optout_flag = 0 and close_flag = 0 then 1 else 0 end as clicked,\n    case when optout_flag = 1 or close_flag = 1 then 1 else 0 end as unsubscribed,\n    (select brand_id from ${Database}.temp.aio_faststats_ref_brand where brand = 'SMA') as brand_id, \n    (select division_id from ${Database}.temp.aio_faststats_ref_division where division = 'Nestlé Infant Nutrition') as division_id,\n    (select reporting_division_id from ${Database}.temp.aio_faststats_ref_reporting_division where reporting_division = 'SMA') as reporting_division_id\nfrom ${Database}.live.sma_engagement_levels_messages e\nwhere sent_date>= add_months(current_date,-13)\n    and coalesce(master_category,'Test') not in ('Test','')\n    and trim(category) <> 'Acquisition'\n    and trim(messagename) not in ('HCP INVITATION','')\n    and trim(brand) = 'SMA';\n    \n--hcp\ninsert into ${Database}.temp.aio_faststats_campaign_information_rollup\n(\n    cid,\n    campaign_id,\n    adestra_campaign_id,\n    campaign_name,\n    email_tag,\n    message,\n    campaign_month,\n    sent,\n    sent_date, \n    delivered,\n    opened,\n    clicked,\n    unsubscribed,\n    brand_id,\n    division_id,\n\treporting_division_id\n)\nselect\n    2000000000 + e.cid as cid,\n    left(messagename,8) as campaign_id,\n    '' as adestra_campaign_id,\n    case\n        when (lower(messagename) regexp '.*welcome 1.*' and lower(messagename) regexp '.*uk.*') or lower(messagename) regexp '.*welcome_pregnancy_uk.*' then 'WELCOME ANTENATAL UK'\n        when (lower(messagename) regexp '.*welcome 1.*' and lower(messagename) regexp '.*roi.*') or lower(messagename) regexp '.*welcome_pregnancy_roi.*' then 'WELCOME ANTENATAL ROI'\n        when (lower(messagename) regexp '.*welcome 2.*' and lower(messagename) regexp '.*uk.*') or lower(messagename) regexp '.*welcome_newborn_uk.*' then 'WELCOME POST NEWBORN UK'\n        when (lower(messagename) regexp '.*welcome 2.*' and lower(messagename) regexp '.*roi.*') or lower(messagename) regexp '.*welcome_newborn_roi.*' then 'WELCOME POST NEWBORN ROI'\n        when (lower(messagename) regexp '.*welcome 3.*' and lower(messagename) regexp '.*uk.*') or lower(messagename) regexp '.*welcome_baby_uk.*' then 'WELCOME POST BABY UK'\n        when (lower(messagename) regexp '.*welcome 3.*' and lower(messagename) regexp '.*roi.*') or lower(messagename) regexp '.*welcome_baby_roi.*' then 'WELCOME POST BABY ROI'\n        when (lower(messagename) regexp '.*welcome 4.*' and lower(messagename) regexp '.*uk.*') or lower(messagename) regexp '.*welcome_toddler_uk.*' then 'WELCOME TODDLER UK'\n        when (lower(messagename) regexp '.*welcome 4.*' and lower(messagename) regexp '.*roi.*') or lower(messagename) regexp '.*welcome_toddler_roi.*' then 'WELCOME TODDLER ROI'\n        else messagename\n    end as campaign_name,\n    category as email_tag,\n    subcategory as message,\n    upper(to_char(sent_date, 'MON-YYYY')) as campaign_month,\n    sent_flag as sent,\n    sent_date as sent_date,\n    case when sent_flag = 1 and bounce_reporting_flag = 0 and suppress_flag = 0 then 1 else 0 end as delivered,\n    case when open_qty > 0 then 1 else 0 end as opened,\n    case when click_qty > 0 and optout_flag = 0 and close_flag = 0 then 1 else 0 end as clicked,\n    case when optout_flag = 1 or close_flag = 1 then 1 else 0 end as unsubscribed,\n    (select brand_id from ${Database}.temp.aio_faststats_ref_brand where brand = 'HCP') as brand_id, \n    (select division_id from ${Database}.temp.aio_faststats_ref_division where division = 'HCP') as division_id,\n    (select reporting_division_id from ${Database}.temp.aio_faststats_ref_reporting_division where reporting_division = 'HCP') as reporting_division_id\nfrom ${DatabaseHCP}.live.engagement_levels_messages e\nwhere sent_date>= add_months(current_date,-13)\n;\n*/\n\n--cerelac update\nupdate ${Database}.temp.aio_faststats_campaign_information_rollup\nset brand_id = 31,\ndivision_id = 6,\nreporting_division_id = 93\nwhere campaign_name = 'SMA07448 CERELAC Triggered eCRM';\n--what about email_tag and message name?\n\n\n--Live Data fields\n--purina verification\ncreate or replace table ${Database}.temp.aio_faststats_purina_verification_campaign\nas\nselect distinct '121-'||trim(to_char(xr.cid)) as cid_brand, xr.cid, na.registration_campaign \nfrom ${Database}.db.names_attributes na\njoin ${Database}.live.xref_name_urn xr on na.name_urn = xr.name_urn\nwhere na.source = 'REG_WUN' and na.registration_campaign in ('Better Together','Kitten Code','Growing Pup')\n;\n\n--pet avatar live data fields\ndrop table if exists ${Database}.temp.aio_faststats_pet_avatar_live_data;\ncreate table ${Database}.temp.aio_faststats_pet_avatar_live_data\n(\ncid_brand               varchar(255),\ncid                  \tnumber(38,0),\nppa_programme           varchar(20) default '',\nexisting_consumer       varchar(1) default '',\nppa_prog_consumer       varchar(21) default '',\navatarId1               varchar(255) default 'avatarId1',\navatarId2               varchar(255) default 'avatarId2',\navatarId3               varchar(255) default 'avatarId3',\navatarId4               varchar(255) default 'avatarId4',\navatarId5               varchar(255) default 'avatarId5',\nPetId1                  varchar(255) default 'PetId1',\nPetId2                  varchar(255) default 'PetId2',\nPetId3                  varchar(255) default 'PetId3',\nPetId4                  varchar(255) default 'PetId4',\nPetId5                  varchar(255) default 'PetId5',\nPetName1                varchar(255) default 'PetName1',\nPetName2                varchar(255) default 'PetName2',\nPetName3                varchar(255) default 'PetName3',\nPetName4                varchar(255) default 'PetName4',\nPetName5                varchar(255) default 'PetName5',\necrm_hero_pet_name      varchar(255) default 'ecrm_hero_pet_name',\necrm_pet_segment        varchar(255) default 'ecrm_pet_segment',\necrm_subject_line       varchar(255) default 'ecrm_subject_line' \n)\n;\n\ninsert into ${Database}.temp.aio_faststats_pet_avatar_live_data (cid_brand,cid,ppa_programme,existing_consumer,ppa_prog_consumer) select top 1 '121-'||trim(to_char(cid)) as cid_brand, cid, 'NONE','0','NONE0' from ${Database}.live.xref_name_urn where source = 'NPP_PET_AVATAR_DAILY' order by data_date desc;\ninsert into ${Database}.temp.aio_faststats_pet_avatar_live_data (cid_brand,cid,ppa_programme,existing_consumer,ppa_prog_consumer) select top 1 '121-'||trim(to_char(cid)) as cid_brand, cid,'BT','0','BT0' from ${Database}.live.xref_name_urn where source = 'NPP_PET_AVATAR_DAILY' order by data_date desc;\ninsert into ${Database}.temp.aio_faststats_pet_avatar_live_data (cid_brand,cid,ppa_programme,existing_consumer,ppa_prog_consumer) select top 1 '121-'||trim(to_char(cid)) as cid_brand, cid,'GP','0','GP0' from ${Database}.live.xref_name_urn where source = 'NPP_PET_AVATAR_DAILY' order by data_date desc;\ninsert into ${Database}.temp.aio_faststats_pet_avatar_live_data (cid_brand,cid,ppa_programme,existing_consumer,ppa_prog_consumer) select top 1 '121-'||trim(to_char(cid)) as cid_brand, cid,'KC','0','KC0' from ${Database}.live.xref_name_urn where source = 'NPP_PET_AVATAR_DAILY' order by data_date desc;\ninsert into ${Database}.temp.aio_faststats_pet_avatar_live_data (cid_brand,cid,ppa_programme,existing_consumer,ppa_prog_consumer) select top 1 '121-'||trim(to_char(cid)) as cid_brand, cid,'NONE','1','NONE1' from ${Database}.live.xref_name_urn where source = 'NPP_PET_AVATAR_DAILY' order by data_date desc;\ninsert into ${Database}.temp.aio_faststats_pet_avatar_live_data (cid_brand,cid,ppa_programme,existing_consumer,ppa_prog_consumer) select top 1 '121-'||trim(to_char(cid)) as cid_brand, cid,'BT','1','BT1' from ${Database}.live.xref_name_urn where source = 'NPP_PET_AVATAR_DAILY' order by data_date desc;\ninsert into ${Database}.temp.aio_faststats_pet_avatar_live_data (cid_brand,cid,ppa_programme,existing_consumer,ppa_prog_consumer) select top 1 '121-'||trim(to_char(cid)) as cid_brand, cid,'GP','1','GP1' from ${Database}.live.xref_name_urn where source = 'NPP_PET_AVATAR_DAILY' order by data_date desc;\ninsert into ${Database}.temp.aio_faststats_pet_avatar_live_data (cid_brand,cid,ppa_programme,existing_consumer,ppa_prog_consumer) select top 1 '121-'||trim(to_char(cid)) as cid_brand, cid,'KC','1','KC1' from ${Database}.live.xref_name_urn where source = 'NPP_PET_AVATAR_DAILY' order by data_date desc;\n\n\n\nalter warehouse set warehouse_size = 'Xsmall';\n\n-- Create BV Lookup table for Questions\ncreate or replace table ${Database}.temp.aio_faststats_sma_bv_fs_bazaar_question as\nselect distinct cid,\nmax(bv_pro) as bv_pro,\nmax(bv_advance) as bv_advance,\nmax(bv_organic) as bv_organic\nfrom (select distinct cid,\ncase when question ilike '%PRO%' then 1 else 0 end as bv_pro,\ncase when question ilike '%ADVANCE%' then 1 else 0 end as bv_advance,\ncase when question ilike '%ORGANIC%' then 1 else 0 end as bv_organic\nfrom ${Database}.live.cid_question where question_id in (select question_id from ${Database}.db.ref_question where question ilike '%overall rating%' and question ilike '%SMA%' and question not ilike '%small%')\nunion\nselect distinct cid,\ncase when question ilike '%PRO%' then 1 else 0 end as bv_pro,\ncase when question ilike '%ADVANCE%' then 1 else 0 end as bv_advance,\ncase when question ilike '%ORGANIC%' then 1 else 0 end as bv_organic\nfrom ${Database}.live.cid_brand_question where question_id in (select question_id from ${Database}.db.ref_question where question ilike '%overall rating%' and question ilike '%SMA%' and question not ilike '%small%')\n)\ngroup by 1\norder by cid;\n\nalter table ${Database}.temp.aio_faststats_cid_brand\nadd  bv_pro int default 0,\n     bv_advance int default 0,\n     bv_organic int default 0\n;\n\nupdate ${Database}.temp.aio_faststats_cid_brand aio\nset aio.bv_pro \t\t= coalesce(bv.bv_pro,0),\n\taio.bv_advance \t= coalesce(bv.bv_advance,0),\n\taio.bv_organic\t= coalesce(bv.bv_organic,0)\nfrom ${Database}.temp.aio_faststats_sma_bv_fs_bazaar_question bv\nwhere aio.cid = bv.cid and aio.brand_id in (select brand_id from ${Database}.live.ref_brand where brand = 'SMA')\n;\n\n\ncreate or replace table ${Database}.temp.aio_faststats_sma_children\nas\nselect\n    cid,\n    hid,\n    name_urn,\n    child_urn,\n    child_id,\n    coalesce(case when lower(child_name) regexp '.*[a-z].*' and child_name <> '' then child_name else '' end,'') as child_name,\n    upper(left(gender,1)) as child_gender,\n    dob as child_dob,\n    case\n        when auto_promoted = 1 then 'True'\n        when auto_promoted = 0 then 'False'\n        else ''\n    end as child_auto_promoted,\n    case\n        when child_stage_now in ('S1','S2','S3','S4','S5','S6','S7') then replace(child_stage_now,'S','Stage ')\n        when child_stage_now in ('T1','T2','T3') then 'Pregnancy'\n        else 'No Stage'\n    end as child_stage,    \n    case\n        when child_stage_now in ('T1','T2','T3') then 'Antenatal'\n        when child_stage_now in ('S1','S2') then 'Newborn'\n        when child_stage_now in ('S3','S4') then 'Baby'\n        when child_stage_now in ('S5','S6') then 'Toddler'\n        when child_stage_now in ('S7') then 'Child'\n        else 'No Stage'\n    end as child_stage_group,\n    case\n        when child_stage_reg in ('S1','S2','S3','S4','S5','S6','S7') then replace(child_stage_reg,'S','Stage ')\n        when child_stage_reg in ('T1','T2','T3') then 'Pregnancy ' || child_stage_reg\n        when child_stage_reg = 'Pre' then 'Pre Pregnancy'\n        else 'No Stage'\n    end as child_stage_at_registration,  \n    case\n        when child_stage_reg in ('T1','T2','T3') then 'Antenatal'\n        when child_stage_reg in ('S1','S2') then 'Newborn'\n        when child_stage_reg in ('S3','S4') then 'Baby'\n        when child_stage_reg in ('S5','S6') then 'Toddler'\n        when child_stage_reg in ('S7') then 'Child'\n        else 'No Stage'\n    end as child_stage_group_at_registration,    \n    comms_programme as programme,\n    comms_subprogramme as subprogramme,\n    comms_programme_description as programme_description,\n    comms_duedate as programme_comm_due,\n    live_flag  \nfrom ${Database}.live.dependant\nwhere dob > add_months(current_date(),-36)  --remove children 3+ years old\t\n;\n\ninsert into ${Database}.db.aio_faststats_sma_ecrm_reengagement_segmentation\n(\n    bbw_urn,\n    gender,\n    re_engagement,\n    eng_split\n)\nselect distinct\n    eng.bbw_urn,\n    gender,\n    re_engagement,\n    decode(ntile(2) over (partition by gender, re_engagement order by random()),1,'E',2,'BC') as eng_split\nfrom (\n         select distinct\n             cs.bbw_urn,\n             cs.gender,\n             dep.comms_programme,\n             case\n                 when comms_programme = 'Antenatal' and en.open_lastdate > dateadd(day,-75,current_date()) and en.open_lastdate <= dateadd(day,-60,current_date()) then 'R3'\n                 when comms_programme = 'Postnatal' and en.open_lastdate > dateadd(day,-105,current_date()) and en.open_lastdate <= dateadd(day,-90,current_date()) then 'R3'\n                 when comms_programme = 'Antenatal' and en.open_lastdate > dateadd(day,-105,current_date()) and en.open_lastdate <= dateadd(day,-90,current_date()) then 'R6'\n                 when comms_programme = 'Postnatal' and en.open_lastdate > dateadd(day,-150,current_date()) and en.open_lastdate <= dateadd(day,-135,current_date()) then 'R6'\n                 when comms_programme = 'Antenatal' and en.open_lastdate is null and cast(cs.live_regdate as date) > dateadd(day,-75,current_date()) and cast(cs.live_regdate as date) <= dateadd(day,-60,current_date()) then 'R3'\n                 when comms_programme = 'Postnatal' and en.open_lastdate is null and cast(cs.live_regdate as date) > dateadd(day,-105,current_date()) and cast(cs.live_regdate as date) <= dateadd(day,-90,current_date()) then 'R3'\n                 when comms_programme = 'Antenatal' and en.open_lastdate is null and cast(cs.live_regdate as date) > dateadd(day,-105,current_date()) and cast(cs.live_regdate as date) <= dateadd(day,-90,current_date()) then 'R6'\n                 when comms_programme = 'Postnatal' and en.open_lastdate is null and cast(cs.live_regdate as date) > dateadd(day,-150,current_date()) and cast(cs.live_regdate as date) <= dateadd(day,-135,current_date()) then 'R6'\n             else 'NR' end as re_engagement\n         from ${Database}.live.cid_sma cs\n         inner join ${Database}.temp.aio_faststats_cid c on c.cid = cs.cid\n         left join ${Database}.live.sma_engagement_levels en on c.cid = en.cid\n         left join ${Database}.live.dependant dep on en.cid = dep.cid and live_flag = '1' and dep.comms_duedate > current_date\n     ) eng\nleft join ( select\n       b.bbw_urn, \n       left(split_part(ecrm_pack_id,'|',3),2) as seg, \n       case when right(left(split_part(ecrm_pack_id,'|',1),2),1) = 'A' then 'Antenatal'\n            when right(left(split_part(ecrm_pack_id,'|',1),2),1) = 'P' then 'Postnatal'\n            end as stage,\n           row_number() over(partition by b.bbw_urn order by event_timestamp desc) as row_num\n     from ${Database}.db.adestra_events_sma a\n     join ${Database}.live.xref_name_urn b on a.email = b.email\n    where left(split_part(ecrm_pack_id,'|',3),2) in ('R3','R6') and campaign_name in ('SMA_Baby_Toddler_ecrm','SMA_Antenatal_ecrm','SMA_Newborn_ecrm') and event_name ilike '%sent%'\n    ) exc on eng.bbw_urn = exc.bbw_urn and eng.comms_programme = exc.stage and eng.re_engagement = exc.seg and exc.row_num = 1\nwhere eng.re_engagement <> 'NR'\n    and eng.bbw_urn not in (select bbw_urn from ${Database}.db.aio_faststats_sma_ecrm_reengagement_segmentation)\n    and exc.bbw_urn is null;\n\n\ndelete from ${Database}.db.aio_faststats_sma_ecrm_reengagement_segmentation\nwhere bbw_urn not in (\n                         select\n                             eng.bbw_urn\n                         from (\n                                  select\n                                      cs.bbw_urn,\n                                      cs.gender,\n                                      dep.comms_programme,\n                                      case\n                                          when comms_programme = 'Antenatal' and en.open_lastdate > dateadd(day,-75,current_date()) and en.open_lastdate <= dateadd(day,-60,current_date()) then 'R3'\n                                          when comms_programme = 'Postnatal' and en.open_lastdate > dateadd(day,-105,current_date()) and en.open_lastdate <= dateadd(day,-90,current_date()) then 'R3'\n                                          when comms_programme = 'Antenatal' and en.open_lastdate > dateadd(day,-105,current_date()) and en.open_lastdate <= dateadd(day,-90,current_date()) then 'R6'\n                                          when comms_programme = 'Postnatal' and en.open_lastdate > dateadd(day,-150,current_date()) and en.open_lastdate <= dateadd(day,-135,current_date()) then 'R6'\n                                          when comms_programme = 'Antenatal' and en.open_lastdate is null and cast(cs.live_regdate as date) > dateadd(day,-75,current_date()) and cast(cs.live_regdate as date) <= dateadd(day,-60,current_date()) then 'R3'\n                                          when comms_programme = 'Postnatal' and en.open_lastdate is null and cast(cs.live_regdate as date) > dateadd(day,-105,current_date()) and cast(cs.live_regdate as date) <= dateadd(day,-90,current_date()) then 'R3'\n                                          when comms_programme = 'Antenatal' and en.open_lastdate is null and cast(cs.live_regdate as date) > dateadd(day,-105,current_date()) and cast(cs.live_regdate as date) <= dateadd(day,-90,current_date()) then 'R6'\n                                          when comms_programme = 'Postnatal' and en.open_lastdate is null and cast(cs.live_regdate as date) > dateadd(day,-150,current_date()) and cast(cs.live_regdate as date) <= dateadd(day,-135,current_date()) then 'R6'\n                                      else 'NR' end as re_engagement\n                                  from ${Database}.live.cid_sma cs\n                                  inner join ${Database}.temp.aio_faststats_cid c on c.cid = cs.cid\n                                  left join ${Database}.live.sma_engagement_levels en on c.cid = en.cid\n                                  left join ${Database}.live.dependant dep on en.cid = dep.cid and live_flag = '1' and dep.comms_duedate > current_date\n                              ) eng\n                         left join ( select\n                                      b.bbw_urn, \n                                      left(split_part(ecrm_pack_id,'|',3),2) as seg, \n                                      case when right(left(split_part(ecrm_pack_id,'|',1),2),1) = 'A' then 'Antenatal'\n                                           when right(left(split_part(ecrm_pack_id,'|',1),2),1) = 'P' then 'Postnatal'\n                                      end as stage,\n                                      row_number() over(partition by b.bbw_urn order by event_timestamp desc) as row_num\n                                    from ${Database}.db.adestra_events_sma a\n                                    join ${Database}.live.xref_name_urn b on a.email = b.email\n                                    where left(split_part(ecrm_pack_id,'|',3),2) in ('R3','R6') and campaign_name in ('SMA_Baby_Toddler_ecrm','SMA_Antenatal_ecrm','SMA_Newborn_ecrm') and event_name ilike '%sent%'\n                                    ) exc on eng.bbw_urn = exc.bbw_urn and eng.comms_programme = exc.stage and eng.re_engagement = exc.seg and exc.row_num = 1\n                         where eng.re_engagement <> 'NR'\n                          --and eng.bbw_urn not in (select bbw_urn from ${Database}.db.aio_faststats_sma_ecrm_reengagement_segmentation)\n                         and exc.bbw_urn is null\n                     );\n\n\nalter warehouse set warehouse_size = 'Medium';\n\n--NPP09760 Purina Module addition - exclude people known to have pets\ncreate or replace table ${Database}.temp.aio_faststats_sma_ecrm_purina_mod_exclude_1\nas\nselect distinct\n    cid\nfrom \n    ${Database}.live.cid_pet\n;\n\n--NPP09760 Purina Module addition - exclude people who have already read module (will be sent in first email they are applicable for)\ncreate or replace table ${Database}.temp.aio_faststats_sma_ecrm_purina_mod_exclude_2\nas\nselect distinct\n    xe.cid\n--select distinct aes.campaign_name   \n--select distinct aes.event_name  \nfrom ${Database}.db.adestra_events_sma aes\njoin ${Database}.live.xref_email xe on aes.email = xe.email\nwhere\n    aes.campaign_name in ('SMA_Antenatal_ecrm','SMA_Newborn_ecrm','SMA_Baby_Toddler_ecrm')\n    and event_name in ('read','click','form_builder_click','form_builder_submit','webversion_click')\n    and event_timestamp >= to_date('2022-06-30')\n;\n\ncreate or replace table ${Database}.temp.aio_faststats_sma_ecrm_programme_content --updated 09/02/2022 (wrong table name\nas\nselect distinct\n    trim(ch.comms_programme_description)||'_'||to_char(att.bbw_urn) as bbw_urn_ecrm,\n    att.cid,\n\ttrim(to_char(select brand_id from ${Database}.live.ref_brand where brand = 'SMA'))||'-'||trim(to_char(att.cid)) as cid_brand,\n    ch.comms_programme_description,\n    ch.comms_duedate,\n    case when att.re_engagement = 'NR' then decode(ntile(2) over(partition by ch.comms_programme_description, ch.comms_duedate, att.re_engagement, att.gender order by 1),1,subject_a,subject_b)\n         else decode(ntile(2) over(partition by ch.comms_programme_description, ch.comms_duedate, att.re_engagement, att.gender order by 1),1,subject_a,subject_b) end as ecrm_subject,\n    att.country as ecrm_country,\n    case when ecrm.stage = 'Antenatal' and (right(att.re_engagement,2) = 'BC' or right(att.re_engagement,1) = 'E') and att.gender in ('F','X') then 'Not long now, '||case when att.firstname <> ''then att.firstname else 'mummy' end||' and bump!'\n         when ecrm.stage = 'Antenatal' and (right(att.re_engagement,2) = 'BC' or right(att.re_engagement,1) = 'E') and att.gender = 'M' then 'Not long now, '||case when att.firstname <> ''then att.firstname else 'daddy' end||' and bump!'\n         when ecrm.stage = 'Newborn' and (right(att.re_engagement,2) = 'BC' or right(att.re_engagement,1) = 'E') then 'Welcome to the world little one ❤'\n         when ecrm.stage = 'Baby' and (right(att.re_engagement,2) = 'BC' or right(att.re_engagement,1) = 'E') and att.gender in ('F','X') then 'Hello there, '||case when att.firstname <> ''then att.firstname else 'mummy' end||'! How''s it going?'\n         when ecrm.stage = 'Baby' and (right(att.re_engagement,2) = 'BC' or right(att.re_engagement,1) = 'E') and att.gender = 'M' then 'Hello there, '||case when att.firstname <> ''then att.firstname else 'daddy' end||'! How''s it going?'\n    else ecrm.preheader end as ecrm_preheader,\n    ecrm.header as ecrm_header_text,\n    case when ecrm.stage = 'Antenatal' then (40 - cast(week_month as int)) else 0 end as ecrm_weeks_pregnant,\n    0 as ecrm_days_pregnant,\n    ecrm.header_image_name as ecrm_stage,\n    ecrm.hero_image_name as ecrm_hero_image,\n    case\n        when att.country = 'UK' and hero_link_image > '' then hero_link_image\n        when att.country = 'UK' and hero_link_gif > '' then hero_link_gif\n        when att.country = 'ROI' and hero_link_roi_image > '' then hero_link_roi_image\n        when att.country = 'ROI' and hero_link_roi_gif > '' then hero_link_roi_gif\n        else ''\n    end as ecrm_hero_link,\n    ecrm.hero_link_label as ecrm_hero_link_label,\n    --ecrm.salut_copy_seg1 as ecrm_intro_text_a,   --issue: hidden extra tab identified in this field  (replaced below) : LW 07/02/2022\n    case when ecrm.salut_copy_seg1 ilike '%She might be full of energy this week. Might be time to help her keep active.' then 'She might be full of energy this week. Might be time to help her keep active.'\n    \telse ecrm.salut_copy_seg1 end as ecrm_intro_text_a,\n    ecrm.salut_copy_seg2 as ecrm_intro_text_b,\n    ecrm.salut_cta as ecrm_intro_link_text,\n    decode(att.country,'UK',salut_link,'ROI',salut_link_roi) as ecrm_intro_link,\n    ecrm.salut_link_label as ecrm_intro_link_label,\n    ecrm.art_1_header as ecrm_article_1_title,\n    case when att.country = 'ROI' and art_1_copy_roi_seg1 > '' then art_1_copy_roi_seg1 else ecrm.art_1_copy_seg1 end as ecrm_article_1_text_1a,\n    case when att.country = 'ROI' and art_1_copy_roi_seg1 > '' then art_1_copy_roi_seg2 else ecrm.art_1_copy_seg2 end as ecrm_article_1_text_1b,\n    case when att.country = 'ROI' and art_1_copy_roi_seg1 > '' then '' else ecrm.art_1_copy_seg3 end as ecrm_article_1_text_1c,\n    ecrm.art_1_cta as ecrm_article_1_link_text,\n    decode(att.country,'UK',art_1_link,'ROI',art_1_link_roi) as ecrm_article_1_link,\n    ecrm.art_1_link_label as ecrm_article_1_link_label,\n    ecrm.art_2_header as ecrm_article_2_title,\n    case when att.country = 'ROI' and art_2_copy_roi > '' then art_2_copy_roi else ecrm.art_2_copy_seg1 end as ecrm_article_2_text_1a,\n    case when att.country = 'ROI' and art_2_copy_roi > '' then '' else ecrm.art_2_copy_seg2 end as ecrm_article_2_text_1b,\n    ecrm.art_2_cta as ecrm_article_2_link_text,\n    decode(att.country,'UK',art_2_link,'ROI',art_2_link_roi) as ecrm_article_2_link,\n    ecrm.art_2_link_label as ecrm_article_2_link_label,\n    ecrm.tfy_image_name_1 as ecrm_tip_image_1,\n    ecrm.tfy_sub_header_1 as ecrm_tip_title_1,\n    ecrm.tfy_copy_1_seg1 as ecrm_tip_text_1_a,\n    ecrm.tfy_copy_1_seg2 as ecrm_tip_text_1_b,\n    ecrm.tfy_cta_1 as ecrm_link_text_1,\n    decode(att.country,'UK',tfy_link_1_image,'ROI',tfy_link_roi_1_image) as ecrm_tip_1a_link,\n    decode(att.country,'UK',tfy_link_1_button,'ROI',tfy_link_roi_1_button) as ecrm_tip_1b_link,\n    ecrm.tfy_link_label_1 as ecrm_tip_1_link_label,\n    ecrm.tfy_image_name_2 as ecrm_tip_image_2,\n    ecrm.tfy_sub_header_2 as ecrm_tip_title_2,\n    ecrm.tfy_copy_2_seg1 as ecrm_tip_text_2_a,\n    ecrm.tfy_copy_2_seg2 as ecrm_tip_text_2_b,\n    ecrm.tfy_cta_2 as ecrm_link_text_2,\n    decode(att.country,'UK',tfy_link_2_image,'ROI',tfy_link_roi_2_image) as ecrm_tip_2a_link,\n    decode(att.country,'UK',tfy_link_2_button,'ROI',tfy_link_roi_2_button) as ecrm_tip_2b_link,\n    ecrm.tfy_link_label_2 as ecrm_tip_2_link_label,\n    ecrm.prod_header as ecrm_product_title,\n    ecrm.prod_image_name as ecrm_product_image,\n    decode(att.country,'UK',prod_link_1,'ROI',prod_link_1_roi) as ecrm_product_image_link,\n    ecrm.prod_link_label_1 as ecrm_product_image_link_label,\n    ecrm.prod_copy_1 as ecrm_product_text,\n    decode(att.country,'UK',prod_link_2,'ROI',prod_link_2_roi) as ecrm_product_link_1,\n    ecrm.prod_link_label_2 as ecrm_product_link_label_1,\n    decode(att.country,'UK',prod_link_3,'ROI',prod_link_3_roi) as ecrm_product_link_2,\n    ecrm.prod_link_label_3 as ecrm_product_link_label_2,\n    ecrm.prod_icon_1 as ecrm_product_icon_1,\n    ecrm.prod_sub_header_1 as ecrm_product_icon_1_title,\n    ecrm.prod_copy_2 as ecrm_product_icon_1_text,\n    ecrm.prod_icon_2 as ecrm_product_icon_2,\n    ecrm.prod_sub_header_2 as ecrm_product_icon_2_title,\n    ecrm.prod_copy_3 as ecrm_product_icon_2_text,\n    ecrm.prod_icon_3 as ecrm_product_icon_3,\n    ecrm.prod_sub_header_3 as ecrm_product_icon_3_title,\n    ecrm.prod_copy_4 as ecrm_product_icon_3_text,\n    ecrm.prod_note_copy as ecrm_product_note_copy ,\n    ecrm.rewards_header as ecrm_rewards_title,\n    ecrm.rewards_copy_seg1 as ecrm_rewards_text_a,\n    ecrm.rewards_copy_value as ecrm_rewards_value,\n    ecrm.rewards_copy_seg2 as ecrm_rewards_text_b,\n    ecrm.rewards_copy_seg3 as ecrm_rewards_text_c,\n    ecrm.rewards_cta as ecrm_rewards_link_text,\n    ecrm.ces_header as ecrm_careline_title,\n    ecrm.ces_copy as ecrm_careline_text,\n    case when att.country = 'UK' then ecrm.B2B_HEADER  else '' end as ecrm_b2b_title_1,\n    case when att.country = 'UK' then ecrm.B2B_IMAGE_NAME_1 else '' end as  ecrm_b2b_image_1,\n    case when att.country = 'UK' then ecrm.B2B_COPY         else '' end as  ecrm_b2b_text_1_a,\n    case when att.country = 'UK' then ecrm.B2B_CTA          else '' end as  ecrm_b2b_link_text_1,\n    case when att.country = 'UK' then ecrm.B2B_LINK_LABEL_1 else '' end as ecrm_b2b_1_link_label,\n    case when att.country = 'UK' then concat( ecrm.B2B_LINK_1 , ecrm.B2B_UTM_IMAGE_1) else '' end as ecrm_b2b_1a_link,\n    case when att.country = 'UK' then concat( ecrm.B2B_LINK_1 , ecrm.B2B_UTM_BUTTON_1) else '' end as ecrm_b2b_1b_link,\n    case when att.country = 'UK' then ecrm.B2B_COPY_2       else '' end as  ecrm_b2b_text_2_a,\n    case when att.country = 'UK' then ecrm.B2B_IMAGE_NAME_2 else '' end as ecrm_b2b_image_2,\n    case when att.country = 'UK' then ecrm.B2B_LINK_LABEL_2 else '' end as ecrm_b2b_2_link_label,\n    case when att.country = 'UK' then concat( ecrm.B2B_LINK_2 , ecrm.B2B_UTM_IMAGE_2) else '' end as ecrm_b2b_2a_link,\n    case when att.country = 'UK' then ecrm.B2B_IMAGE_NAME_3 else '' end as ecrm_b2b_image_3 ,\n    case when att.country = 'UK' then ecrm.B2B_LINK_LABEL_3 else '' end as ecrm_b2b_3_link_label,\n    case when att.country = 'UK' then concat( ecrm.B2B_LINK_3 , ecrm.B2B_UTM_IMAGE_3) else '' end as ecrm_b2b_3a_link,   \n    ecrm.important_copy_seg1 as ecrm_important_notice_1a,\n    ecrm.important_copy_seg2 as ecrm_important_notice_1b,\n    ecrm.important_copy_seg3 as ecrm_important_notice_2a,\n    ecrm.important_copy_seg4 as ecrm_important_notice_2b,\n    ecrm.important_copy_seg5 as ecrm_important_notice_3a,\n    decode(att.country,'UK',ecrm.ztc_code_uk,'ROI',ztc_code_roi) as ecrm_ztc_code,\n    '' as thirdparty_reg_url_a,\n    '' as thirdparty_reg_url_b,\n    '' as thirdparty_reg_url_c,\n    '' as thirdparty_reg_url_d,\n    replace(replace(ecrm.comms_programme_description, 'Month ','M'),'Week ','W')||'|'||trim(att.country)||'|'||ecrm.re_engagement||'|'||att.gender||'|'||ecrm.contacted_careline||'|'||ecrm.rewards_member||'|'||decode(ecrm.covid,'No COVID Version','NCV',left(ecrm.covid,1))||'|'||case when att.re_engagement = 'NR' then 'B' else decode(ntile(2) over(partition by ch.comms_programme_description, ch.comms_duedate, att.re_engagement, att.gender order by 1),1,'A','B') end as ecrm_pack_id,\n    case when att.country = 'UK' then replace(replace(replace(ecrm.comms_programme_description,'Week A','ANTENATAL WEEK '),'Week P','POST WEEK '),'Month P','POST MONTH ')\n                ||'|'||ecrm.re_engagement||'|'||trim(decode(att.gender,'M','Male','F','Female','X','Unknown'))||'|'||trim(decode(ecrm.contacted_careline, 'Y', 'Contacted Careline L12M', 'N', 'Not Contacted Careline L12M'))\n                ||'|'||trim(decode(ecrm.rewards_member, 'Y', 'Rewards Member', 'N', 'Not Rewards Member'))||'|'||trim(decode(ecrm.covid,'N','No','Y','Yes',ecrm.covid))\n                ||'|'||'Subject Line '||case when att.re_engagement = 'NR' then decode(ntile(2) over(partition by ch.comms_programme_description, ch.comms_duedate, att.re_engagement, att.gender order by 1),1,'A','B') else decode(ntile(2) over(partition by ch.comms_programme_description, ch.comms_duedate, att.re_engagement, att.gender order by 1),1,'A','B') end\n        when att.country = 'ROI' then replace(replace(replace(ecrm.comms_programme_description,'Week A','ANTENATAL WEEK '),'Week P','POST WEEK '),'Month P','POST MONTH ')||' '||att.country\n                ||'|'||ecrm.re_engagement||'|'||trim(decode(att.gender,'M','Male','F','Female','X','Unknown'))||'|'||trim(decode(ecrm.contacted_careline, 'Y', 'Contacted Careline L12M', 'N', 'Not Contacted Careline L12M'))\n                ||'|'||trim(decode(ecrm.rewards_member, 'Y', 'Rewards Member', 'N', 'Not Rewards Member'))||'|'||trim(decode(ecrm.covid,'N','No','Y','Yes',ecrm.covid))\n                ||'|'||'Subject Line '||case when att.re_engagement = 'NR' then decode(ntile(2) over(partition by ch.comms_programme_description, ch.comms_duedate, att.re_engagement, att.gender order by 1),1,'A','B') else decode(ntile(2) over(partition by ch.comms_programme_description, ch.comms_duedate, att.re_engagement, att.gender order by 1),1,'A','B') end end as ecrm_pack_name,\n    case when x1.cid is null and x2.cid is null then 'Y' else 'N' end as ecrm_purina       --NPP09760 Purina Module addition (06/2022)\nfrom (\n         select distinct\n             cs.cid,\n             cs.bbw_urn,\n             cs.gender,\n             cda.firstname,\n             case when lower(cs.country) regexp '.*ireland.*' then 'ROI' else 'UK' end as country,\n             case when en.bbw_urn is null then 'NR' else en.re_engagement||'-'||en.eng_split end as re_engagement,\n             case when ca.contact_date >= add_months(current_date,-12) then 'Y' else 'N' end as contacted_careline,\n             case when sh.cid is not null then 'Y' else 'N' end as rewards_member\n         from ${Database}.live.cid_sma cs\n         inner join ${Database}.temp.aio_faststats_cid c on c.cid = cs.cid\n         left join ${Database}.temp.aio_faststats_cid_brand_details cda on trim(to_char(select brand_id from ${Database}.live.ref_brand where brand = 'SMA'))||'-'||trim(to_char(cs.cid)) = to_char(cda.cid_brand)\n         left join (\n                       select\n                           cid,\n                           max(to_date(contact_date,'DD/MM/YYYY')) as contact_date\n                       from ${Database}.live.cid_sma_careline\n                       group by cid\n                   ) ca on c.cid = ca.cid\n         left join ${Database}.live.sma_shopmium_rewards sh on c.cid = sh.cid\n         left join ${Database}.db.aio_faststats_sma_ecrm_reengagement_segmentation en on c.bbw_urn = to_char(en.bbw_urn) --HCP not included\n     ) att\ninner join (\n               select distinct\n                   cid,\n                   comms_programme_description,\n                   first_value(comms_duedate) over(partition by cid, comms_programme_description order by comms_duedate) as comms_duedate\n               from ${Database}.live.dependant\n               where live_flag = 1\n                   and comms_programme_description is not null\n                   and comms_duedate is not null\n           ) ch on att.cid = ch.cid\nleft join ${Database}.db.sma_ecrm_content_matrix ecrm on trim(att.re_engagement) = trim(ecrm.re_engagement)\n                                                     and trim(case when trim(att.gender) = 'X' then 'F' else trim(att.gender) end) = trim(ecrm.gender)\n                                                     and trim(att.contacted_careline) = trim(ecrm.contacted_careline)\n                                                     and trim(att.rewards_member) = trim(ecrm.rewards_member)\n                                                     and trim(ch.comms_programme_description) = trim(ecrm.comms_programme_description)\n                                                     and trim(ecrm.covid) in ('N','No COVID Version')\n--Purina module exclusions\nleft join ${Database}.temp.aio_faststats_sma_ecrm_purina_mod_exclude_1 x1 on att.cid = x1.cid\nleft join ${Database}.temp.aio_faststats_sma_ecrm_purina_mod_exclude_2 x2 on att.cid = x2.cid\n;\n\nalter warehouse set warehouse_size = 'Xsmall';\n\n\n/*\ncreate table ${Database}.temp.zbak_faststats_outputs_20220315_LW as\nselect * from ${Database}.db.faststats_outputs;\nselect * from ${Database}.temp.zbak_faststats_outputs_20220315_LW;\n\ndelete from ${Database}.db.faststats_outputs;\n\ninsert into ${Database}.db.faststats_outputs\n(extract_database,extract_schema,extract_table_name,extract_file_name,date_format,time_format,timestamp_format,encoding,extra_parameters,field_optionally_enclosed)\nvalues\n--('NESTLE','LIVE','HID','hid.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_HID','hid.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_CID','cid.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_CID_BRAND','cid_brand.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_CID_BRAND_DETAILS','cid_brand_details.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_CID_BRAND_QUESTION','cid_brand_question.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_CID_BRAND_PRODUCT','cid_brand_product.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_SHOPMIUM_REWARDS','shopmium_rewards.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_COMMS_HIST','comms_hist.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_COMMS_HIST_LOOKUP','comms_hist_lookup.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_ADESTRA_EVENTS','adestra_events.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_CAMPAIGN_INFORMATION_ROLLUP','campaign_information_rollup.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_SMA_ECRM_PROGRAMME_CONTENT','sma_ecrm_programme_content.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n--('NESTLE','TEMP','AIO_FASTSTATS_CERELAC_ECRM_PROGRAMME_CONTENT','cerelac_ecrm_programme_content.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),  --not created yet\n('NESTLE','TEMP','AIO_FASTSTATS_NESCAFE_COFFEE_FINDER','nescafe_coffee_finder.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_HCP_ATTRIBUTES','hcp_attributes.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','DEPENDANT','dependants.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),                    --eventually to be replaced with sma_children.txt\n('NESTLE','TEMP','AIO_FASTSTATS_SMA_CHILDREN','sma_children.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','CID_PET','pets.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_CID_PET','cid_pets.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','CID_LITTER','litter.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','CID_QUESTION','question.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_REF_BRAND','ref_brand.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_REF_DIVISION','ref_division.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_REF_REPORTING_DIVISION','ref_reporting_division.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','REF_BUSINESS_UNIT','ref_business_unit.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','DB','REF_QUESTION','ref_question.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','REF_PRODUCT','ref_product.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','NPP_THG_TRANS','thg_transactions.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_PURINA_VERIFICATION_CAMPAIGN','purina_verification_campaign.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','TEMP','AIO_FASTSTATS_PET_AVATAR_LIVE_DATA','pet_avatar_live_data.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n\n('NESTLE','LIVE','CID_SMA_CARELINE','cid_sma_careline.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','SMA_ENGAGEMENT_LEVELS','sma_engagement_levels.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','SMA_ENGAGEMENT_LEVELS_MESSAGES','sma_engagement_levels_messages.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','CERELAC_ORDERS','cerelac_orders.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','CERELAC_ORDER_DETAILS','cerelac_order_details.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n\n('NESTLE','LIVE','PS_BUILD_AREASFORCAMPAIGN','ps_build_areasforcampaign.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','PS_BUILD_COMMUNICATIONS','ps_build_communications.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','PS_BUILD_CONTENT_FS','ps_build_content.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','PS_BUILD_FLOWHISTORY_FS','ps_build_flowhistory.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"'),\n('NESTLE','LIVE','PS_BUILD_ATTRIBUTES','ps_build_attributes.txt','YYYY-MM-DD','HH:NN:SS','YYYY-MM-DD HH24:MI:SS','UTF8','','\"');\n\nselect * from ${Database}.db.faststats_outputs;\nselect * from ${Database}.db.sma_faststats_outputs;\n\nselect * from ${Database}.db.faststats_outputs\nminus\nselect * from ${Database}.temp.zbak_faststats_outputs_20220315_LW;\n\nselect * from ${Database}.temp.zbak_faststats_outputs_20220315_LW\nminus\nselect * from ${Database}.db.faststats_outputs;\n*/\n\n\n\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"197120":{"id":197120,"sourceID":197092,"targetID":197096},"197121":{"id":197121,"sourceID":197100,"targetID":197092},"197122":{"id":197122,"sourceID":197097,"targetID":197100},"197123":{"id":197123,"sourceID":197096,"targetID":197098}},"failureConnectors":{},"unconditionalConnectors":{"197127":{"id":197127,"sourceID":197099,"targetID":197097}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"197093":{"id":197093,"x":-2494,"y":-205,"width":307,"height":148,"text":"**In QC**","colour":"e6e63c"}},"variables":{},"grids":{}},"info":{"name":"Output for FS","description":"","type":"ORCHESTRATION","tag":"a0d05459-a516-4fad-9dbb-66a753c44b20"}}