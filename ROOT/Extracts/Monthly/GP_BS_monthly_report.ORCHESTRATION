{"job":{"components":{"197112":{"id":197112,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-400,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[197116],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197118":{"id":197118,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-159239741,"x":-224,"y":0,"width":32,"height":32,"inputConnectorIDs":[197117],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Send SQS"}}}},"visible":true},"2":{"slot":2,"name":"Region","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"eu-west-1"}}}},"visible":true},"3":{"slot":3,"name":"Queue Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${SQSClient}_reporting.fifo"}}}},"visible":true},"4":{"slot":4,"name":"Message","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database} REPORT GP_BSMonthlyReport"}}}},"visible":true},"5":{"slot":5,"name":"Message Format","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Plain"}}}},"visible":true},"6":{"slot":6,"name":"Message Group Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NestleReportTrigger"}}}},"visible":true},"7":{"slot":7,"name":"Message Deduplication Id","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${DateForQueue.now().format(\"yyyyMMddHHmmssSSS\")}"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197119":{"id":197119,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-320,"y":0,"width":32,"height":32,"inputConnectorIDs":[197116],"outputSuccessConnectorIDs":[197117],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create extract tables"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"--Growing Pup base table\ndrop table if exists ${Database}.temp.NPP08483_Growing_Pup_report;\nCREATE OR REPLACE TABLE ${Database}.temp.NPP08483_Growing_Pup_report\nas\nselect\n    x.cid,\n    case when contains(lower(pup.reg_source),'reg_kc') then 'Kennel Club'\n         when contains(lower(pup.reg_source),'reg_wun') then 'Purina Website'\n         when  contains(lower(pup.reg_source),'reg_thg') then 'The Hut Group'\n         when  contains(upper(pup.reg_source),'GP_SOCIAL') then 'Social'\n         else  'The Hut Group' end as registration_source,\n    pup.reg_date as registration_date,\n    x.campaign_id,\n    x.adestra_campaign_id,\n    x.adestra_campaign_name,\n                case when x.adestra_campaign_name = 'npp04398_growingpup_consumer1' then 'Welcome'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer2' then 'Chapter 1'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer3' then 'Chapter 2'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer4' then 'Chapter 3'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer5' then 'Chapter 4'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer6' then 'Chapter 5'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer7' then 'Chapter 6'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer8' then 'Chapter 7'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer9' then 'Chapter 8'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer10' then 'Chapter 9'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer11' then 'Chapter 10'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer12' then 'Chapter 11'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer13' then 'Chapter 12'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer14' then 'Chapter 13'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer15' then 'Chapter 14'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer16' then 'Chapter 15'\n                 when x.adestra_campaign_name = 'npp04398_growingpup_consumer17' then 'Chapter 16'\n                 end as email,\n    x.link_label,\n    x.link_url,\n    x.event_name,\n    x.Content_Pillar,\n    x.Sub_Categories,\n    case when x.sent_date is not null then 1 else 0 end as sent,\n    x.sent_date,\n    case when (x.bounce_date is null and x.sent_date is not null) then 1 else 0 end as delivered,\n    case when (x.bounce_date is null and x.sent_date is not null) then x.sent_date end as delivered_date,\n    case when x.open_date is not null then 1 else 0 end as opened,\n    x.open_date,\n    case when x.clicked_date is not null then 1 else 0 end as clicked,\n    x.clicked_date,\n    x.num_clicks,\n    case when x.unsubscribed_date is not null then 1 else 0 end as unsubscribed,\n    x.unsubscribed_date,\n    case when right(x.kog_pack,1) = '1' then 'Pro Plan'\n         when right(x.kog_pack,1) = '2' then 'Beta'\n         else 'Pro Plan' -- older one\n         end as brand,\n    first_value(replace(x.adestra_campaign_name,'npp04398_growingpup_consumer','')) over(partition by x.cid order by sent_date desc) as last_sent,\n    first_value(case when open_date is not null then replace(x.adestra_campaign_name,'npp04398_growingpup_consumer','') else 'N/A' end) over(partition by x.cid order by open_date desc nulls last) as last_opened,\n    coalesce(p_age.signup_age,'8 Weeks') as pet_age\nfrom (\n        select\n            ae1.cid,\n            ae1.campaign_id,\n            ae1.adestra_campaign_id,\n            ae1.adestra_campaign_name,\n            ae1.kog_pack,\n            ae2.link_label,\n            ae2.link_url,\n            ae2.event_name,\n            ae2.Content_Pillar,\n            ae2.Sub_Categories,\n            ae2.num_clicks,\n            max(case when ae1.event_name = 'sent_campaign' then cast(ae1.event_timestamp as date) end) as sent_date,\n            max(case when rlike(ae1.event_name,'(.*)(known_bounce|suppressed_global|undeliverable|inbound_bounce|inbound_domain|inbound_quota|inbound_user)(.*)','i') then cast(ae1.event_timestamp as date) end) as bounce_date,\n            max(case when rlike(ae1.event_name,'(.*)(read|click)(.*)','i') then cast(ae1.event_timestamp as date) end) as open_date,\n            max(case when contains(lower(ae1.event_name),'click') then cast(ae1.event_timestamp as date) end) as clicked_date,\n            max(u.data_date) as unsubscribed_date\n        from ${Database}.live.adestra_events ae1\n        left join (\n                    select\n                        ae.cid,\n                        un.data_date,\n                        ae.campaign_id,\n                        ae.adestra_campaign_id,\n                        ae.adestra_campaign_name,\n                        row_number() over(partition by ae.cid, un.data_date order by case when contains(lower(link_url),'unsub') then 1 else 0 end desc, event_timestamp desc) as rn\n                    from ${Database}.db.supps_unsubscribe un\n                    inner join ${Database}.live.adestra_events ae on lower(ae.email) = lower(un.email)\n                                                            and un.data_date >= cast(ae.event_timestamp as date)\n                                                            and un.data_date <= (cast(ae.event_timestamp as date) + 7)\n                    where rlike(ae.event_name,'(.*)(read|click)(.*)','i')\n                    ) u on ae1.cid = u.cid\n                       and ae1.campaign_id = u.campaign_id\n                       and ae1.adestra_campaign_id = u.adestra_campaign_id\n        left join (\n                    select\n                        ae.cid,\n                        ae.campaign_id,\n                        ae.adestra_campaign_id,\n                        ae.adestra_campaign_name,\n                        ae.event_name,\n                        rll.link_label,\n                        ae.link_url,\n                        case when contains(rll.link_label,'|') then trim(tbw.db.strchop(rll.link_label,'|',2,2)) else trim(tbw.db.strchop(rll.link_label,'-',2,2)) end as content_pillar,\n                        case when contains(rll.link_label,'|') then trim(tbw.db.strchop(rll.link_label,'|',3,3)) else trim(tbw.db.strchop(rll.link_label,'-',3,3)) end as sub_categories,\n                        sum(case when contains(lower(ae.event_name),'click') then 1 else 0 end) as num_clicks\n                    from ${Database}.live.adestra_events ae\n                    left join ${Database}.db.ref_link_label rll on ae.adestra_campaign_name = rll.campaign_name and ae.link_url = rll.link_url\n                    where ae.link_url > ''\n                    and contains(lower(ae.adestra_campaign_name),'npp04398_growingpup_consumer')\n                    group by 1,2,3,4,5,6,7,9\n                ) ae2 on ae1.cid = ae2.cid\n                     and ae1.campaign_id = ae2.campaign_id\n                     and ae1.adestra_campaign_id = ae2.adestra_campaign_id\n         where contains(lower(ae1.adestra_campaign_name),'npp04398_growingpup_consumer')\n        group by 1,2,3,4,5,6,7,8,9,10,11\n        ) x\njoin (\n        select distinct \n            xr.cid,\n            first_value(case when contains(lower(n.name_urn),'growing pup social') then 'GP_SOCIAL' else n.source end) over(partition by xr.cid order by n.source_date asc) as reg_source,\n            first_value(n.reg_date) over(partition by xr.cid order by n.source_date asc) as reg_date\n        from ${Database}.db.names n \n        join ${Database}.db.pet p on p.name_urn = n.name_urn\n        left join ${Database}.live.xref_name_urn xr on xr.name_urn = n.name_urn\n        where ((contains(lower(n.source),'reg_kc') or (contains(lower(n.source),'reg_thg')) or (contains(lower(n.source),'reg_wun'))) \n              and source_brand_id = (select brand_id from ${Database}.live.ref_brand where contains(lower(brand),'growing pup')))\n        and xr.cid is not null\n        ) pup on pup.cid = x.cid\nleft join (\n            select distinct \n                xr.cid, \n                first_value(trim(tbw.db.strchop(cell_description,'-',3,3))) over (partition by xr.cid order by ch.drop_date) as signup_age \n            from ${Database}.db.comms_hist ch \n            inner join ${Database}.live.xref_name_urn xr on xr.name_urn = ch.name_urn\n            join ${Database}.db.comms_hist_lookup chl on chl.campaign_id = ch.campaign_id \n            and chl.cell_id = ch.cell_id\n            and chl.pack_id = ch.pack_id\n            where contains(lower(ch.promotion_id),'npp04398_c')\n            and ch.cell_id <> '1'\n           ) p_age on p_age.cid = x.cid\n;\n\ndrop table if exists ${Database}.jobs.NPP08483_Growing_Pup_report_email;\ncreate table ${Database}.jobs.NPP08483_Growing_Pup_report_email\n(\nemail         \t\t            varchar(100) default '',\nsent           \t\t            int default 0,\ndelivered                       int default 0,\ndelivered_percent               decimal(16,4) default 0,\nopened         \t\t            int default 0,\nopened_percent                  decimal(16,4) default 0,\nclicked        \t\t            int default 0,\nclicked_opened                  decimal(16,4) default 0,\nclicked_range_brand        \t\tint default 0,\nclicked_range_brand_opened      decimal(16,4) default 0,\nunsubs       \t\t            int default 0,\nunsubs_percent                  decimal(16,4) default 0\n)\n;\n\ninsert into ${Database}.jobs.NPP08483_Growing_Pup_report_email\n(email)\nvalues\n('Welcome'),\n('Chapter 1'),\n('Chapter 2'),\n('Chapter 3'),\n('Chapter 4'),\n('Chapter 5'),\n('Chapter 6'),\n('Chapter 7'),\n('Chapter 8'),\n('Chapter 9'),\n('Chapter 10'),\n('Chapter 11'),\n('Chapter 12'),\n('Chapter 13'),\n('Chapter 14'),\n('Chapter 15'),\n('Chapter 16'),\n('Total')\n;\n\nmerge into ${Database}.jobs.NPP08483_Growing_Pup_report_email a\nusing (\nselect\n    email,\n    count(distinct case when sent = 1 then cid else null end) as sent,\n    count(distinct case when delivered = 1 then cid else null end) as delivered,\n    count(distinct case when delivered = 1 then cid else null end)/cast(count(distinct case when sent = 1 then cid else null end) as decimal(16,4)) as delivered_percent,\n    count(distinct case when opened = 1 then cid else null end) as opened,\n    case when count(distinct case when opened = 1 then cid else null end) = 0 then 0\n         else count(distinct case when opened = 1 then cid else null end)/cast(count(distinct case when delivered = 1 then cid else null end) as decimal(16,4)) end as opened_percent,\n    count(distinct case when clicked = 1 then cid else null end) as clicked,\n    case when count(distinct case when clicked = 1 then cid else null end) = 0 then 0\n         else count(distinct case when clicked = 1 then cid else null end)/cast(count(distinct case when opened = 1 then cid else null end) as decimal(16,4)) end as clicked_opened,\n    count(distinct case when event_name = 'click' and link_label ilike '%Range Brand%' then cid else null end) as clicked_range_brand,\n     case when count(distinct case when event_name = 'click' and link_label ilike '%Range Brand%' then cid else null end) = 0 then 0\n         else count(distinct case when event_name = 'click' and link_label ilike '%Range Brand%' then cid else null end)/cast(count(distinct case when opened = 1 then cid else null end) as decimal(16,4)) end as clicked_range_brand_opened,\n    count(distinct case when unsubscribed = 1 then cid else null end) as unsubs,\n    case when count(distinct case when unsubscribed = 1 then cid else null end) = 0 then 0\n         else count(distinct case when unsubscribed = 1 then cid else null end)/cast(count(distinct case when delivered = 1 then cid else null end) as decimal(16,4)) end as unsubs_percent\nfrom ${Database}.temp.NPP08483_Growing_Pup_report pca\nwhere sent_date >= date_trunc('MONTH',current_date - interval '1 month')\nand sent_date < LAST_DAY(current_date - interval '1 month')\ngroup by 1\n        ) b on a.email = b.email\nwhen matched then update \nset        \t\t        \na.sent           \t\t        =  b.sent,\na.delivered                     =  b.delivered,\na.delivered_percent             =  b.delivered_percent, \na.opened         \t\t        =  b.opened,\na.opened_percent                =  b.opened_percent, \na.clicked        \t\t        =  b.clicked, \na.clicked_opened                =  b.clicked_opened, \na.clicked_range_brand        \t=  b.clicked_range_brand,    \na.clicked_range_brand_opened    =  b.clicked_range_brand_opened, \na.unsubs       \t\t            =  b.unsubs,\na.unsubs_percent                =  b.unsubs_percent  \n;\n\n--add in total unique volumes for the month\nmerge into ${Database}.jobs.NPP08483_Growing_Pup_report_email a\nusing (\nselect\n    count(distinct case when sent = 1 then cid else null end) as sent,\n    count(distinct case when delivered = 1 then cid else null end) as delivered,\n    count(distinct case when delivered = 1 then cid else null end)/cast(count(distinct case when sent = 1 then cid else null end) as decimal(16,4)) as delivered_percent,\n    count(distinct case when opened = 1 then cid else null end) as opened,\n    case when count(distinct case when opened = 1 then cid else null end) = 0 then 0\n         else count(distinct case when opened = 1 then cid else null end)/cast(count(distinct case when delivered = 1 then cid else null end) as decimal(16,4)) end as opened_percent,\n    count(distinct case when clicked = 1 then cid else null end) as clicked,\n    case when count(distinct case when clicked = 1 then cid else null end) = 0 then 0\n         else count(distinct case when clicked = 1 then cid else null end)/cast(count(distinct case when opened = 1 then cid else null end) as decimal(16,4)) end as clicked_opened,\n    count(distinct case when event_name = 'click' and link_label ilike '%Range Brand%' then cid else null end) as clicked_range_brand,\n     case when count(distinct case when event_name = 'click' and link_label ilike '%Range Brand%' then cid else null end) = 0 then 0\n         else count(distinct case when event_name = 'click' and link_label ilike '%Range Brand%' then cid else null end)/cast(count(distinct case when opened = 1 then cid else null end) as decimal(16,4)) end as clicked_range_brand_opened,\n    count(distinct case when unsubscribed = 1 then cid else null end) as unsubs,\n    case when count(distinct case when unsubscribed = 1 then cid else null end) = 0 then 0\n         else count(distinct case when unsubscribed = 1 then cid else null end)/cast(count(distinct case when delivered = 1 then cid else null end) as decimal(16,4)) end as unsubs_percent\nfrom ${Database}.temp.NPP08483_Growing_Pup_report pca\nwhere sent_date >= date_trunc('MONTH',current_date - interval '1 month')\nand sent_date < LAST_DAY(current_date - interval '1 month')\n        ) b on a.email = 'Total'\nwhen matched then update \nset        \t\t        \na.sent           \t\t        =  b.sent,\na.delivered                     =  b.delivered,\na.delivered_percent             =  b.delivered_percent, \na.opened         \t\t        =  b.opened,\na.opened_percent                =  b.opened_percent, \na.clicked        \t\t        =  b.clicked, \na.clicked_opened                =  b.clicked_opened, \na.clicked_range_brand        \t=  b.clicked_range_brand,    \na.clicked_range_brand_opened    =  b.clicked_range_brand_opened, \na.unsubs       \t\t            =  b.unsubs,\na.unsubs_percent                =  b.unsubs_percent  \n;\n\ndrop table if exists ${Database}.jobs.NPP08483_Growing_Pup_retention_counts;\ncreate table ${Database}.jobs.NPP08483_Growing_Pup_retention_counts\n(\nwelcome_sends_month1           \t\tint default 0,\nunsubs_month1                       int default 0,\nretention_month1_percent            decimal(16,4) default 0,\nwelcome_sends_month2           \t\tint default 0,\nunsubs_month2                       int default 0,\nretention_month2_percent            decimal(16,4) default 0,\nwelcome_sends_month3           \t\tint default 0,\nunsubs_month3                       int default 0,\nretention_month3_percent            decimal(16,4) default 0,\nwelcome_sends_month4           \t\tint default 0,\nunsubs_month4                       int default 0,\nretention_month4_percent            decimal(16,4) default 0,\nwelcome_sends_month5           \t\tint default 0,\nunsubs_month5                       int default 0,\nretention_month5_percent            decimal(16,4) default 0,\nwelcome_sends_month6           \t\tint default 0,\nunsubs_month6                       int default 0,\nretention_month6_percent            decimal(16,4) default 0,\nwelcome_sends_month7           \t\tint default 0,\nunsubs_month7                       int default 0,\nretention_month7_percent            decimal(16,4) default 0,\nwelcome_sends_month8           \t\tint default 0,\nunsubs_month8                       int default 0,\nretention_month8_percent            decimal(16,4) default 0,\nwelcome_sends_month9           \t\tint default 0,\nunsubs_month9                       int default 0,\nretention_month9_percent            decimal(16,4) default 0,\nwelcome_sends_month10               int default 0,\nunsubs_month10                      int default 0,\nretention_month10_percent           decimal(16,4) default 0,\nwelcome_sends_month11           \tint default 0,\nunsubs_month11                      int default 0,\nretention_month11_percent           decimal(16,4) default 0,\nwelcome_sends_month12           \tint default 0,\nunsubs_month12                      int default 0,\nretention_month12_percent           decimal(16,4) default 0\n)\n;\n\ninsert into ${Database}.jobs.NPP08483_Growing_Pup_retention_counts (welcome_sends_month1,unsubs_month1,welcome_sends_month2,unsubs_month2,welcome_sends_month3,unsubs_month3,welcome_sends_month4,unsubs_month4,welcome_sends_month5,unsubs_month5,welcome_sends_month6,unsubs_month6,welcome_sends_month7,unsubs_month7,welcome_sends_month8,unsubs_month8,welcome_sends_month9,unsubs_month9,welcome_sends_month10,unsubs_month10,welcome_sends_month11,unsubs_month11,welcome_sends_month12,unsubs_month12)\nselect\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '1 month') and sent_date < LAST_DAY(current_date - interval '1 month') then cid end) as welcome_sends_month1,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '1 month') and sent_date < LAST_DAY(current_date - interval '1 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '1 month') then cid end) as unsubs_month1,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '2 month') and sent_date < LAST_DAY(current_date - interval '2 month') then cid end) as welcome_sends_month2,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '2 month') and sent_date < LAST_DAY(current_date - interval '2 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '2 month') then cid end) as unsubs_month2,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '3 month') and sent_date < LAST_DAY(current_date - interval '3 month') then cid end) as welcome_sends_month3,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '3 month') and sent_date < LAST_DAY(current_date - interval '3 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '3 month') then cid end) as unsubs_month3,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '4 month') and sent_date < LAST_DAY(current_date - interval '4 month') then cid end) as welcome_sends_month4,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '4 month') and sent_date < LAST_DAY(current_date - interval '4 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '4 month') then cid end) as unsubs_month4,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '5 month') and sent_date < LAST_DAY(current_date - interval '5 month') then cid end) as welcome_sends_month5,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '5 month') and sent_date < LAST_DAY(current_date - interval '5 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '5 month') then cid end) as unsubs_month5,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '6 month') and sent_date < LAST_DAY(current_date - interval '6 month') then cid end) as welcome_sends_month6,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '6 month') and sent_date < LAST_DAY(current_date - interval '6 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '6 month') then cid end) as unsubs_month6,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '7 month') and sent_date < LAST_DAY(current_date - interval '7 month') then cid end) as welcome_sends_month7,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '7 month') and sent_date < LAST_DAY(current_date - interval '7 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '7 month') then cid end) as unsubs_month7,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '8 month') and sent_date < LAST_DAY(current_date - interval '8 month') then cid end) as welcome_sends_month8,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '8 month') and sent_date < LAST_DAY(current_date - interval '8 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '8 month') then cid end) as unsubs_month8,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '9 month') and sent_date < LAST_DAY(current_date - interval '9 month') then cid end) as welcome_sends_month9,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '9 month') and sent_date < LAST_DAY(current_date - interval '9 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '9 month') then cid end) as unsubs_month9,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '10 month') and sent_date < LAST_DAY(current_date - interval '10 month') then cid end) as welcome_sends_month10,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '10 month') and sent_date < LAST_DAY(current_date - interval '10 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '10 month') then cid end) as unsubs_month10,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '11 month') and sent_date < LAST_DAY(current_date - interval '11 month') then cid end) as welcome_sends_month11,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '11 month') and sent_date < LAST_DAY(current_date - interval '11 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '11 month') then cid end) as unsubs_month11,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '12 month') and sent_date < LAST_DAY(current_date - interval '12 month') then cid end) as welcome_sends_month12,\n    count(distinct case when email = 'Welcome' and sent_date >= date_trunc('MONTH',current_date - interval '12 month') and sent_date < LAST_DAY(current_date - interval '12 month') and unsubscribed = 1 and unsubscribed_date > date_trunc('MONTH',current_date - interval '12 month') then cid end) as unsubs_month12\n    from ${Database}.temp.NPP08483_Growing_Pup_report pca\n;\n\nmerge into ${Database}.jobs.NPP08483_Growing_Pup_retention_counts a\nusing (\nselect\n    case when sum(welcome_sends_month1 - unsubs_month1) = 0 then 0\n         else sum(welcome_sends_month1 - unsubs_month1)/cast(sum(welcome_sends_month1) as decimal(16,4)) end as retention_month1_percent,\n    case when sum(welcome_sends_month2 - unsubs_month2) = 0 then 0\n         else sum(welcome_sends_month2 - unsubs_month2)/cast(sum(welcome_sends_month2) as decimal(16,4)) end as retention_month2_percent,\n    case when sum(welcome_sends_month3 - unsubs_month3) = 0 then 0\n         else sum(welcome_sends_month3 - unsubs_month3)/cast(sum(welcome_sends_month3) as decimal(16,4)) end as retention_month3_percent,\n    case when sum(welcome_sends_month4 - unsubs_month4) = 0 then 0\n         else sum(welcome_sends_month4 - unsubs_month4)/cast(sum(welcome_sends_month4) as decimal(16,4)) end as retention_month4_percent,\n    case when sum(welcome_sends_month5 - unsubs_month5) = 0 then 0\n         else sum(welcome_sends_month5 - unsubs_month5)/cast(sum(welcome_sends_month5) as decimal(16,4)) end as retention_month5_percent,\n    case when sum(welcome_sends_month6 - unsubs_month6) = 0 then 0\n         else sum(welcome_sends_month6 - unsubs_month6)/cast(sum(welcome_sends_month6) as decimal(16,4)) end as retention_month6_percent,\n    case when sum(welcome_sends_month7 - unsubs_month7) = 0 then 0\n         else sum(welcome_sends_month7 - unsubs_month7)/cast(sum(welcome_sends_month7) as decimal(16,4)) end as retention_month7_percent,\n    case when sum(welcome_sends_month8 - unsubs_month8) = 0 then 0\n         else sum(welcome_sends_month8 - unsubs_month8)/cast(sum(welcome_sends_month8) as decimal(16,4)) end as retention_month8_percent,\n    case when sum(welcome_sends_month9 - unsubs_month9) = 0 then 0\n         else sum(welcome_sends_month9 - unsubs_month9)/cast(sum(welcome_sends_month9) as decimal(16,4)) end as retention_month9_percent,\n    case when sum(welcome_sends_month10 - unsubs_month10) = 0 then 0\n         else sum(welcome_sends_month10 - unsubs_month10)/cast(sum(welcome_sends_month10) as decimal(16,4)) end as retention_month10_percent,\n    case when sum(welcome_sends_month11 - unsubs_month11) = 0 then 0\n         else sum(welcome_sends_month11 - unsubs_month11)/cast(sum(welcome_sends_month11) as decimal(16,4)) end as retention_month11_percent,\n    case when sum(welcome_sends_month12 - unsubs_month12) = 0 then 0\n         else sum(welcome_sends_month12 - unsubs_month12)/cast(sum(welcome_sends_month12) as decimal(16,4)) end as retention_month12_percent\n   from ${Database}.jobs.NPP08483_Growing_Pup_retention_counts pca\n        ) b on a.retention_month1_percent = 0\nwhen matched then update \nset     \na.retention_month1_percent    =  b.retention_month1_percent,\na.retention_month2_percent    =  b.retention_month2_percent,\na.retention_month3_percent    =  b.retention_month3_percent,\na.retention_month4_percent    =  b.retention_month4_percent,\na.retention_month5_percent    =  b.retention_month5_percent,\na.retention_month6_percent    =  b.retention_month6_percent,\na.retention_month7_percent    =  b.retention_month7_percent,\na.retention_month8_percent    =  b.retention_month8_percent,\na.retention_month9_percent    =  b.retention_month9_percent,\na.retention_month10_percent    =  b.retention_month10_percent,\na.retention_month11_percent    =  b.retention_month11_percent,\na.retention_month12_percent    =  b.retention_month12_percent\n;\n\n--Breed Selector base table\ndrop table if exists ${Database}.temp.NPP08483_Breed_Selector_report;\nCREATE OR REPLACE TABLE ${Database}.temp.NPP08483_Breed_Selector_report\nas\nselect\n    x.cid,\n    'Purina Website' as registration_source,\n    reg.reg_date as registration_date,\n    x.campaign_id,\n    x.adestra_campaign_id,\n    x.adestra_campaign_name,\n    x.email_version as email,\n    x.link_label,\n    x.link_url,\n    x.event_name,\n    x.Content_Pillar,\n    x.Sub_Categories,\n    case when x.sent_date is not null then 1 else 0 end as sent,\n    x.sent_date,\n    case when (x.bounce_date is null and x.sent_date is not null) then 1 else 0 end as delivered,\n    case when (x.bounce_date is null and x.sent_date is not null) then x.sent_date end as delivered_date,\n    case when x.open_date is not null then 1 else 0 end as opened,\n    x.open_date,\n    case when x.clicked_date is not null then 1 else 0 end as clicked,\n    x.clicked_date,\n    x.num_clicks,\n    x.unsubscribed,\n    'Breed Selector' as brand,\n    first_value(email_version) over(partition by x.cid order by sent_date desc nulls last) as last_sent,\n    first_value(sent_date) over(partition by x.cid order by sent_date desc nulls last) as last_sent_date,\n    first_value(case when open_date is not null then email_version else 'N/A' end) over(partition by x.cid order by open_date desc nulls last) as last_opened\nfrom (\n        select\n            ae1.cid,\n            ae1.campaign_id,\n            ae1.adestra_campaign_id,\n            ae1.adestra_campaign_name,\n            case when ae1.adestra_campaign_name = 'NPP06155_Breed_Selector_GP_6_months' then '6 months to go'\n                 when ae1.adestra_campaign_name = 'NPP06155_Breed_Selector_GP_5_months' then '5 months to go'\n                 when ae1.adestra_campaign_name = 'NPP06155_Breed_Selector_GP_4_months' then '4 months to go'\n                 when ae1.adestra_campaign_name = 'NPP06155_Breed_Selector_GP_3_months' then '3 months to go'\n                 when ae1.adestra_campaign_name = 'NPP06155_Breed_Selector_GP_2_months' then '2 months to go'\n                 when ae1.adestra_campaign_name = 'NPP06155_Breed_Selector_GP_1_months' then '1 month to go'\n                 when ae1.adestra_campaign_name = 'NPP06155_Breed_Selector_GP_Welcome'  then 'Welcome'\n                 when ae1.adestra_campaign_name = 'NPP06155_Breed_Selector_GP_Sign_Up'  then 'Growing Pup Sign Up'\n                 end as email_version,\n            ae1.kog_pack,\n            ae2.link_label,\n            ae2.link_url,\n            ae2.event_name,\n            ae2.Content_Pillar,\n            ae2.Sub_Categories,\n            ae2.num_clicks,\n            max(case when ae1.event_name = 'sent_campaign' then cast(ae1.event_timestamp as date) end) as sent_date,\n            max(case when rlike(ae1.event_name,'(.*)(known_bounce|suppressed_global|undeliverable|inbound_bounce|inbound_domain|inbound_quota|inbound_user)(.*)','i') then cast(ae1.event_timestamp as date) end) as bounce_date,\n            max(case when rlike(ae1.event_name,'(.*)(read|click)(.*)','i') then cast(ae1.event_timestamp as date) end) as open_date,\n            max(case when rlike(ae1.event_name,'(.*)(click)(.*)','i') then cast(ae1.event_timestamp as date) end) as clicked_date,\n            max(case when u.email is not null then 1 else 0 end) as unsubscribed\n        from ${Database}.live.adestra_events ae1\n        left join ${Database}.db.supps_unsubscribe u on lower(ae1.email) = lower(u.email) \n                                               and lower(ae1.adestra_campaign_name) = lower(u.unsub_campaign)\n        left join (\n                    select\n                        cid,\n                        campaign_id,\n                        adestra_campaign_id,\n                        adestra_campaign_name,\n                        event_name,\n                        link_label,\n                        link_url,\n                        trim(tbw.db.strchop(link_label,'|',2,2)) as content_pillar,\n                        trim(tbw.db.strchop(link_label,'|',3,3)) as sub_categories,\n                        sum(case when contains(lower(event_name),'click') then 1 else 0 end) as num_clicks\n                    from ${Database}.live.adestra_events\n                    where link_url > ''\n                    and contains(lower(adestra_campaign_name),'npp06155_breed_selector_gp')\n                    group by 1,2,3,4,5,6,7,9\n                ) ae2 on ae1.cid = ae2.cid\n                     and ae1.campaign_id = ae2.campaign_id\n                     and ae1.adestra_campaign_id = ae2.adestra_campaign_id\n        where contains(lower(ae1.adestra_campaign_name),'npp06155_breed_selector_gp')\n        group by 1,2,3,4,5,6,7,8,9,10,11,12\n        ) x\njoin (\n        select distinct \n            cid,\n            first_value(data_date) over(partition by cid order by data_date asc) as reg_date\n        from ${Database}.live.names\n        where source_brand_id = (select brand_id from ${Database}.live.ref_brand where contains(lower(brand),'breed selector'))\n        ) reg on reg.cid = x.cid\n;\n\ndrop table if exists ${Database}.jobs.NPP08483_Breed_Selector_report_email;\ncreate table ${Database}.jobs.NPP08483_Breed_Selector_report_email\n(\nemail         \t\t            varchar(100) default '',\nsent           \t\t            int default 0,\ndelivered                       int default 0,\ndelivered_percent               decimal(16,4) default 0,\nopened         \t\t            int default 0,\nopened_percent                  decimal(16,4) default 0,\nclicked        \t\t            int default 0,\nclicked_opened                  decimal(16,4) default 0,\nunsubs       \t\t            int default 0,\nunsubs_percent                  decimal(16,4) default 0\n)\n;\n\ninsert into ${Database}.jobs.NPP08483_Breed_Selector_report_email\n(email)\nvalues\n('Welcome'),\n('6 months to go'),\n('5 months to go'),\n('4 months to go'),\n('3 months to go'),\n('2 months to go'),\n('1 month to go'),\n('Growing Pup Sign Up'),\n('Total')\n;\n\nmerge into ${Database}.jobs.NPP08483_Breed_Selector_report_email a\nusing (\nselect\n    email,\n    count(distinct case when sent = 1 then cid else null end) as sent,\n    count(distinct case when delivered = 1 then cid else null end) as delivered,\n    count(distinct case when delivered = 1 then cid else null end)/cast(count(distinct case when sent = 1 then cid else null end) as decimal(16,4)) as delivered_percent,\n    count(distinct case when opened = 1 then cid else null end) as opened,\n    case when count(distinct case when opened = 1 then cid else null end) = 0 then 0\n         else count(distinct case when opened = 1 then cid else null end)/cast(count(distinct case when delivered = 1 then cid else null end) as decimal(16,4)) end as opened_percent,\n    count(distinct case when clicked = 1 then cid else null end) as clicked,\n    case when count(distinct case when clicked = 1 then cid else null end) = 0 then 0\n         else count(distinct case when clicked = 1 then cid else null end)/cast(count(distinct case when opened = 1 then cid else null end) as decimal(16,4)) end as clicked_opened,\n    count(distinct case when unsubscribed = 1 then cid else null end) as unsubs,\n    case when count(distinct case when unsubscribed = 1 then cid else null end) = 0 then 0\n         else count(distinct case when unsubscribed = 1 then cid else null end)/cast(count(distinct case when delivered = 1 then cid else null end) as decimal(16,4)) end as unsubs_percent\nfrom ${Database}.temp.NPP08483_Breed_Selector_report r\nwhere\nsent_date >= date_trunc('MONTH',current_date - interval '1 month')\nand sent_date < LAST_DAY(current_date - interval '1 month')\ngroup by 1\n  ) b on a.email = b.email\nwhen matched then update \nset        \t\t        \na.sent           \t\t        =  b.sent,\na.delivered                     =  b.delivered,\na.delivered_percent             =  b.delivered_percent, \na.opened         \t\t        =  b.opened,\na.opened_percent                =  b.opened_percent, \na.clicked        \t\t        =  b.clicked, \na.clicked_opened                =  b.clicked_opened, \na.unsubs       \t\t            =  b.unsubs,\na.unsubs_percent                =  b.unsubs_percent  \n;\n\n--add in total unique volumes for the month\nmerge into ${Database}.jobs.NPP08483_Breed_Selector_report_email a\nusing (\nselect\n    count(distinct case when sent = 1 then cid else null end) as sent,\n    count(distinct case when delivered = 1 then cid else null end) as delivered,\n    count(distinct case when delivered = 1 then cid else null end)/nullif(cast(count(distinct case when sent = 1 then cid else null end) as decimal(16,4)),0) as delivered_percent,\n    count(distinct case when opened = 1 then cid else null end) as opened,\n    case when count(distinct case when opened = 1 then cid else null end) = 0 then 0\n         else count(distinct case when opened = 1 then cid else null end)/cast(count(distinct case when delivered = 1 then cid else null end) as decimal(16,4)) end as opened_percent,\n    count(distinct case when clicked = 1 then cid else null end) as clicked,\n    case when count(distinct case when clicked = 1 then cid else null end) = 0 then 0\n         else count(distinct case when clicked = 1 then cid else null end)/cast(count(distinct case when opened = 1 then cid else null end) as decimal(16,4)) end as clicked_opened,\n    count(distinct case when unsubscribed = 1 then cid else null end) as unsubs,\n    case when count(distinct case when unsubscribed = 1 then cid else null end) = 0 then 0\n         else count(distinct case when unsubscribed = 1 then cid else null end)/cast(count(distinct case when delivered = 1 then cid else null end) as decimal(16,4)) end as unsubs_percent\nfrom ${Database}.temp.NPP08483_Breed_Selector_report pca\nwhere sent_date >= date_trunc('MONTH',current_date - interval '1 month')\nand sent_date < LAST_DAY(current_date - interval '1 month')\n        ) b on a.email = 'Total'\nwhen matched then update \nset        \t\t        \na.sent           \t\t        =  b.sent,\na.delivered                     =  b.delivered,\na.delivered_percent             =  b.delivered_percent, \na.opened         \t\t        =  b.opened,\na.opened_percent                =  b.opened_percent, \na.clicked        \t\t        =  b.clicked, \na.clicked_opened                =  b.clicked_opened, \na.unsubs       \t\t            =  b.unsubs,\na.unsubs_percent                =  b.unsubs_percent  \n;\n\n--BS and GP registration and consumer report\ndrop table if exists ${Database}.jobs.NPP08483_BS_GP_Reg_Consumer_report_email;\ncreate table ${Database}.jobs.NPP08483_BS_GP_Reg_Consumer_report_email\nas\nselect\n  count(distinct case when CAMPAIGN_ID = 'NPP06155' and (registration_date >= date_trunc('MONTH',current_date - interval '1 month') and registration_date < LAST_DAY(current_date - interval '1 month'))then cid else null end) as light_registration,\n  count(distinct case when CAMPAIGN_ID = 'NPP04398_C' and (registration_date >= date_trunc('MONTH',current_date - interval '1 month') and registration_date < LAST_DAY(current_date - interval '1 month')) then cid else null end) as complete_registration,\n  count(distinct case when CAMPAIGN_ID in ('NPP04398_C','NPP06155') and (registration_date >= date_trunc('MONTH',current_date - interval '1 month') and registration_date < LAST_DAY(current_date - interval '1 month')) then cid else null end) as total_registration,\n  count(distinct case when OPENED = 1 and (SENT_DATE >= date_trunc('MONTH',current_date - interval '1 month') and SENT_DATE < LAST_DAY(current_date - interval '1 month')) then cid else 0 end) as Engaged,\n  count(distinct case when SENT = 1 and OPENED = 0 and (SENT_DATE >= date_trunc('MONTH',current_date - interval '1 month') and SENT_DATE < LAST_DAY(current_date - interval '1 month')) then cid else 0 end) as Not_Engaged\n  from \n(select cid, registration_date, CAMPAIGN_ID, SENT, SENT_DATE, OPENED from ${Database}.temp.NPP08483_Growing_Pup_report pca\nunion all\nselect cid, registration_date, CAMPAIGN_ID, SENT, SENT_DATE, OPENED from ${Database}.temp.NPP08483_Breed_Selector_report pca\n)\n;\n\n--growing pup age at registration\ndrop table if exists ${Database}.jobs.NPP08483_GP_Pup_Age_report_email;\ncreate table ${Database}.jobs.NPP08483_GP_Pup_Age_report_email\n(\npuppy_age         \t\t        varchar(100) default '',\ntotal         \t\t            int default 0\n)\n;\n\ninsert into ${Database}.jobs.NPP08483_GP_Pup_Age_report_email\n(puppy_age)\nvalues\n('8 Weeks'), \n('9 Weeks'), \n('10 Weeks'),\n('11 Weeks'),\n('12 Weeks'),\n('13 Weeks'),\n('14 Weeks'),\n('15 Weeks'),\n('16 Weeks'),\n('5 Months'),\n('6 Months'),\n('7 Months'),\n('8 Months'),\n('9 Months'),\n('10 Months'),\n('11 Months'),\n('1 Year'), \n('2 Years')\n;\n\nmerge into ${Database}.jobs.NPP08483_GP_Pup_Age_report_email a\nusing (\n  select\n  pet_age as puppy_age,\n    count(distinct case when pet_age is not null or pet_age <>'' then cid else 0 end) as total\nfrom ${Database}.temp.NPP08483_Growing_Pup_report pca\nwhere \n  (registration_date >= date_trunc('MONTH',current_date - interval '1 month') and registration_date < LAST_DAY(current_date - interval '1 month'))\n  group by 1\n  ) b on a.puppy_age = b.puppy_age\nwhen matched then update \nset        \t\t        \na.total = b.total\n;\n\n--consumers started on BS journey and now on GP journey this month\ndrop table if exists ${Database}.jobs.NPP08483_BS_to_GP_journey_report_email;\ncreate table ${Database}.jobs.NPP08483_BS_to_GP_journey_report_email\nas\nselect count(distinct gp.cid) as light_to_full_registration from ${Database}.temp.NPP08483_Growing_Pup_report gp\njoin (select distinct cid, sent_date from ${Database}.temp.NPP08483_Breed_Selector_report\n       where email = 'Growing Pup Sign Up' \n      ) bs on bs.cid = gp.cid\nwhere email = 'Welcome'\nand gp.sent_date >= date_trunc('MONTH',current_date - interval '1 month')\nand gp.sent_date < LAST_DAY(current_date - interval '1 month')\nand bs.sent_date< gp.sent_date;\n\n--consumers started on BS journey and now on GP journey this month\ndrop table if exists ${Database}.jobs.NPP08483_BS_to_GP_purchases_report_email;\ncreate table ${Database}.jobs.NPP08483_BS_to_GP_purchases_report_email\nas\nselect count(distinct xr.cid) as purchases from ${Database}.LIVE.NPP_THG_TRANS tr\nleft join ${Database}.live.xref_name_urn xr on xr.name_urn = 'REG_THG|'||tr.customer_id\nleft join ${Database}.temp.NPP08483_Growing_Pup_report gp on gp.cid = xr.cid and gp.sent_date >= date_trunc('MONTH',current_date - interval '1 month') and gp.sent_date < LAST_DAY(current_date - interval '1 month')\nleft join ${Database}.temp.NPP08483_Breed_Selector_report bs on bs.cid = xr.cid and bs.sent_date >= date_trunc('MONTH',current_date - interval '1 month') and bs.sent_date < LAST_DAY(current_date - interval '1 month')\nwhere xr.cid is not null and (gp.cid is not null or bs.cid is not null)\nand tr.order_status not in ('Cancelled','Payment Problem')\nand tr.order_created >= date_trunc('MONTH',current_date - interval '1 month')\nand tr.order_created < LAST_DAY(current_date - interval '1 month');"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"197117":{"id":197117,"sourceID":197119,"targetID":197118}},"failureConnectors":{},"unconditionalConnectors":{"197116":{"id":197116,"sourceID":197112,"targetID":197119}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{},"grids":{}},"info":{"name":"GP_BS_monthly_report","description":"","type":"ORCHESTRATION","tag":"8b6dabf7-7999-40c7-8087-f3fffebfeedf"}}