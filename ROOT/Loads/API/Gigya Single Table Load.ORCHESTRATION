{"job":{"components":{"196451":{"id":196451,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1666419752,"x":-32,"y":368,"width":32,"height":32,"inputConnectorIDs":[196469],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Check Network Access 0"}}}},"visible":true},"2":{"slot":2,"name":"Address","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"https://matilliondevelopment.zendesk.com/api/v2/tickets.json"}}}},"visible":true},"3":{"slot":3,"name":"Port_number","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"2400"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196452":{"id":196452,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1214167305,"x":-128,"y":128,"width":32,"height":32,"inputConnectorIDs":[196479],"outputSuccessConnectorIDs":[196473],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_pets"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Basic"}}}},"visible":true},"6":{"slot":6,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_pets_temp"}}}},"visible":true},"7":{"slot":7,"name":"Data Selection","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"PET_UID"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"PET_DATA_DATE"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"PET_NAME"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"PET_TYPE"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"PET_BREED"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"PET_INDOOR"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"PET_SIZE"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"PET_FOOD"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"PET_GENDER"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"PET_DOB"}}}},"visible":true},"8":{"slot":8,"name":"Data Source Filter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"PET_UID"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}}},"visible":true},"9":{"slot":9,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"10":{"slot":10,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT ..."}}}},"visible":false},"11":{"slot":11,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1000000"}}}},"visible":true},"12":{"slot":12,"name":"Connection Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"},"2":{"slot":2,"type":"STRING","value":"sqlin=${sql_to_run};IgnoreContentType=True"}}}},"visible":true},"13":{"slot":13,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":true},"14":{"slot":14,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"STAGING"}}}},"visible":true},"15":{"slot":15,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NPP_GIGYA_PETS_TEMP"}}}},"visible":true},"16":{"slot":16,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"17":{"slot":17,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Bucket}"}}}},"visible":true},"18":{"slot":18,"name":"Primary Keys","elements":{},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"100":{"slot":100,"name":"Profile","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya API"}}}},"visible":true},"499":{"slot":499,"name":"Authentication Method","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"}}}},"visible":true},"500":{"slot":500,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"501":{"slot":501,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"502":{"slot":502,"name":"Bearer Token","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"503":{"slot":503,"name":"OAuth","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"504":{"slot":504,"name":"Key Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"505":{"slot":505,"name":"Key Value","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"506":{"slot":506,"name":"Add Authorization To","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Request Header"}}}},"visible":false},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1013":{"slot":1013,"name":"Auto Debug","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}}},"visible":true},"1014":{"slot":1014,"name":"Debug Level","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"3"}}}},"visible":false},"1992":{"slot":1992,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1993":{"slot":1993,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"1994":{"slot":1994,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1995":{"slot":1995,"name":"Stage Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1996":{"slot":1996,"name":"Stage Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1997":{"slot":1997,"name":"New Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1998":{"slot":1998,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1999":{"slot":1999,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"2000":{"slot":2000,"name":"Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Standard"}}}},"visible":true},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"40501":{"slot":40501,"name":"","elements":{},"visible":false},"40502":{"slot":40502,"name":"Load Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":""}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"Gzip"}}}},"visible":true},"63319":{"slot":63319,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":false},"63320":{"slot":63320,"name":"Storage Account","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63321":{"slot":63321,"name":"Blob Container","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63322":{"slot":63322,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"84533":{"slot":84533,"name":"Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88340":{"slot":88340,"name":"","elements":{},"visible":false},"88341":{"slot":88341,"name":"Staging","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Existing Amazon S3 Location"}}}},"visible":true},"88342":{"slot":88342,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":true},"88343":{"slot":88343,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88344":{"slot":88344,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"88345":{"slot":88345,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"98776":{"slot":98776,"name":"GCS Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196453":{"id":196453,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1214167305,"x":-256,"y":128,"width":32,"height":32,"inputConnectorIDs":[196473],"outputSuccessConnectorIDs":[196475],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_questions"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Basic"}}}},"visible":true},"6":{"slot":6,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_questions"}}}},"visible":true},"7":{"slot":7,"name":"Data Selection","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"UID"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"UPDATED_DATE"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDOWNSCATS"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDOWNSDOGS"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDCATSCOUNT"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDDOGSCOUNT"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDOTHERPETSCOUNT"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDOWNPETS"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDADULTSCOUNT"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"MARITALSTATUS"}}},"11":{"slot":11,"values":{"1":{"slot":1,"type":"STRING","value":"AREAOFINTEREST"}}}},"visible":true},"8":{"slot":8,"name":"Data Source Filter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDOWNSCATS"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDOWNSDOGS"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDCATSCOUNT"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDDOGSCOUNT"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDOTHERPETSCOUNT"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDOWNPETS"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"HOUSEHOLDADULTSCOUNT"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"MARITALSTATUS"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"AREAOFINTEREST"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}}},"visible":true},"9":{"slot":9,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or"}}}},"visible":true},"10":{"slot":10,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT ..."}}}},"visible":false},"11":{"slot":11,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1000000"}}}},"visible":true},"12":{"slot":12,"name":"Connection Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"},"2":{"slot":2,"type":"STRING","value":"sqlin=${sql_to_run};IgnoreContentType=True"}}}},"visible":true},"13":{"slot":13,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":true},"14":{"slot":14,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"STAGING"}}}},"visible":true},"15":{"slot":15,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NPP_GIGYA_QUESTIONS"}}}},"visible":true},"16":{"slot":16,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"17":{"slot":17,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Bucket}"}}}},"visible":true},"18":{"slot":18,"name":"Primary Keys","elements":{},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"100":{"slot":100,"name":"Profile","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya API"}}}},"visible":true},"499":{"slot":499,"name":"Authentication Method","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"}}}},"visible":true},"500":{"slot":500,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"501":{"slot":501,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"502":{"slot":502,"name":"Bearer Token","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"503":{"slot":503,"name":"OAuth","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"504":{"slot":504,"name":"Key Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"505":{"slot":505,"name":"Key Value","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"506":{"slot":506,"name":"Add Authorization To","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Request Header"}}}},"visible":false},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1013":{"slot":1013,"name":"Auto Debug","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}}},"visible":true},"1014":{"slot":1014,"name":"Debug Level","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"3"}}}},"visible":false},"1992":{"slot":1992,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1993":{"slot":1993,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"1994":{"slot":1994,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1995":{"slot":1995,"name":"Stage Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1996":{"slot":1996,"name":"Stage Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1997":{"slot":1997,"name":"New Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1998":{"slot":1998,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1999":{"slot":1999,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"2000":{"slot":2000,"name":"Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Standard"}}}},"visible":true},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"40501":{"slot":40501,"name":"","elements":{},"visible":false},"40502":{"slot":40502,"name":"Load Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":""}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"Gzip"}}}},"visible":true},"63319":{"slot":63319,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":false},"63320":{"slot":63320,"name":"Storage Account","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63321":{"slot":63321,"name":"Blob Container","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63322":{"slot":63322,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"84533":{"slot":84533,"name":"Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88340":{"slot":88340,"name":"","elements":{},"visible":false},"88341":{"slot":88341,"name":"Staging","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Existing Amazon S3 Location"}}}},"visible":true},"88342":{"slot":88342,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":true},"88343":{"slot":88343,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88344":{"slot":88344,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"88345":{"slot":88345,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"98776":{"slot":98776,"name":"GCS Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196454":{"id":196454,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1214167305,"x":128,"y":128,"width":32,"height":32,"inputConnectorIDs":[196471],"outputSuccessConnectorIDs":[196474],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_accounts"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Basic"}}}},"visible":true},"6":{"slot":6,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_accounts"}}}},"visible":true},"7":{"slot":7,"name":"Data Selection","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"UID"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"CREATED_DATE"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"UPDATED_DATE"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"REG_DATE"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"TITLE"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"FIRSTNAME"}}},"7":{"slot":7,"values":{"1":{"slot":1,"type":"STRING","value":"LASTNAME"}}},"8":{"slot":8,"values":{"1":{"slot":1,"type":"STRING","value":"ADD1"}}},"9":{"slot":9,"values":{"1":{"slot":1,"type":"STRING","value":"ADD2"}}},"10":{"slot":10,"values":{"1":{"slot":1,"type":"STRING","value":"ADD3"}}},"11":{"slot":11,"values":{"1":{"slot":1,"type":"STRING","value":"ADD4"}}},"12":{"slot":12,"values":{"1":{"slot":1,"type":"STRING","value":"CITY"}}},"13":{"slot":13,"values":{"1":{"slot":1,"type":"STRING","value":"STATE"}}},"14":{"slot":14,"values":{"1":{"slot":1,"type":"STRING","value":"POSTCODE"}}},"15":{"slot":15,"values":{"1":{"slot":1,"type":"STRING","value":"COUNTRY"}}},"16":{"slot":16,"values":{"1":{"slot":1,"type":"STRING","value":"EMAIL"}}},"17":{"slot":17,"values":{"1":{"slot":1,"type":"STRING","value":"PHONE_MOBILE"}}},"18":{"slot":18,"values":{"1":{"slot":1,"type":"STRING","value":"PHONE_HOME"}}},"19":{"slot":19,"values":{"1":{"slot":1,"type":"STRING","value":"GENDER"}}},"20":{"slot":20,"values":{"1":{"slot":1,"type":"STRING","value":"DOB"}}},"21":{"slot":21,"values":{"1":{"slot":1,"type":"STRING","value":"REG_SOURCE"}}},"22":{"slot":22,"values":{"1":{"slot":1,"type":"STRING","value":"IS_VERIFIED"}}},"23":{"slot":23,"values":{"1":{"slot":1,"type":"STRING","value":"LAST_LOGIN"}}},"24":{"slot":24,"values":{"1":{"slot":1,"type":"STRING","value":"SOCIAL_PROVIDERS"}}},"25":{"slot":25,"values":{"1":{"slot":1,"type":"STRING","value":"LOGIN_PROVIDER"}}},"26":{"slot":26,"values":{"1":{"slot":1,"type":"STRING","value":"NOT_CONTACTABLE"}}}},"visible":true},"8":{"slot":8,"name":"Data Source Filter","elements":{},"visible":true},"9":{"slot":9,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"10":{"slot":10,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select * from gigya_accounts;"}}}},"visible":false},"11":{"slot":11,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1000000"}}}},"visible":true},"12":{"slot":12,"name":"Connection Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"},"2":{"slot":2,"type":"STRING","value":"sqlin=${sql_to_run};IgnoreContentType=True"}}}},"visible":true},"13":{"slot":13,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":true},"14":{"slot":14,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"STAGING"}}}},"visible":true},"15":{"slot":15,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NPP_GIGYA_ACCOUNTS"}}}},"visible":true},"16":{"slot":16,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"17":{"slot":17,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Bucket}"}}}},"visible":true},"18":{"slot":18,"name":"Primary Keys","elements":{},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"100":{"slot":100,"name":"Profile","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya API"}}}},"visible":true},"499":{"slot":499,"name":"Authentication Method","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"}}}},"visible":true},"500":{"slot":500,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"501":{"slot":501,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"502":{"slot":502,"name":"Bearer Token","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"503":{"slot":503,"name":"OAuth","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"504":{"slot":504,"name":"Key Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"505":{"slot":505,"name":"Key Value","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"506":{"slot":506,"name":"Add Authorization To","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Request Header"}}}},"visible":false},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1013":{"slot":1013,"name":"Auto Debug","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}}},"visible":true},"1014":{"slot":1014,"name":"Debug Level","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"3"}}}},"visible":false},"1992":{"slot":1992,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1993":{"slot":1993,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"1994":{"slot":1994,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1995":{"slot":1995,"name":"Stage Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1996":{"slot":1996,"name":"Stage Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1997":{"slot":1997,"name":"New Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1998":{"slot":1998,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1999":{"slot":1999,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"2000":{"slot":2000,"name":"Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Standard"}}}},"visible":true},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"40501":{"slot":40501,"name":"","elements":{},"visible":false},"40502":{"slot":40502,"name":"Load Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":""}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"Gzip"}}}},"visible":true},"63319":{"slot":63319,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":false},"63320":{"slot":63320,"name":"Storage Account","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63321":{"slot":63321,"name":"Blob Container","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63322":{"slot":63322,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"84533":{"slot":84533,"name":"Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88340":{"slot":88340,"name":"","elements":{},"visible":false},"88341":{"slot":88341,"name":"Staging","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Existing Amazon S3 Location"}}}},"visible":true},"88342":{"slot":88342,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":true},"88343":{"slot":88343,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88344":{"slot":88344,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"88345":{"slot":88345,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"98776":{"slot":98776,"name":"GCS Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196455":{"id":196455,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1214167305,"x":0,"y":128,"width":32,"height":32,"inputConnectorIDs":[196474],"outputSuccessConnectorIDs":[196479],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_dependant"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Basic"}}}},"visible":true},"6":{"slot":6,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_dependant_temp"}}}},"visible":true},"7":{"slot":7,"name":"Data Selection","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CHILD_UID"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"FIRST_NAME"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"GENDER"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"DOB"}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"DOB_RELIABILITY"}}}},"visible":true},"8":{"slot":8,"name":"Data Source Filter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"CHILD_UID"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}}},"visible":true},"9":{"slot":9,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"10":{"slot":10,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT ..."}}}},"visible":false},"11":{"slot":11,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1000000"}}}},"visible":true},"12":{"slot":12,"name":"Connection Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"},"2":{"slot":2,"type":"STRING","value":"sqlin=${sql_to_run};IgnoreContentType=True"}}}},"visible":true},"13":{"slot":13,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":true},"14":{"slot":14,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"STAGING"}}}},"visible":true},"15":{"slot":15,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NPP_GIGYA_DEPENDANT_TEMP"}}}},"visible":true},"16":{"slot":16,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"17":{"slot":17,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Bucket}"}}}},"visible":true},"18":{"slot":18,"name":"Primary Keys","elements":{},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"100":{"slot":100,"name":"Profile","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya API"}}}},"visible":true},"499":{"slot":499,"name":"Authentication Method","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"}}}},"visible":true},"500":{"slot":500,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"501":{"slot":501,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"502":{"slot":502,"name":"Bearer Token","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"503":{"slot":503,"name":"OAuth","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"504":{"slot":504,"name":"Key Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"505":{"slot":505,"name":"Key Value","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"506":{"slot":506,"name":"Add Authorization To","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Request Header"}}}},"visible":false},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1013":{"slot":1013,"name":"Auto Debug","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}}},"visible":true},"1014":{"slot":1014,"name":"Debug Level","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"3"}}}},"visible":false},"1992":{"slot":1992,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1993":{"slot":1993,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"1994":{"slot":1994,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1995":{"slot":1995,"name":"Stage Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1996":{"slot":1996,"name":"Stage Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1997":{"slot":1997,"name":"New Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1998":{"slot":1998,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1999":{"slot":1999,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"2000":{"slot":2000,"name":"Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Standard"}}}},"visible":true},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"40501":{"slot":40501,"name":"","elements":{},"visible":false},"40502":{"slot":40502,"name":"Load Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":""}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"Gzip"}}}},"visible":true},"63319":{"slot":63319,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":false},"63320":{"slot":63320,"name":"Storage Account","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63321":{"slot":63321,"name":"Blob Container","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63322":{"slot":63322,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"84533":{"slot":84533,"name":"Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88340":{"slot":88340,"name":"","elements":{},"visible":false},"88341":{"slot":88341,"name":"Staging","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Existing Amazon S3 Location"}}}},"visible":true},"88342":{"slot":88342,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":true},"88343":{"slot":88343,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88344":{"slot":88344,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"88345":{"slot":88345,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"98776":{"slot":98776,"name":"GCS Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196456":{"id":196456,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"CONDITIONAL","executionHint":"FLOW","implementationID":-1357378929,"x":-256,"y":0,"width":32,"height":32,"inputConnectorIDs":[196506],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[196502],"outputFalseConnectorIDs":[196503],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"If 0"}}}},"visible":true},"2":{"slot":2,"name":"Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Simple"}}}},"visible":true},"3":{"slot":3,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"hours_to_load"},"2":{"slot":2,"type":"STRING","value":"Is"},"3":{"slot":3,"type":"STRING","value":"Greater than"},"4":{"slot":4,"type":"STRING","value":"0"}}}},"visible":true},"4":{"slot":4,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"5":{"slot":5,"name":"Condition","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196457":{"id":196457,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":-128,"y":-48,"width":32,"height":32,"inputConnectorIDs":[196502],"outputSuccessConnectorIDs":[196476],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Lastrun days"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select (date_part(epoch_second,current_timestamp()) * 1000) - (${hours_to_load} * 60 * 60 * 1000) as lastrun"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"lastrun"},"2":{"slot":2,"type":"STRING","value":"LASTRUN"}}}},"visible":true},"4":{"slot":4,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":false},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196458":{"id":196458,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1214167305,"x":-384,"y":256,"width":32,"height":32,"inputConnectorIDs":[196478],"outputSuccessConnectorIDs":[196468],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_terms"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Basic"}}}},"visible":true},"6":{"slot":6,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_terms"}}}},"visible":true},"7":{"slot":7,"name":"Data Selection","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"UID"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"TER"}}}},"visible":true},"8":{"slot":8,"name":"Data Source Filter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"TER"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}}},"visible":true},"9":{"slot":9,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"10":{"slot":10,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT ..."}}}},"visible":false},"11":{"slot":11,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1000000"}}}},"visible":true},"12":{"slot":12,"name":"Connection Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"},"2":{"slot":2,"type":"STRING","value":"sqlin=${sql_to_run};IgnoreContentType=True"}}}},"visible":true},"13":{"slot":13,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":true},"14":{"slot":14,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"STAGING"}}}},"visible":true},"15":{"slot":15,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NPP_GIGYA_TERMS_TEMP"}}}},"visible":true},"16":{"slot":16,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"17":{"slot":17,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Bucket}"}}}},"visible":true},"18":{"slot":18,"name":"Primary Keys","elements":{},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"100":{"slot":100,"name":"Profile","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya API"}}}},"visible":true},"499":{"slot":499,"name":"Authentication Method","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"}}}},"visible":true},"500":{"slot":500,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"501":{"slot":501,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"502":{"slot":502,"name":"Bearer Token","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"503":{"slot":503,"name":"OAuth","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"504":{"slot":504,"name":"Key Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"505":{"slot":505,"name":"Key Value","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"506":{"slot":506,"name":"Add Authorization To","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Request Header"}}}},"visible":false},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1013":{"slot":1013,"name":"Auto Debug","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}}},"visible":true},"1014":{"slot":1014,"name":"Debug Level","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"3"}}}},"visible":false},"1992":{"slot":1992,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1993":{"slot":1993,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"1994":{"slot":1994,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1995":{"slot":1995,"name":"Stage Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1996":{"slot":1996,"name":"Stage Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1997":{"slot":1997,"name":"New Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1998":{"slot":1998,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1999":{"slot":1999,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"2000":{"slot":2000,"name":"Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Standard"}}}},"visible":true},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"40501":{"slot":40501,"name":"","elements":{},"visible":false},"40502":{"slot":40502,"name":"Load Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":""}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"Gzip"}}}},"visible":true},"63319":{"slot":63319,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":false},"63320":{"slot":63320,"name":"Storage Account","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63321":{"slot":63321,"name":"Blob Container","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63322":{"slot":63322,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"84533":{"slot":84533,"name":"Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88340":{"slot":88340,"name":"","elements":{},"visible":false},"88341":{"slot":88341,"name":"Staging","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Existing Amazon S3 Location"}}}},"visible":true},"88342":{"slot":88342,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":true},"88343":{"slot":88343,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88344":{"slot":88344,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"88345":{"slot":88345,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"98776":{"slot":98776,"name":"GCS Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196459":{"id":196459,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1214167305,"x":-384,"y":128,"width":32,"height":32,"inputConnectorIDs":[196475],"outputSuccessConnectorIDs":[196478],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_subscriptions"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Basic"}}}},"visible":true},"6":{"slot":6,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_subscriptions_temp"}}}},"visible":true},"7":{"slot":7,"name":"Data Selection","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"UID"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"SUBSCRIPTIONS"}}}},"visible":true},"8":{"slot":8,"name":"Data Source Filter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SUBSCRIPTIONS"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}}},"visible":true},"9":{"slot":9,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"And"}}}},"visible":true},"10":{"slot":10,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT ..."}}}},"visible":false},"11":{"slot":11,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1000000"}}}},"visible":true},"12":{"slot":12,"name":"Connection Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"},"2":{"slot":2,"type":"STRING","value":"sqlin=${sql_to_run};IgnoreContentType=True"}}}},"visible":true},"13":{"slot":13,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":true},"14":{"slot":14,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"STAGING"}}}},"visible":true},"15":{"slot":15,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NPP_GIGYA_SUBSCRIPTIONS_TEMP"}}}},"visible":true},"16":{"slot":16,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"17":{"slot":17,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Bucket}"}}}},"visible":true},"18":{"slot":18,"name":"Primary Keys","elements":{},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"100":{"slot":100,"name":"Profile","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya API"}}}},"visible":true},"499":{"slot":499,"name":"Authentication Method","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"}}}},"visible":true},"500":{"slot":500,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"501":{"slot":501,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"502":{"slot":502,"name":"Bearer Token","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"503":{"slot":503,"name":"OAuth","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"504":{"slot":504,"name":"Key Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"505":{"slot":505,"name":"Key Value","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"506":{"slot":506,"name":"Add Authorization To","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Request Header"}}}},"visible":false},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1013":{"slot":1013,"name":"Auto Debug","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}}},"visible":true},"1014":{"slot":1014,"name":"Debug Level","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"3"}}}},"visible":false},"1992":{"slot":1992,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1993":{"slot":1993,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"1994":{"slot":1994,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1995":{"slot":1995,"name":"Stage Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1996":{"slot":1996,"name":"Stage Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1997":{"slot":1997,"name":"New Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1998":{"slot":1998,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1999":{"slot":1999,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"2000":{"slot":2000,"name":"Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Standard"}}}},"visible":true},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"40501":{"slot":40501,"name":"","elements":{},"visible":false},"40502":{"slot":40502,"name":"Load Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":""}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"Gzip"}}}},"visible":true},"63319":{"slot":63319,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":false},"63320":{"slot":63320,"name":"Storage Account","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63321":{"slot":63321,"name":"Blob Container","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63322":{"slot":63322,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"84533":{"slot":84533,"name":"Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88340":{"slot":88340,"name":"","elements":{},"visible":false},"88341":{"slot":88341,"name":"Staging","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Existing Amazon S3 Location"}}}},"visible":true},"88342":{"slot":88342,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":true},"88343":{"slot":88343,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88344":{"slot":88344,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"88345":{"slot":88345,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"98776":{"slot":98776,"name":"GCS Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196460":{"id":196460,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":128,"y":0,"width":32,"height":32,"inputConnectorIDs":[196501],"outputSuccessConnectorIDs":[196471],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create SQL for API"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select 'select * from ${gigya_table} where lastUpdatedTimestamp > ${lastrun} or lastLoginTimestamp > ${lastrun} or createdTimestamp > ${lastrun} limit 5000' as sql_to_run"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"sql_to_run"},"2":{"slot":2,"type":"STRING","value":"SQL_TO_RUN"}}}},"visible":true},"4":{"slot":4,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NESTLE"}}}},"visible":false},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196461":{"id":196461,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":1214167305,"x":-256,"y":256,"width":32,"height":32,"inputConnectorIDs":[196468],"outputSuccessConnectorIDs":[196477],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_lookup"}}}},"visible":true},"2":{"slot":2,"name":"Basic/Advanced Mode","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Basic"}}}},"visible":true},"6":{"slot":6,"name":"Data Source","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya_lookup"}}}},"visible":true},"7":{"slot":7,"name":"Data Selection","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"UID"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"UPDATED_DATE"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"PET_UID"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":"CHILD_UID"}}}},"visible":true},"8":{"slot":8,"name":"Data Source Filter","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"PET_UID"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"CHILD_UID"},"2":{"slot":2,"type":"STRING","value":"Not"},"3":{"slot":3,"type":"STRING","value":"Equal to"},"4":{"slot":4,"type":"STRING","value":"NULL"}}}},"visible":true},"9":{"slot":9,"name":"Combine Filters","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or"}}}},"visible":true},"10":{"slot":10,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SELECT ..."}}}},"visible":false},"11":{"slot":11,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"1000000"}}}},"visible":true},"12":{"slot":12,"name":"Connection Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"},"2":{"slot":2,"type":"STRING","value":"sqlin=${sql_to_run};IgnoreContentType=True"}}}},"visible":true},"13":{"slot":13,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":true},"14":{"slot":14,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"STAGING"}}}},"visible":true},"15":{"slot":15,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"NPP_GIGYA_LOOKUP"}}}},"visible":true},"16":{"slot":16,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":true},"17":{"slot":17,"name":"S3 Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Bucket}"}}}},"visible":true},"18":{"slot":18,"name":"Primary Keys","elements":{},"visible":true},"20":{"slot":20,"name":"Data Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"100":{"slot":100,"name":"Profile","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Gigya API"}}}},"visible":true},"499":{"slot":499,"name":"Authentication Method","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Other"}}}},"visible":true},"500":{"slot":500,"name":"Username","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"501":{"slot":501,"name":"Password","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"502":{"slot":502,"name":"Bearer Token","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"503":{"slot":503,"name":"OAuth","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"504":{"slot":504,"name":"Key Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"505":{"slot":505,"name":"Key Value","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"PASSWORD","value":""}}}},"visible":false},"506":{"slot":506,"name":"Add Authorization To","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Request Header"}}}},"visible":false},"1001":{"slot":1001,"name":"","elements":{},"visible":false},"1013":{"slot":1013,"name":"Auto Debug","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}}},"visible":true},"1014":{"slot":1014,"name":"Debug Level","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"3"}}}},"visible":false},"1992":{"slot":1992,"name":"Warehouse","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1993":{"slot":1993,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":false},"1994":{"slot":1994,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1995":{"slot":1995,"name":"Stage Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1996":{"slot":1996,"name":"Stage Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1997":{"slot":1997,"name":"New Table Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"1998":{"slot":1998,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"1999":{"slot":1999,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"2000":{"slot":2000,"name":"Type","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Standard"}}}},"visible":true},"40000":{"slot":40000,"name":"Encryption","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"None"}}}},"visible":true},"40001":{"slot":40001,"name":"KMS Key ID","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"40501":{"slot":40501,"name":"","elements":{},"visible":false},"40502":{"slot":40502,"name":"Load Options","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"2":{"slot":2,"values":{"1":{"slot":1,"type":"STRING","value":"Off"}}},"3":{"slot":3,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"4":{"slot":4,"values":{"1":{"slot":1,"type":"STRING","value":""}}},"5":{"slot":5,"values":{"1":{"slot":1,"type":"STRING","value":"On"}}},"6":{"slot":6,"values":{"1":{"slot":1,"type":"STRING","value":"Gzip"}}}},"visible":true},"63319":{"slot":63319,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":false},"63320":{"slot":63320,"name":"Storage Account","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63321":{"slot":63321,"name":"Blob Container","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"63322":{"slot":63322,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"84533":{"slot":84533,"name":"Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88340":{"slot":88340,"name":"","elements":{},"visible":false},"88341":{"slot":88341,"name":"Staging","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Existing Amazon S3 Location"}}}},"visible":true},"88342":{"slot":88342,"name":"Stage Authentication","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Credentials"}}}},"visible":true},"88343":{"slot":88343,"name":"Storage Integration","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"88344":{"slot":88344,"name":"Use Accelerated Endpoint","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"False"}}}},"visible":true},"88345":{"slot":88345,"name":"Stage","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Custom]"}}}},"visible":true},"98776":{"slot":98776,"name":"GCS Staging Area","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196462":{"id":196462,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-1032749985,"x":-128,"y":48,"width":32,"height":32,"inputConnectorIDs":[196503],"outputSuccessConnectorIDs":[196465],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Lastrun from table"}}}},"visible":true},"2":{"slot":2,"name":"SQL Query","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"select date_part(epoch_second,max(lastrun)) * 1000 as lastrun\nfrom ${Database}.db.gigya_lastrun"}}}},"visible":true},"3":{"slot":3,"name":"Scalar Variable Mapping","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"lastrun"},"2":{"slot":2,"type":"STRING","value":"LASTRUN"}}}},"visible":true},"4":{"slot":4,"name":"Database","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"${Database}"}}}},"visible":false},"5":{"slot":5,"name":"Target Table","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":""}}}},"visible":false},"6":{"slot":6,"name":"Table Columns","elements":{},"visible":false},"7":{"slot":7,"name":"Schema","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"[Environment Default]"}}}},"visible":false},"10":{"slot":10,"name":"Limit","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"INTEGER","value":"100"}}}},"visible":false},"11":{"slot":11,"name":"Order By","elements":{},"visible":false},"12":{"slot":12,"name":"Sort","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Ascending"}}}},"visible":false},"13":{"slot":13,"name":"Filter Conditions","elements":{},"visible":false},"14":{"slot":14,"name":"Combine Conditions","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"AND"}}}},"visible":false},"20":{"slot":20,"name":"Basic / Advanced","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Advanced"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196463":{"id":196463,"inputCardinality":"MANY","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1343684451,"x":0,"y":0,"width":32,"height":32,"inputConnectorIDs":[196465,196476],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[196501],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Or 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196464":{"id":196464,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":125,"y":259,"width":32,"height":32,"inputConnectorIDs":[196470],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Log as File Load"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into tbw.db.monitoring\n(monitoring_timestamp,client,process,description,file_name,sub_description,value)\nselect\n    current_timestamp::timestamp_ntz,\n    '${Database}',\n    'LOAD',\n    'AIO_REG_GIG_API_DAILY',\n    'API/gigya2bw_${gigya_table}_'||file||'_'||to_char(current_date(),'YYYYMMDD')||'.txt',\n    'COUNT',\n    to_char(records)\nfrom (\n         select\n             'accounts' as file,\n             count(*) as records\n         from ${Database}.staging.npp_gigya_accounts\n         union all\n         select\n             'terms' as file,\n             count(*) as records\n         from ${Database}.staging.npp_gigya_terms\n         union all\n         select\n             'subs' as file,\n             count(*) as records\n         from ${Database}.staging.npp_gigya_subscriptions\n         union all\n         select\n             'pets' as file,\n             count(*) as records\n         from ${Database}.staging.npp_gigya_pets\n         union all\n         select\n             'questions' as file,\n             count(*) as records\n         from ${Database}.staging.npp_gigya_questions\n         union all\n         select\n             'child' as file,\n             count(*) as records\n         from ${Database}.staging.npp_gigya_dependant\n     ) a\nwhere records > 0;\n\n\ntruncate table ${Database}.staging.npp_gigya_terms;\ntruncate table ${Database}.staging.npp_gigya_accounts;\ntruncate table ${Database}.staging.npp_gigya_subscriptions;\ntruncate table ${Database}.staging.npp_gigya_pets;\ntruncate table ${Database}.staging.npp_gigya_questions;\ntruncate table ${Database}.staging.npp_gigya_dependant;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196466":{"id":196466,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":0,"y":256,"width":32,"height":32,"inputConnectorIDs":[196472],"outputSuccessConnectorIDs":[196470],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Map to db"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"insert into ${Database}.db.names_attributes\n    (\n        name_urn,\n        data_date,\n        account_created,\n        account_updated,\n        joined_source,\n        registration_campaign,\n        is_account_verified,\n        last_login,\n        marketing_referral,\n        provider,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select \n        concat('REG_GIG|',uid),\n        updated_date,\n        created_date,\n        updated_date,\n        'Website CIAM',\n        coalesce(reg_source,''),\n        case when is_verified = 'true' then 1 end,\n        last_login,\n        coalesce(social_providers,''),\n        coalesce(login_provider,''),\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_accounts.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_accounts\n;\n\ninsert into ${Database}.db.names_attributes\n    (\n        name_urn,\n        data_date,\n        account_created,\n        account_updated,\n        joined_source,\n        registration_campaign,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select \n        concat('REG_GIG|',uid),\n        updated_date,\n        created_date,\n        updated_date,\n        'Website CIAM',\n        case when sub = 'UKnescafecarbon_SBmktemail' then 'Origins Sustainability' end,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub in \n        (\n\t\t\t'UKnescafecarbon_SBmktemail'\n        )\n;\n\ninsert into ${Database}.db.web_browser_hist\n    (\n        name_urn,\n        browser_date,\n        data_controller_id,\n        brand_id,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',ter.uid),\n        ter.ter_data_date,\n        case when rlike(ter.ter,'(.*)aero(.*)|(.*)cerelac(.*)|(.*)carnation(.*)|(.*)kitkat(.*)|(.*)maggi(.*)|(.*)nescafe(.*)|(.*)rowntrees(.*)|(.*)yessnacks(.*)|(.*)smarties(.*)|(.*)nhs(.*)|(.*)smababy(.*)|(.*)mezeast(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1) \n             when rlike(ter.ter,'(.*)meritene(.)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Vitaflo (International) Ltd'),-1)\n             when rlike(ter.ter,'(.*)buxton(.*)|(.*)purelife(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Waters UK Ltd'),-1)\n             else nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1)\n        end as data_controller_id,\n        brand.brand_id,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_terms.txt',\n        ter.uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_terms ter\n    left join ${Database}.db.ref_brand brand\n                on case\n                     when rlike(ter.ter,'(.*)betabrand(.*)','i')        then 'Beta'\n                     when rlike(ter.ter,'(.*)bakersbrd(.*)','i')        then 'Bakers'\n                     when rlike(ter.ter,'(.*)felixbrnd(.*)','i')        then 'Felix'\n                     when rlike(ter.ter,'(.*)prnbeyond(.*)','i')        then 'Beyond'\n                     when rlike(ter.ter,'(.*)petwelcom(.*)','i')        then 'Pets Welcome'\n                     when rlike(ter.ter,'(.*)cerelac(.*)','i')          then 'Cerelac'\n                     when rlike(ter.ter,'(.*)meritene(.*)','i')         then 'MERITENE'\n                     when rlike(ter.ter,'(.*)carnation(.*)','i')        then 'Carnation'\n                     when rlike(ter.ter,'(.*)aero(.*)','i')            then 'Aero'\n                     when rlike(ter.ter,'(.*)buxton(.*)','i')             then 'Buxton'\n                     when rlike(ter.ter,'(.*)kitkat(.*)','i')             then 'Kit Kat'\n                     when rlike(ter.ter,'(.*)maggi(.*)','i')             then 'Maggi'\n                     when rlike(ter.ter,'(.*)milkybar(.*)','i')         then 'Milky Bar'\n\t\t\t\t\t when rlike(ter.ter,'(.*)nescafe(.*)','i')        then 'Nescafe'\n\t\t\t\t\t when rlike(ter.ter,'(.*)nhs(.*)','i')  then '' \n                     when rlike(ter.ter,'(.*)purelife(.*)','i')         then 'Pure Life'\n                     when rlike(ter.ter,'(.*)rowntrees(.*)','i')         then 'Rowntrees'\n                     when rlike(ter.ter,'(.*)yessnacks(.*)','i')         then 'Yes Snacks'\n                     when rlike(ter.ter,'(.*)smarties(.*)','i')         then 'Smarties'\n                     when rlike(ter.ter,'(.*)breedselector(.*)','i')    then 'Breed Selector'\n                     when rlike(ter.ter,'(.*)smababy(.*)','i')          then 'SMA'\n                     when rlike(ter.ter,'(.*)mezeast(.*)','i')          then 'MezEast'\n                     else 'Purina Masterbrand' \n                    end = brand.brand\n    left join ${Database}.db.web_browser_hist hist on concat('REG_GIG|',ter.uid) = hist.name_urn\n                                             and ter.ter_data_date = hist.browser_date\n                                             and case when rlike(ter.ter,'(.*)aero(.*)|(.*)cerelac(.*)|(.*)carnation(.*)|(.*)kitkat(.*)|(.*)maggi(.*)|(.*)nescafe(.*)|(.*)rowntrees(.*)|(.*)yessnacks(.*)|(.*)smarties(.*)|(.*)nhs(.*)|(.*)smababy(.*)|(.*)mezeast(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1)  \n                                                      when rlike(ter.ter,'(.*)meritene(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Vitaflo (International) Ltd'),-1)\n                                                      when rlike(ter.ter,'(.*)buxton(.*)|(.*)purelife(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Waters UK Ltd'),-1)\n                                                      else nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1)\n                                                 end = hist.data_controller_id\n                                             and brand.brand_id = coalesce(hist.brand_id, nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Purina Masterbrand'),-1))\n    where ter.ter in ('UKpurinagrp_RGpurinaweb',\n                      'UKbetabrand_RGtermsandcond',\n                      'UKbakersbrd_RGtermsandcond',\n                      'UKfelixbrnd_RGtermsandcond',\n                      'UKprnbeyond_RGtermsandcond',\n                      'UKpetwelcom_RGtermsandcond',\n                      'UKcerelacbd_RGcerelac',\n                      'UKmeritene_RGtcandprivacy',\n                      'UKcarnationbd_RGtcandprivacy',\n                      'UKaero_RGtcandprivacy',\n                      'UKbuxton_RGtcandprivacy',\n                      'UKkitkat_RGtcandprivacy',\n                      'UKmaggi_RGtcandprivacy',\n                      'UKmilkybar_RGtcandprivacy',\n                      'UKnescafe_RGtcandprivacy',\n\t\t\t\t\t  'UKnhs_RGtcandprivacy', \n                      'UKpurelife_RGtcandprivacy',\n                      'UKrowntrees_RGtcandprivacy',\n                      'UKyessnacks_RGtcandprivacy',\n                      'UKbreedselector_RGtcandprivacy',\n                      'UKsmarties_RGtcandprivacy',\n                      'UKsmababy_RGtcandprivacy',\n                      'UKmezeast_RGtcandprivacy'\n                      )\n    and hist.name_urn is null\n;\n\ninsert into ${Database}.db.web_browser_hist\n    (\n        name_urn,\n        browser_date,\n        data_controller_id,\n        brand_id,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',sub.uid),\n        sub.sub_data_date,\n        case when rlike(sub.sub,'(.*)aero(.*)|(.*)cerelac(.*)|(.*)carnation(.*)|(.*)kitkat(.*)|(.*)maggi(.*)|(.*)nescafe(.*)|(.*)rowntrees(.*)|(.*)yessnacks(.*)|(.*)smarties(.*)|(.*)nhs(.*)|(.*)smababy(.*)|(.*)mezeast(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1) \n             when rlike(sub.sub,'(.*)meritene(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Vitaflo (International) Ltd'),-1)\n             when rlike(sub.sub,'(.*)buxton(.*)|(.*)purelife(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Waters UK Ltd'),-1)\n             else nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1)\n        end as data_controller_id,\n        brand.brand_id,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        sub.uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions sub\n    left join ${Database}.db.ref_brand brand\n                on case\n                     when rlike(sub.sub,'(.*)betabrand(.*)','i')        then 'Beta'\n                     when rlike(sub.sub,'(.*)bakersbrd(.*)','i')        then 'Bakers'\n                     when rlike(sub.sub,'(.*)felixbrnd(.*)','i')        then 'Felix'\n                     when rlike(sub.sub,'(.*)prnbeyond(.*)','i')        then 'Beyond'\n                     when rlike(sub.sub,'(.*)petwelcom(.*)','i')        then 'Pets Welcome'\n                     when rlike(sub.sub,'(.*)cerelac(.*)','i')          then 'Cerelac'\n                     when rlike(sub.sub,'(.*)meritene(.*)','i')         then 'MERITENE'\n                     when rlike(sub.sub,'(.*)carnation(.*)','i')        then 'Carnation'\n                     when rlike(sub.sub,'(.*)aero(.*)','i')             then 'Aero'\n                     when rlike(sub.sub,'(.*)buxton(.*)','i')             then 'Buxton'\n                     when rlike(sub.sub,'(.*)kitkat(.*)','i')             then 'Kit Kat'\n                     when rlike(sub.sub,'(.*)maggi(.*)','i')            then 'Maggi'\n                     when rlike(sub.sub,'(.*)milkybar(.*)','i')          then 'Milky Bar'\n                     when rlike(sub.sub,'(.*)nescafe(.*)','i')           then 'Nescafe'\n\t\t\t\t\t when rlike(sub.sub,'(.*)nhs(.*)','i')  then '' \n                     when rlike(sub.sub,'(.*)purelife(.*)','i')          then 'Pure Life'\n                     when rlike(sub.sub,'(.*)rowntrees(.*)','i')          then 'Rowntrees'\n                     when rlike(sub.sub,'(.*)yessnacks(.*)','i')          then 'Yes Snacks'\n                     when rlike(sub.sub,'(.*)smarties(.*)','i')          then 'Smarties'\n                     when rlike(sub.sub,'(.*)breedselector(.*)','i')     then 'Breed Selector'\n                     when rlike(sub.sub,'(.*)smababy(.*)','i')           then 'SMA'\n                     when rlike(sub.sub,'(.*)mezeast(.*)','i')           then 'MezEast'\n                     else 'Purina Masterbrand' \n                    end = brand.brand\n    left join ${Database}.db.web_browser_hist hist on concat('REG_GIG|',sub.uid) = hist.name_urn\n                                             and sub.sub_data_date = hist.browser_date\n                                             and case when rlike(sub.sub,'(.*)aero(.*)|(.*)cerelac(.*)|(.*)carnation(.*)|(.*)kitkat(.*)|(.*)maggi(.*)|(.*)nescafe(.*)|(.*)rowntrees(.*)|(.*)yessnacks(.*)|(.*)smarties(.*)|(.*)nhs(.*)|(.*)smababy(.*)|(.*)mezeast(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1) \n                                                      when rlike(sub.sub,'(.*)meritene(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Vitaflo (International) Ltd'),-1)\n                                                      when rlike(sub.sub,'(.*)buxton(.*)|(.*)purelife(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Waters UK Ltd'),-1)\n                                                      else nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1)\n                                                 end = hist.data_controller_id\n                                             and brand.brand_id = coalesce(hist.brand_id, nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Purina Masterbrand'),-1))\n    where sub.sub in ('UKpurinagrp_RGpurinaweb',\n                      'UKbetabrand_RGtermsandcond',\n                      'UKbakersbrd_RGtermsandcond',\n                      'UKfelixbrnd_RGtermsandcond',\n                      'UKprnbeyond_RGtermsandcond',\n                      'UKpetwelcom_RGtermsandcond',\n                      'UKcerelacbd_RGcerelac',\n                      'UKmeritene_RGtcandprivacy',\n                      'UKcarnationbd_RGtcandprivacy',\n                      'UKaero_RGtcandprivacy',\n                      'UKbuxton_RGtcandprivacy',\n                      'UKkitkat_RGtcandprivacy',\n                      'UKmaggi_RGtcandprivacy',\n                      'UKmilkybar_RGtcandprivacy',\n                      'UKnescafe_RGtcandprivacy',\n\t\t\t\t\t  'UKnhs_RGtcandprivacy', \n                      'UKpurelife_RGtcandprivacy',\n                      'UKrowntrees_RGtcandprivacy',\n                      'UKyessnacks_RGtcandprivacy',\n                      'UKbreedselector_RGtcandprivacy',\n\t\t\t\t\t  'UKsmarties_RGtcandprivacy',\n                      'UKsmababy_RGtcandprivacy',\n                      'UKmezeast_RGtcandprivacy'\n                      )\n    and hist.name_urn is null\n;\n\ninsert into ${Database}.db.names\n    (\n        bbw_urn,\n        name_urn,\n        data_date,\n        reg_date,\n        title,\n        firstname,\n        lastname,\n        job_title,\n        company,\n        add1,\n        add2,\n        add3,\n        add4,\n        add5,\n        add6,\n        add7,\n        city,\n        state,\n        postcode,\n        country,\n        region,\n        dob,\n        gender,\n        phone_work,\n        phone_mobile,\n        phone_home,\n        phone_fax,\n        email,\n        www,\n        fullname,\n        initials,\n        source,\n        source_file,\n        source_urn,\n        source_date,\n        source_data_controller_id,\n        source_brand_id\n    ) \n    select distinct\n        cast(cast(row_number() over(order by 1) as int) + nvl((select max(bbw_urn) from ${Database}.db.names),0) as int) as bbw_urn,\n        concat('REG_GIG|',ter.uid),\n        ter.ter_data_date,\n        coalesce(hist.browser_date, ter.ter_data_date),\n        coalesce(ter.title,''),\n        coalesce(left(ter.firstname, 50),''),\n        coalesce(left(ter.lastname, 50),''),\n        '',\n        '',        \n        coalesce(ter.add1,''),\n        coalesce(ter.add2,''),\n        coalesce(ter.add3,''),\n        coalesce(ter.add4,''),\n        '',\n        '',\n        '',\n        coalesce(ter.city,''),\n        coalesce(ter.state,''),\n        coalesce(ter.postcode,''),\n        coalesce(ter.country,''),\n        '',\n        ter.dob,\n        upper(ter.gender),\n        '',\n        coalesce(ter.phone_mobile,''),\n        coalesce(ter.phone_home,''),\n        '',\n        coalesce(ter.email,''),\n        '',\n        '',\n        '',      \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_terms.txt',\n        ter.uid,\n        current_date(),\n        case when rlike(ter.ter,'(.*)aero(.*)|(.*)cerelac(.*)|(.*)carnation(.*)|(.*)kitkat(.*)|(.*)maggi(.*)|(.*)nescafe(.*)|(.*)rowntrees(.*)|(.*)yessnacks(.*)|(.*)smarties(.*)|(.*)nhs(.*)|(.*)smababy(.*)|(.*)mezeast(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1)  \n             when rlike(ter.ter,'(.*)meritene(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Vitaflo (International) Ltd'),-1)\n             when rlike(ter.ter,'(.*)buxton(.*)|(.*)purelife(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Waters UK Ltd'),-1)\n             else nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1)\n        end as data_controller_id,\n        brand.brand_id\n    from ${Database}.staging.npp_gigya_terms ter\n    left join ${Database}.db.ref_brand brand\n                on case\n                     when rlike(ter.ter,'(.*)betabrand(.*)','i')    then 'Beta'\n                     when rlike(ter.ter,'(.*)bakersbrd(.*)','i')    then 'Bakers'\n                     when rlike(ter.ter,'(.*)felixbrnd(.*)','i')    then 'Felix'\n                     when rlike(ter.ter,'(.*)prnbeyond(.*)','i')    then 'Beyond'\n                     when rlike(ter.ter,'(.*)petwelcom(.*)','i')    then 'Pets Welcome'\n                     when rlike(ter.ter,'(.*)cerelac(.*)','i')          then 'Cerelac'\n                     when rlike(ter.ter,'(.*)meritene(.*)','i')         then 'MERITENE'\n                     when rlike(ter.ter,'(.*)carnation(.*)','i')        then 'Carnation'\n                     when rlike(ter.ter,'(.*)aero(.*)','i')            then 'Aero'\n                     when rlike(ter.ter,'(.*)buxton(.*)','i')             then 'Buxton'\n                     when rlike(ter.ter,'(.*)kitkat(.*)','i')             then 'Kit Kat'\n                     when rlike(ter.ter,'(.*)maggi(.*)','i')             then 'Maggi'\n                     when rlike(ter.ter,'(.*)milkybar(.*)','i')         then 'Milky Bar'\n\t\t\t\t\t when rlike(ter.ter,'(.*)nescafe(.*)','i')      then 'Nescafe'\n\t\t\t\t\t when rlike(ter.ter,'(.*)nhs(.*)','i')  then '' \n                     when rlike(ter.ter,'(.*)purelife(.*)','i')         then 'Pure Life'\n                     when rlike(ter.ter,'(.*)rowntrees(.*)','i')         then 'Rowntrees'\n                     when rlike(ter.ter,'(.*)yessnacks(.*)','i')         then 'Yes Snacks'\n                     when rlike(ter.ter,'(.*)smarties(.*)','i')         then 'Smarties'\n                     when rlike(ter.ter,'(.*)breedselector(.*)','i')    then 'Breed Selector'\n                     when rlike(ter.ter,'(.*)smababy(.*)','i')           then 'SMA'\n                     when rlike(ter.ter,'(.*)mezeast(.*)','i')           then 'MezEast'\n                     else 'Purina Masterbrand' \n                    end = brand.brand\n    left join (select name_urn, \n                   data_controller_id,\n                   brand_id,\n                   min(browser_date) as browser_date\n               from ${Database}.db.web_browser_hist\n               group by name_urn,\n                   data_controller_id,\n                   brand_id\n              ) hist on concat('REG_GIG|',ter.uid) = hist.name_urn\n                                        and case when rlike(ter.ter,'(.*)aero(.*)|(.*)cerelac(.*)|(.*)carnation(.*)|(.*)kitkat(.*)|(.*)maggi(.*)|(.*)nescafe(.*)|(.*)rowntrees(.*)|(.*)yessnacks(.*)|(.*)smarties(.*)|(.*)nhs(.*)|(.*)smababy(.*)|(.*)mezeast(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1) \n                                                 when rlike(ter.ter,'(.*)meritene(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Vitaflo (International) Ltd'),-1)\n                                                 when rlike(ter.ter,'(.*)buxton(.*)|(.*)purelife(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Waters UK Ltd'),-1)\n                              else nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1)\n                         end = hist.data_controller_id\n                    and brand.brand_id = coalesce(hist.brand_id, nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Purina Masterbrand'),-1))\n   where ter.ter in ('UKpurinagrp_RGpurinaweb',\n                      'UKbetabrand_RGtermsandcond',\n                      'UKbakersbrd_RGtermsandcond',\n                      'UKfelixbrnd_RGtermsandcond',\n                      'UKprnbeyond_RGtermsandcond',\n                      'UKpetwelcom_RGtermsandcond',\n                      'UKcerelacbd_RGcerelac',\n                      'UKmeritene_RGtcandprivacy',\n                      'UKcarnationbd_RGtcandprivacy',\n                      'UKaero_RGtcandprivacy',\n                      'UKbuxton_RGtcandprivacy',\n                      'UKkitkat_RGtcandprivacy',\n                      'UKmaggi_RGtcandprivacy',\n                      'UKmilkybar_RGtcandprivacy',\n                      'UKnescafe_RGtcandprivacy',\n\t\t\t\t\t  'UKnhs_RGtcandprivacy', \n                      'UKpurelife_RGtcandprivacy',\n                      'UKrowntrees_RGtcandprivacy',\n                      'UKyessnacks_RGtcandprivacy',\n                      'UKbreedselector_RGtcandprivacy',\n                      'UKsmarties_RGtcandprivacy',\n                      'UKsmababy_RGtcandprivacy',\n                      'UKmezeast_RGtcandprivacy'\n                     )\n;\n\ninsert into ${Database}.db.names\n    (\n        bbw_urn,\n        name_urn,\n        data_date,\n        reg_date,\n        title,\n        firstname,\n        lastname,\n        job_title,\n        company,\n        add1,\n        add2,\n        add3,\n        add4,\n        add5,\n        add6,\n        add7,\n        city,\n        state,\n        postcode,\n        country,\n        region,\n        dob,\n        gender,\n        phone_work,\n        phone_mobile,\n        phone_home,\n        phone_fax,\n        email,\n        www,\n        fullname,\n        initials,\n        source,\n        source_file,\n        source_urn,\n        source_date,\n        source_data_controller_id,\n        source_brand_id\n    ) \n    select distinct\n        cast(cast(row_number() over(order by 1) as int) + nvl((select max(bbw_urn) from ${Database}.db.names),0) as int) as bbw_urn,\n        concat('REG_GIG|',sub.uid),\n        sub.sub_data_date,\n        coalesce(hist.browser_date, sub.sub_data_date),\n        coalesce(sub.title,''),\n        coalesce(left(sub.firstname, 50),''),\n        coalesce(left(sub.lastname, 50),''),\n        '',\n        '',        \n        coalesce(sub.add1,''),\n        coalesce(sub.add2,''),\n        coalesce(sub.add3,''),\n        coalesce(sub.add4,''),\n        '',\n        '',\n        '',\n        coalesce(sub.city,''),\n        coalesce(sub.state,''),\n        coalesce(sub.postcode,''),\n        coalesce(sub.country,''),\n        '',\n        sub.dob,\n        upper(sub.gender),\n        '',\n        coalesce(sub.phone_mobile,''),\n        coalesce(sub.phone_home,''),\n        '',\n        coalesce(sub.email,''),\n        '',\n        '',\n        '',      \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        sub.uid,\n        current_date(),\n        case when rlike(sub.sub,'(.*)aero(.*)|(.*)cerelac(.*)|(.*)carnation(.*)|(.*)kitkat(.*)|(.*)maggi(.*)|(.*)nescafe(.*)|(.*)rowntrees(.*)|(.*)yessnacks(.*)|(.*)smarties(.*)|(.*)nhs(.*)|(.*)smababy(.*)|(.*)mezeast(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1)  \n             when rlike(sub.sub,'(.*)meritene(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Vitaflo (International) Ltd'),-1)\n             when rlike(sub.sub,'(.*)buxton(.*)|(.*)purelife(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Waters UK Ltd'),-1)\n             else nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1)\n        end as data_controller_id,\n        brand.brand_id\n    from ${Database}.staging.npp_gigya_subscriptions sub\n    left join ${Database}.db.ref_brand brand\n                on case\n                     when rlike(sub.sub,'(.*)betabrand(.*)','i')        then 'Beta'\n                     when rlike(sub.sub,'(.*)bakersbrd(.*)','i')        then 'Bakers'\n                     when rlike(sub.sub,'(.*)felixbrnd(.*)','i')        then 'Felix'\n                     when rlike(sub.sub,'(.*)prnbeyond(.*)','i')        then 'Beyond'\n                     when rlike(sub.sub,'(.*)petwelcom(.*)','i')        then 'Pets Welcome'\n                     when rlike(sub.sub,'(.*)cerelac(.*)','i')          then 'Cerelac'\n                     when rlike(sub.sub,'(.*)meritene(.*)','i')         then 'MERITENE'\n                     when rlike(sub.sub,'(.*)carnation(.*)','i')        then 'Carnation'\n                     when rlike(sub.sub,'(.*)aero(.*)','i')             then 'Aero'\n                     when rlike(sub.sub,'(.*)buxton(.*)','i')             then 'Buxton'\n                     when rlike(sub.sub,'(.*)kitkat(.*)','i')             then 'Kit Kat'\n                     when rlike(sub.sub,'(.*)maggi(.*)','i')            then 'Maggi'\n                     when rlike(sub.sub,'(.*)milkybar(.*)','i')         then 'Milky Bar'\n                     when rlike(sub.sub,'(.*)nescafe(.*)','i')          then 'Nescafe'\n\t\t\t\t\t when rlike(sub.sub,'(.*)nhs(.*)','i')  then '' \n                     when rlike(sub.sub,'(.*)purelife(.*)','i')         then 'Pure Life'\n                     when rlike(sub.sub,'(.*)rowntrees(.*)','i')         then 'Rowntrees'\n                     when rlike(sub.sub,'(.*)yessnacks(.*)','i')         then 'Yes Snacks'\n                     when rlike(sub.sub,'(.*)smarties(.*)','i')         then 'Smarties'\n                     when rlike(sub.sub,'(.*)breedselector(.*)','i')   then 'Breed Selector'\n                     when rlike(sub.sub,'(.*)smababy(.*)','i')           then 'SMA'\n                     when rlike(sub.sub,'(.*)mezeast(.*)','i')           then 'MezEast'\n                     else 'Purina Masterbrand' \n                    end = brand.brand\n    left join (select name_urn, \n                   data_controller_id,\n                   brand_id,\n                   min(browser_date) as browser_date\n               from ${Database}.db.web_browser_hist\n               group by name_urn,\n                   data_controller_id,\n                   brand_id\n              ) hist on concat('REG_GIG|',sub.uid) = hist.name_urn\n                     and case when rlike(sub.sub,'(.*)aero(.*)|(.*)cerelac(.*)|(.*)carnation(.*)|(.*)kitkat(.*)|(.*)maggi(.*)|(.*)nescafe(.*)|(.*)rowntrees(.*)|(.*)yessnacks(.*)|(.*)smarties(.*)|(.*)nhs(.*)|(.*)smababy(.*)|(.*)mezeast(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1)  \n                              when rlike(sub.sub,'(.*)meritene(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Vitaflo (International) Ltd'),-1)\n                              when rlike(sub.sub,'(.*)buxton(.*)|(.*)purelife(.*)','i') then nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Waters UK Ltd'),-1)\n                              else nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1)\n                         end = hist.data_controller_id\n                    and brand.brand_id = coalesce(hist.brand_id, (select brand_id from ${Database}.db.ref_brand where brand = 'Purina Masterbrand'))\n    where sub.sub in ('UKpurinagrp_RGpurinaweb',\n                      'UKbetabrand_RGtermsandcond',\n                      'UKbakersbrd_RGtermsandcond',\n                      'UKfelixbrnd_RGtermsandcond',\n                      'UKprnbeyond_RGtermsandcond',\n                      'UKpetwelcom_RGtermsandcond',\n                      'UKcerelacbd_RGcerelac',\n                      'UKmeritene_RGtcandprivacy',\n                      'UKcarnationbd_RGtcandprivacy',\n                      'UKaero_RGtcandprivacy',\n                      'UKbuxton_RGtcandprivacy',\n                      'UKkitkat_RGtcandprivacy',\n                      'UKmaggi_RGtcandprivacy',\n                      'UKmilkybar_RGtcandprivacy',\n                      'UKnescafe_RGtcandprivacy',\n\t\t\t\t\t  'UKnhs_RGtcandprivacy', \n                      'UKpurelife_RGtcandprivacy',\n                      'UKrowntrees_RGtcandprivacy',\n                      'UKyessnacks_RGtcandprivacy',\n                      'UKbreedselector_RGtcandprivacy',\n                      'UKsmarties_RGtcandprivacy',\n                      'UKsmababy_RGtcandprivacy',\n                      'UKmezeast_RGtcandprivacy'\n                     )\n;\n\ninsert into ${Database}.db.pet \n(\n  NAME_URN,\t\n  PET_URN,\n  PET_NAME,\n  PET_TYPE,\n  PET_AGE_YEARS,\n  PET_AGE_MONTHS,\n  PET_DOB,\n  PET_BIRTH_MONTH,\n  PET_BIRTH_YEAR,\n  PET_AGE_WEEKS,\n  PET_INDOOR_OUTDOOR,\n  PET_SIZE,\n  PET_BREED,\n  PET_COLOUR,\n  PET_WEIGHT,\n  PET_GENDER,\n  PET_LIFE_STAGE,\n  PET_BODYSHAPE,\n  PET_LIFESTYLE,\n  PET_DECEASED,\n  PET_KENNEL,\n  DATA_DATE,\n  SOURCE,\n  SOURCE_FILE,\n  SOURCE_URN,\n  SOURCE_DATE\n)\n    select \n        concat('REG_GIG|',uid),\n        concat('REG_GIG|',uid)||'|'||to_char(row_number() over(partition by uid order by pet_data_date, pet_dob,pet_name )+mp.max_pet) as pet_urn,\n        coalesce(left(pet_name,50), ''),\n        nvl(pet_type,''),\n        cast(NULL as int),\n        cast(NULL as int),\n        pet_dob,\n\t\tcast(NULL as int),\n\t\tcast(NULL as int),\n\t\tcast(NULL as int),\n        case when pet_indoor = 'true' then 'I' else '' end,\n        case pet_size\n            when 'Extra Large' then 'XL'\n            when 'Large' then 'L'\n            when 'Medium' then 'M'\n            when 'Small' then 'S'\n            when 'Toy' then 'T'\n            else '' \n        end,\n        nvl(pet_breed,''),\n\t\t'',\n        '',\n        case pet_gender when '1' then 'M' when '2' then 'F' else '' end,\n        '',\n        '',\n\t\t'',\n\t\t'',\n\t\t'',\n        pet_data_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_pets.txt',\n        pet_uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_pets g\n    left join (\n                select \n                    name_urn,\n                    max(cast(tbw.db.strchop(pet_urn, '|', -1,6) as int)) as max_pet\n                from ${Database}.db.pet\n                group by 1\n              )  mp on mp.name_urn = concat('REG_GIG|',g.uid)\n;\n\ninsert into ${Database}.db.question\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1),\n        case \n            when rlike(pet_food,'(.*)adventuros(.*)','i')           then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Adventuros'),-1)\n            when rlike(pet_food,'(.*)bakers(.*)','i')               then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Bakers'),-1)\n            when rlike(pet_food,'(.*)beta(.*)','i')                 then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Beta'),-1)\n            when rlike(pet_food,'(.*)beyond(.*)','i')               then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Beyond'),-1)\n            when rlike(pet_food,'(.*)bonio(.*)','i')                then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Bonio'),-1)\n            when rlike(pet_food,'(.*)dentalife(.*)','i')            then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Dentalife'),-1)\n            when rlike(pet_food,'(.*)felix(.*)','i')                then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Felix'),-1)\n            when rlike(pet_food,'(.*)go cat(.*)|(.*)go-cat(.*)','i')        then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Go Cat'),-1)\n            when rlike(pet_food,'(.*)gourmet(.*)','i')              then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Gourmet'),-1)\n            when rlike(pet_food,'(.*)pro plan(.*)','i')             then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Pro Plan'),-1)\n            when rlike(pet_food,'(.*)my dog is(.*)|(.*)mydogis(.*)','i')    then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'my dog is'),-1)\n            when rlike(pet_food,'(.*)purina one(.*)|(.*)purinaone(.*)','i') then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Purina ONE'),-1)                  \n            when rlike(pet_food,'(.*)winalot(.*)','i')              then nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Winalot'),-1)\n            else cast(null as int)\n        end,\n        (select question_id from ${Database}.db.ref_question where question = 'Brand of pet food fed to pet'),\n        pet_food,\n        pet_data_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_pets.txt',\n        pet_uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_pets\n    where pet_food is not null\n;\n\ninsert into ${Database}.db.question\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1),\n        cast(null as int),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'Number of cats'),-1),\n        householdcatscount,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where coalesce(trim(householdCatsCount),'0') <> '0'\n;\n\ninsert into ${Database}.db.question\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1),\n        cast(null as int),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'Number of dogs'),-1),\n        householdDogsCount,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where coalesce(trim(householdDogsCount),'0') <> '0'\n;\n\ninsert into ${Database}.db.question\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1),\n        cast(null as int),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'Have cat'),-1),\n        case when householdOwnsCats = 'true' then 'Y' else 'N' end,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where householdOwnsCats is not null\n;\n\ninsert into ${Database}.db.question\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1),\n        cast(null as int),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'Have dog'),-1),\n        case when householdOwnsDogs = 'true' then 'Y' else 'N' end,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where householdOwnsDogs is not null\n;\n\ninsert into ${Database}.db.question\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Nescafe'),-1),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'How do you like your coffee'),-1) as question_id,\n        split_part(split_part(areaofinterest,'\"GG_COFFEE_PREFERENCES\",\"answerDetails\"',2),'\"',2) as answer,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where rlike(areaofinterest,'(.*)\"GG_COFFEE_PREFERENCES\"(.*)','i')\n;\n\ninsert into ${Database}.db.question\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Nescafe'),-1),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'What intensity do you prefer'),-1) as question_id,\n        split_part(split_part(areaofinterest,'\"GG_COFFEE_INTENSITY\",\"answerDetails\"',2),'\"',2) as answer,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where rlike(areaofinterest,'(.*)\"GG_COFFEE_INTENSITY\"(.*)','i')\n;\n\ninsert into ${Database}.db.question\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Nescafe'),-1),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'In what way do you require/want a coffee'),-1) as question_id,\n        split_part(split_part(areaofinterest,'\"GG_COFFEE_NEEDSTATE\",\"answerDetails\"',2),'\"',2) as answer,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where rlike(areaofinterest,'(.*)\"GG_COFFEE_NEEDSTATE\"(.*)','i')\n;\n\ninsert into ${Database}.db.question\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Nescafe'),-1),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'What time of day do you drink your coffee'),-1) as question_id,\n        split_part(split_part(areaofinterest,'\"GG_COFFEE_DAYTIME\",\"answerDetails\"',2),'\"',2) as answer,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where rlike(areaofinterest,'(.*)\"GG_COFFEE_DAYTIME\"(.*)','i')\n;\n\ninsert into ${Database}.db.question \n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        cast(null as int),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'Category of interest'),-1) as question_id,\n        split_part(split_part(areaofinterest,'\"GG_CATEGORY_OF_INTEREST\",\"answerDetails\"',2),'\"',2) as answer,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where rlike(areaofinterest,'(.*)\"GG_CATEGORY_OF_INTEREST\"(.*)','i')\n;\n\ninsert into ${Database}.db.question \n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        cast(null as int),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'Brand of interest'),-1) as question_id,\n        split_part(split_part(areaofinterest,'\"GG_BRAND_OF_INTEREST\",\"answerDetails\"',2),'\"',2) as answer,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where rlike(areaofinterest,'(.*)\"GG_BRAND_OF_INTEREST\"(.*)','i')\n;\n\n\ninsert into ${Database}.db.question \n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        question_id,\n        answer,\n        data_date,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    )\n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Nestle in Market'),-1),\n        nvl((select question_id from ${Database}.db.ref_question where question = 'Do you have any of these dietary or nutritional needs?'),-1) as question_id,\n        split_part(split_part(areaofinterest,'\"GG_NUTRITION_NEEDS\",\"answerDetails\"',2),'\"',2) as answer,\n        updated_date,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_questions.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_questions\n    where rlike(areaofinterest,'(.*)\"GG_NUTRITION_NEEDS\"(.*)','i')\n;\n\n\ninsert into ${Database}.db.supps_pet\n     (\n         supp_urn,\n         data_date,\n         email,\n         pet_name,\n         pet_type,\n         source,\n         source_file,\n         source_urn,\n         source_date\n     )\n     select\n         nvl((select max(supp_urn) from ${Database}.db.supps_pet),-1) + row_number() over(order by 1),\n         current_date(),\n         x2.email,\n         p.pet_name,\n         p.pet_type,\n         'REG_GIG',\n         'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_pets.txt',\n         x2.name_urn,\n         current_date()\n     from (\n              select\n                  replace(name_urn,'REG_GIG|','') as uid,\n                  source_urn as pet_uid,\n                  pet_name,\n                  pet_type,\n                  source_date,\n                  first_value(source_date) over(partition by name_urn order by source_date desc nulls last) as latest_source_date\n              from ${Database}.db.pet\n              where source = 'REG_GIG'\n                  and source_date <> current_date()\n                  and name_urn in (select distinct 'REG_GIG|'||uid from ${Database}.staging.npp_gigya_pets)\n          ) p\n     inner join ${Database}.live.xref_name_urn x1 on x1.name_urn = 'REG_GIG|'||p.uid\n     inner join ${Database}.live.xref_name_urn x2 on x2.cid = x1.cid\n     left join ${Database}.staging.npp_gigya_pets ps on ps.uid = p.uid\n                                               and ps.pet_uid = p.pet_uid\n     where p.source_date = p.latest_source_date\n         and ps.pet_uid is null\n;\n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        data_date,\n        dp_date,\n        dp_mailable,\n        dp_emailable,\n        dp_phoneable,\n        dp_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller = 'Cereal Partners UK'),-1),\n        sub_data_date,\n        sub_data_date,\n        case when optin = 'true' then 1 else 0 end, \n        case when optin = 'true' then 1 else 0 end, \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub = 'UKcerlprtnr_OOmrktprg'\n;\n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        data_date,\n        dp_date,\n        dp_mailable,\n        dp_emailable,\n        dp_phoneable,\n        dp_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller = 'Lactalis'),-1),\n        sub_data_date,\n        sub_data_date,\n        case when optin = 'true' then 1 else 0 end, \n        case when optin = 'true' then 1 else 0 end, \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub = 'UKlactalis_OOmrktprg'\n;\n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        data_date,\n        dp_date,\n        dp_mailable,\n        dp_emailable,\n        dp_phoneable,\n        dp_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller = 'Vitaflo (International) Ltd'),-1),\n        sub_data_date,\n        sub_data_date,\n        case when optin = 'true' then 1 else 0 end, \n        case when optin = 'true' then 1 else 0 end, \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub = 'UKvitaflo_OOmrktprg'\n;\n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        data_date,\n        dp_date,\n        dp_mailable,\n        dp_emailable,\n        dp_phoneable,\n        dp_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Waters UK Ltd'),-1),\n        sub_data_date,\n        sub_data_date,\n        case when optin = 'true' then 1 else 0 end, \n        case when optin = 'true' then 1 else 0 end, \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub = 'UKwatersgrp_OOmrktprg'\n;\n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        data_date,\n        dp_date,\n        dp_mailable,\n        dp_emailable,\n        dp_phoneable,\n        dp_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select \n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        sub_data_date,\n        sub_data_date,\n        case when optin = 'true' then 1 else 0 end, \n        case when optin = 'true' then 1 else 0 end, \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub in ('UKnestleuki_OOmrktprg', 'UKnestlegrp_OOmrktprg')\n;\n\ninsert into ${Database}.db.names_dp\n(\n    name_urn,\n    data_controller_id,\n    data_date,\n    dp_date,\n    dp_mailable,\n    dp_emailable,\n    dp_phoneable,\n    dp_smsable,\n    source,\n    source_file,\n    source_urn,\n    source_date\n)\nselect distinct\n    concat('REG_GIG|',uid) as name_urn,\n    nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1) as data_controller_id,\n    first_value(sub_data_date) over(partition by uid order by sub_data_date desc nulls last) as data_date,\n    first_value(sub_data_date) over(partition by uid order by sub_data_date desc nulls last) as dp_date,\n    first_value(case when rlike(sub,'(.*)postal(.*)','i') and optin = 'true' then 1 else 0 end) over(partition by uid order by case when rlike(sub,'(.*)postal(.*)','i') then 1 else 0 end desc) as dp_mailable,\n    first_value(case when rlike(sub,'(.*)email(.*)','i') and optin = 'true' then 1 else 0 end) over(partition by uid order by case when rlike(sub,'(.*)email(.*)','i') then 1 else 0 end desc) as dp_emailable,\n    cast(null as int) as dp_phoneable,\n    cast(null as int) as dp_smsable,\n    'REG_GIG' as source,\n    'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt' as source_file,\n    uid as source_urn,\n    current_date() as source_date\nfrom (\n         select\n             opt.uid,\n             chan.sub,\n             greatest(coalesce(opt.sub_data_date,cast('1900-01-01' as timestamp)),coalesce(chan.sub_data_date,cast('1900-01-01' as timestamp))) as sub_data_date,\n             case when opt.optin = 'true' and chan.optin = 'true' then 'true' else 'false' end as optin\n         from ${Database}.staging.npp_gigya_subscriptions opt\n         inner join ${Database}.staging.npp_gigya_subscriptions chan on chan.uid = opt.uid\n         where opt.sub = 'UKpurinagrp_OOmrktprg'\n             and chan.sub in ('UKpurinagrp_SBmktemail','UKpurinagrp_SBmktpostal')\n     ) sub\n;\n\n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        dp_date,\n        dp_newsletter,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG_ORIGINS|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Purina Masterbrand'),-1) ,\n        sub_data_date,\n        sub_data_date,\n        case when optin = 'true' then 1 else 0 end,\n        'REG_GIG_ORIGINS',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions s\n    where sub = 'UKnescafecarbon_SBmktemail'\n    \n    ;\n\n\ninsert into ${Database}.db.names_preference\n    (\n        name_urn,\n        data_controller_id,\n        division_id,\n        brand_id,\n        data_date,\n        pref_id,\n        pref_mailable,\n        pref_emailable,\n        pref_phoneable,\n        pref_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select\n    n.name_urn,\n    n.data_controller_id,\n    n.division_id,\n    n.brand_id,\n    coalesce(o.data_date,n.data_date),\n    n.pref_id,\n    n.pref_mailable,\n    n.pref_emailable,\n    n.pref_phoneable,\n    n.pref_smsable,\n    n.source,\n    n.source_file,\n    n.source_urn,\n    n.source_date\nfrom (\n         select distinct \n             concat('REG_GIG|',pref.uid) as name_urn,\n             nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd'),-1) as data_controller_id,\n             cast(null as int) as division_id,\n             case left(pref.sub, 11)\n                 when 'UKadvnturos' then (select brand_id from ${Database}.db.ref_brand where brand = 'Adventuros')\n                 when 'UKbakersbrd' then (select brand_id from ${Database}.db.ref_brand where brand = 'Bakers')\n                 when 'UKbetabrand' then (select brand_id from ${Database}.db.ref_brand where brand = 'Beta')\n                 when 'UKprnbeyond' then (select brand_id from ${Database}.db.ref_brand where brand = 'Beyond')\n                 when 'UKboniobrnd' then (select brand_id from ${Database}.db.ref_brand where brand = 'Bonio')\n                 when 'UKbreedsele' then (select brand_id from ${Database}.db.ref_brand where brand = 'Breed Selector')\n                 when 'UKdentalife' then (select brand_id from ${Database}.db.ref_brand where brand = 'Dentalife')\n                 when 'UKfelixbrnd' then (select brand_id from ${Database}.db.ref_brand where brand = 'Felix')\n                 when 'UKgocatbrnd' then (select brand_id from ${Database}.db.ref_brand where brand = 'Go Cat')\n                 when 'UKgourmtbrd' then (select brand_id from ${Database}.db.ref_brand where brand = 'Gourmet')\n                 when 'UKproplnbrd' then (select brand_id from ${Database}.db.ref_brand where brand = 'Pro Plan')\n                 when 'UKpurinabrd' then (select brand_id from ${Database}.db.ref_brand where brand = 'Purina Masterbrand')\n                 when 'UKpurinaone' then (select brand_id from ${Database}.db.ref_brand where brand = 'Purina ONE')\n                 when 'UKwinaltbrd' then (select brand_id from ${Database}.db.ref_brand where brand = 'Winalot')\n             end as brand_id,\n             pref.sub_data_date as data_date,\n             cast(null as int) as pref_id,\n             first_value(case when right(chan.sub,6) = 'postal' and chan.optin = 'true' and pref.optin = 'true' then 1 else 0 end)\n             over(partition by pref.uid, pref.sub order by case when right(chan.sub,6) = 'postal' then 0 else 1 end, chan.optin, pref.optin, pref.sub_data_date)  as pref_mailable,\n             first_value(case when right(chan.sub,6) = 'temail' and chan.optin = 'true' and pref.optin = 'true' then 1 else 0 end)\n             over(partition by pref.uid, pref.sub order by case when right(chan.sub,6) = 'temail' then 0 else 1 end, chan.optin, pref.optin, pref.sub_data_date)  as pref_emailable,\n             cast(null as int) as pref_phoneable, \n             cast(null as int) as pref_smsable, \n             'REG_GIG' as source,\n             'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt' as source_file,\n             pref.uid as source_urn,\n             current_date() as source_date\n         from ${Database}.staging.npp_gigya_subscriptions pref\n         inner join ${Database}.staging.npp_gigya_subscriptions chan on pref.uid = chan.uid\n         where pref.sub in (\n                               'UKpurinabrd_SBmktprogram',\n                               'UKadvnturos_SBmktprogram',\n                               'UKbakersbrd_SBmktprogram',\n                               'UKboniobrnd_SBmktprogram',\n                               'UKdentalife_SBmktprogram',\n                               'UKfelixbrnd_SBmktprogram',\n                               'UKwinaltbrd_SBmktprogram',\n                               'UKgocatbrnd_SBmktprogram',\n                               'UKgourmtbrd_SBmktprogram',\n                               'UKbetabrand_SBmktprogram',\n                               'UKprnbeyond_SBmktprogram',\n                               'UKproplnbrd_SBmktprogram',\n                               'UKpurinaone_SBmktprogram',\n                               'UKbreedselector_SBmktemail'\n                           )\n             and chan.sub in ('UKpurinagrp_SBmktemail','UKpurinagrp_SBmktpostal')\n             and pref.sub_data_date is not null\n             and chan.sub_data_date is not null\n     ) n\nleft join (\n              select\n                  name_urn,\n                  brand_id,\n                  data_date,\n                  pref_mailable,\n                  pref_emailable,\n                  row_number() over(partition by name_urn, brand_id order by source_date desc) as rn\n              from ${Database}.db.names_preference\n          ) o on n.name_urn = o.name_urn\n             and n.brand_id = o.brand_id\n             and n.pref_mailable = o.pref_mailable\n             and n.pref_emailable = o.pref_emailable\n             and o.rn = 1\n;\n\ninsert into ${Database}.db.names_preference\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        pref_id,\n        pref_mailable,\n        pref_emailable,\n        pref_phoneable,\n        pref_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Vitaflo (International) Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'MERITENE'),-1) ,\n        first_value(sub_data_date) over(partition by uid, left(sub, 11) order by sub_data_date),\n        cast(null as int), \n        first_value(case when right(sub, 6) in ('postal') and optin = 'true' then 1 else 0 end) \n            over(partition by uid, left(sub, 11) order by case when right(sub, 6) in ('postal') then 0 else 1 end, optin, sub_data_date), \n        first_value(case when right(sub, 6) in ('temail') and optin = 'true' then 1 else 0 end) \n            over(partition by uid, left(sub, 11) order by case when right(sub, 6) in ('temail') then 0 else 1 end, optin, sub_data_date), \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub in \n        (\n            'UKmeritenebrd_SBmktemail',\n            'UKmeritenebrd_SBmktpostal'\n        )\n;\n\ninsert into ${Database}.db.names_preference\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        pref_id,\n        pref_mailable,\n        pref_emailable,\n        pref_phoneable,\n        pref_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Cerelac'),-1) ,\n        first_value(sub_data_date) over(partition by uid order by sub_data_date desc),\n        cast(null as int), \n        first_value(case when right(sub, 6) in ('postal') and optin = 'true' then 1 else 0 end) \n            over(partition by uid, left(sub, 11) order by case when right(sub, 6) in ('postal') then 0 else 1 end, optin, sub_data_date), \n        first_value(case when right(sub, 6) in ('temail') and optin = 'true' then 1 else 0 end) \n            over(partition by uid, left(sub, 11) order by case when right(sub, 6) in ('temail') then 0 else 1 end, optin, sub_data_date), \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub in \n        (\n            'UKcerelacbd_SBmktemail',\n            'UKcerelacbd_SBmktpostal'\n        )\n;\n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        dp_date,\n        dp_mailable,\n        dp_emailable,\n        dp_phoneable,\n        dp_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Cerelac'),-1) ,\n        first_value(sub_data_date) over(partition by uid order by sub_data_date desc),\n        first_value(sub_data_date) over(partition by uid order by sub_data_date desc),\n        first_value(case when right(sub, 6) in ('postal') and optin = 'true' then 1 else 0 end) \n            over(partition by uid, left(sub, 11) order by case when right(sub, 6) in ('postal') then 0 else 1 end, optin, sub_data_date), \n        first_value(case when right(sub, 6) in ('temail') and optin = 'true' then 1 else 0 end) \n            over(partition by uid, left(sub, 11) order by case when right(sub, 6) in ('temail') then 0 else 1 end, optin, sub_data_date), \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub in \n        (\n            'UKcerelacbd_SBmktemail',\n            'UKcerelacbd_SBmktpostal'\n        )\n;\n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        dp_date,\n        dp_mailable,\n        dp_emailable,\n        dp_phoneable,\n        dp_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'SMA'),-1) ,\n        first_value(sub_data_date) over(partition by uid order by sub_data_date desc),\n        first_value(sub_data_date) over(partition by uid order by sub_data_date desc),\n        first_value(case when right(sub, 6) in ('postal') and optin = 'true' then 1 else 0 end) \n            over(partition by uid, left(sub, 11) order by case when right(sub, 6) in ('postal') then 0 else 1 end, optin, sub_data_date), \n        first_value(case when right(sub, 6) in ('temail') and optin = 'true' then 1 else 0 end) \n            over(partition by uid, left(sub, 11) order by case when right(sub, 6) in ('temail') then 0 else 1 end, optin, sub_data_date), \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub in \n        (\n            'UKsmababy_SBmktemail',\n            'UKsmababy_SBsamplepostal'\n        )\n;\n\ninsert into ${Database}.db.names_preference\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        pref_id,\n        pref_mailable,\n        pref_emailable,\n        pref_phoneable,\n        pref_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',uid),\n        case when left(sub, 11) in ('UKbuxton_SB',\n                                    'UKpurelife_') then     nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Waters UK Ltd'),-1)\n                                                    else     nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1)\n            end as data_controller_id,\n        case left(sub, 11)\n                 when 'UKcarnation' then (select brand_id from ${Database}.db.ref_brand where brand = 'Carnation')\n                 when 'UKbuxton_SB' then (select brand_id from ${Database}.db.ref_brand where brand = 'Buxton')\n                 when 'UKpurelife_' then (select brand_id from ${Database}.db.ref_brand where brand = 'Pure Life')                 \n                 when 'UKaero_SBmk' then (select brand_id from ${Database}.db.ref_brand where brand = 'Aero')\n                 when 'UKkitkat_SB' then (select brand_id from ${Database}.db.ref_brand where brand = 'Kit Kat')\n                 when 'UKmaggi_SBm' then (select brand_id from ${Database}.db.ref_brand where brand = 'Maggi')\n                 when 'UKmilkybar_' then (select brand_id from ${Database}.db.ref_brand where brand = 'Milky bar')\n                 when 'UKrowntrees' then (select brand_id from ${Database}.db.ref_brand where brand = 'Rowntrees')\n                 when 'UKyessnacks' then (select brand_id from ${Database}.db.ref_brand where brand = 'Yes Snacks')\n                 when 'UKsmarties' then (select brand_id from ${Database}.db.ref_brand where brand = 'Smarties')\n            end as brand_id,\n        sub_data_date,\n        cast(null as int), \n        cast(null as int), \n        case when optin = 'true' then 1 else 0 end, \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub in ( 'UKcarnationbd_SBmktemail',\n                    'UKbuxton_SBmktemail',\n                    'UKpurelife_SBmktemail',\n                    'UKaero_SBmktemail',\n                    'UKyessnacks_SBmktemail',\n                    'UKkitkat_SBmktemail',\n                    'UKmaggi_SBmktemail',\n                    'UKmilkybar_SBmktemail',\n                    'UKrowntrees_SBmktemail',\n                    'UKsmarties_SBmktemail')\n;\n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        dp_date,\n        dp_newsletter,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Carnation'),-1) ,\n        sub_data_date,\n        sub_data_date,\n        case when optin = 'true' then 1 else 0 end,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub = 'UKcarnationbd_SBmktemail'\n;    \n\ninsert into ${Database}.db.names_preference\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        pref_id,\n        pref_mailable,\n        pref_emailable,\n        pref_phoneable,\n        pref_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Nescafe'),-1) ,\n        first_value(sub_data_date) over(partition by uid, left(sub, 11) order by sub_data_date),\n        cast(null as int), \n        first_value(case when right(sub, 6) in ('postal') and optin = 'true' then 1 else 0 end) \n            over(partition by uid, left(sub, 11) order by case when right(sub, 6) in ('postal') then 0 else 1 end, optin, sub_data_date), \n        first_value(case when right(sub, 6) in ('temail') and optin = 'true' then 1 else 0 end) \n            over(partition by uid, left(sub, 11) order by case when right(sub, 6) in ('temail') then 0 else 1 end, optin, sub_data_date), \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub in \n        (\n            'UKnescafe_SBmktemail',\n            'UKnescafe_SBsamplepostal',\n\t\t\t'UKnescafecarbon_SBmktemail'\n        )\n;\n\ninsert into ${Database}.db.names_preference\n    (\n        name_urn,\n        data_controller_id,\n        division_id,\n        brand_id,\n        data_date,\n        pref_id,\n        pref_mailable,\n        pref_emailable,\n        pref_phoneable,\n        pref_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select\n    n.name_urn,\n    n.data_controller_id,\n    n.division_id,\n    n.brand_id,\n    coalesce(o.data_date,n.data_date),\n    n.pref_id,\n    n.pref_mailable,\n    n.pref_emailable,\n    n.pref_phoneable,\n    n.pref_smsable,\n    n.source,\n    n.source_file,\n    n.source_urn,\n    n.source_date\nfrom (\n         select distinct \n             concat('REG_GIG|',pref.uid) as name_urn,\n             nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1) as data_controller_id,\n             cast(null as int) as division_id,\n             case tbw.db.strchop(pref.sub, '_', 1, 1)\n                 when 'UKnescafeoriginal' then (select brand_id from ${Database}.db.ref_brand where brand = 'Nescafe Original')\n                 when 'UKnescafegold' then (select brand_id from ${Database}.db.ref_brand where brand = 'Nescafe Gold')\n                 when 'UKnescafeazera' then (select brand_id from ${Database}.db.ref_brand where brand = 'Nescafe Azera')\n             end as brand_id,\n             pref.sub_data_date as data_date,\n             cast(null as int) as pref_id,\n             first_value(case when right(chan.sub,6) = 'postal' and chan.optin = 'true' and pref.optin = 'true' then 1 else 0 end)\n             over(partition by pref.uid, pref.sub order by case when right(chan.sub,6) = 'postal' then 0 else 1 end, chan.optin, pref.optin, pref.sub_data_date)  as pref_mailable,\n             first_value(case when right(chan.sub,6) = 'temail' and chan.optin = 'true' and pref.optin = 'true' then 1 else 0 end)\n             over(partition by pref.uid, pref.sub order by case when right(chan.sub,6) = 'temail' then 0 else 1 end, chan.optin, pref.optin, pref.sub_data_date)  as pref_emailable,\n             cast(null as int) as pref_phoneable, \n             cast(null as int) as pref_smsable, \n             'REG_GIG' as source,\n             'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt' as source_file,\n             pref.uid as source_urn,\n             current_date() as source_date\n         from ${Database}.staging.npp_gigya_subscriptions pref\n         inner join ${Database}.staging.npp_gigya_subscriptions chan on pref.uid = chan.uid and tbw.db.strchop(pref.sub, '_', 1, 1) = tbw.db.strchop(chan.sub, '_', 1, 1)\n         where pref.sub in (\n                               'UKnescafegold_SBmktprogram',\n                               'UKnescafeazera_SBmktprogram',\n                               'UKnescafeoriginal_SBmktprogram'\n                           )\n             and chan.sub in ('UKnescafeoriginal_SBmktemail','UKnescafegold_SBmktemail', 'UKnescafeazera_SBmktemail', 'UKnescafeoriginal_SBsamplepostal', 'UKnescafegold_SBsamplepostal', 'UKnescafeazera_SBsamplepostal')\n             and pref.sub_data_date is not null\n             and chan.sub_data_date is not null\n     ) n\nleft join (\n              select\n                  name_urn,\n                  brand_id,\n                  data_date,\n                  pref_mailable,\n                  pref_emailable,\n                  row_number() over(partition by name_urn, brand_id order by source_date desc) as rn\n              from ${Database}.db.names_preference\n          ) o on n.name_urn = o.name_urn\n             and n.brand_id = o.brand_id\n             and n.pref_mailable = o.pref_mailable\n             and n.pref_emailable = o.pref_emailable\n             and o.rn = 1\n;\n\ninsert into ${Database}.db.names_preference \n    (\n        name_urn,\n        data_controller_id,\n\t\tdivision_id,\n        brand_id,\n        data_date,\n        pref_id,\n        pref_mailable,\n        pref_emailable,\n        pref_phoneable,\n        pref_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \nselect distinct\n        concat('REG_GIG|',uid) as name_urn,\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1) as data_controller_id,\n\t\tnvl((select division_id from ${Database}.db.ref_division where division like 'Nestle Health Science'),-1) as division_id,\n        rb.brand_id as brand_id ,\n        first_value(sub_data_date) over(partition by uid, left(sub, 11) order by sub_data_date) as data_date,\n        cast(null as int) as pref_id, \n        case when optin = 'true' then 1 else 0 end as pref_mailable, \n        case when optin = 'true' then 1 else 0 end as pref_emailable, \n        cast(null as int) as pref_phoneable, \n        cast(null as int) as pref_smsable, \n        'REG_GIG' as source,\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt' as source_file,\n        uid as source_urn,\n        current_date() as source_date\n    from ${Database}.staging.npp_gigya_subscriptions\n    join ${Database}.live.ref_brand rb on rb.division = 'Nestle Health Science' and rb.brand <> 'Nestle Health Science Professionals'\n     where sub in \n        (\n            'UKnhs_SBmktprogram'\n        )\n;\n\n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        dp_date,\n        dp_newsletter,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'MezEast'),-1) ,\n        sub_data_date,\n        sub_data_date,\n        case when optin = 'true' then 1 else 0 end,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub = 'UKmezeast_SBmktprogram'\n;  \n\ninsert into ${Database}.db.names_dp\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        dp_date,\n        dp_newsletter,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Nestle in Market'),-1) ,\n        sub_data_date,\n        sub_data_date,\n        case when optin = 'true' then 1 else 0 end,\n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions s\n    where sub = 'UKnestlebrd_SBmktprogram'\n;\n\n\ninsert into ${Database}.db.names_preference\n    (\n        name_urn,\n        data_controller_id,\n        brand_id,\n        data_date,\n        pref_id,\n        pref_mailable,\n        pref_emailable,\n        pref_phoneable,\n        pref_smsable,\n        source,\n        source_file,\n        source_urn,\n        source_date\n    ) \n    select distinct\n        concat('REG_GIG|',uid),\n        nvl((select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ UK Ltd'),-1),\n        case \n            when sub = 'UKmezeast_SBmktprogram' then  nvl((select brand_id from ${Database}.db.ref_brand where brand = 'MezEast'),-1)\n            when sub = 'UKnestlebrd_SBmktprogram' then  nvl((select brand_id from ${Database}.db.ref_brand where brand = 'Nestle in Market'),-1)\n        end,\n        first_value(sub_data_date) over(partition by uid, sub order by sub_data_date desc),\n        cast(null as int), \n        cast(null as int), \n        first_value(case when optin = 'true' then 1 else 0 end) over(partition by uid, sub order by sub_data_date, optin), \n        cast(null as int), \n        cast(null as int), \n        'REG_GIG',\n        'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt',\n        uid,\n        current_date()\n    from ${Database}.staging.npp_gigya_subscriptions\n    where sub in \n        (\n            'UKmezeast_SBmktprogram',\n            'UKnestlebrd_SBmktprogram'\n        )\n;\n\nmerge into ${Database}.db.dependant a \n     using (\n       select distinct\n                concat('REG_GIG|',ngd.uid) as name_urn,\n                ngd.child_uid as child_id,\n                coalesce(ngd.first_name, '') as firstname,\n                '' as lastname,\n                ngd.dob,\n                case when ngd.gender = '1' then 'M'\n                     when ngd.gender = '2' then 'F'\n                     else ''\n                end             as gender,\n                current_date()    as created_date,\n                'REG_GIG'       as source,\n                'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_child.txt' as source_file,\n                ngd.uid         as source_urn,\n                current_date()    as source_date,\n                de.m_created_date,\n                1 as is_active,\n                0 as is_deleted\n            from ${Database}.staging.npp_gigya_dependant ngd\n            left join (select name_urn, \n                           child_id,\n                           min(created_date) as m_created_date\n                       from ${Database}.db.dependant\n                       group by name_urn,\n                           child_id) de on concat('REG_GIG|',ngd.uid) = de.name_urn\n                                        and ngd.child_uid = de.child_id\n           ) b on a.name_urn = b.name_urn\n              and a.child_id = b.child_id\n              and a.firstname = b.firstname\n              and a.lastname = b.lastname\n              and coalesce(a.dob, cast('1910-01-01' as date)) = coalesce(b.dob, cast('1910-01-01' as date))\n              and a.gender = b.gender\n     when not matched then insert (name_urn,\n                                   child_id,\n                                   firstname,\n                                   lastname,\n                                   dob,\n                                   gender,\n                                   is_active,\n                                   is_deleted,\n                                   created_date,\n                                   source,\n                                   source_file,\n                                   source_urn,\n                                   source_date)\n          values (b.name_urn,\n                  b.child_id,\n                  b.firstname,\n                  b.lastname,\n                  b.dob,\n                  b.gender,\n                  is_active,\n                  is_deleted,\n                  coalesce(b.m_created_date,b.created_date),\n                  b.source,\n                  b.source_file,\n                  b.source_urn,\n                  b.source_date)\n;\n\n\nmerge into ${Database}.db.ref_sma_welcome_requests re\nusing (\n          select distinct\n              concat('REG_GIG|',uid) as name_urn,\n              cast(replace(replace(sub_data_date,'T',' '),'Z','') as timestamp) as claim_date,\n              'gigya1bw_${gigya_table}_'||to_char(current_date(),'YYYYMMDD')||'_subs.txt' as source_file,\n              current_date as source_date\n          from ${Database}.staging.npp_gigya_subscriptions\n          where sub = 'UKsmababywelcome_SBsamplepostal'\n      ) sub on sub.name_urn = re.name_urn\n           and coalesce(re.claim_date,cast('1900-01-01' as timestamp)) = coalesce(sub.claim_date,cast('1900-01-01' as timestamp))\nwhen not matched then insert\n(\n    name_urn,\n    claim_date,\n    source_file,\n    source_date\n)\nvalues\n(\n    sub.name_urn,\n    sub.claim_date,\n    sub.source_file,\n    sub.source_date\n);\n\n\nmerge into ${Database}.db.sma_thirdparty ch\nusing (\n          select\n              ch.bbw_urn,\n              concat('REG_GIG|',ter.uid) as nestle_return_urn,\n              cast(left(ter.ter_data_date,10) as date) as nestle_return_date\n          from ${Database}.staging.npp_gigya_terms ter\n          inner join (\n                         select distinct\n                             ch.bbw_urn,\n                             lower(xr.email) as email\n                         from ${Database}.db.sma_thirdparty ch\n                         join ${Database}.live.xref_name_urn xr on xr.name_urn = ch.name_urn\n                         where ch.nestle_return_urn is null\n                     ) ch on ch.email = lower(ter.email)\n          where ter.ter = 'UKsmababy_RGtcandprivacy'\n      ) ter on ch.bbw_urn = ter.bbw_urn\nwhen matched and ch.nestle_return_urn is null then update\nset ch.nestle_return_urn = ter.nestle_return_urn,\n    ch.nestle_return_date = ter.nestle_return_date;\n\n\nmerge into ${Database}.db.sma_thirdparty ch\nusing (\n          select\n              ch.bbw_urn,\n              concat('REG_GIG|',sub.uid) as nestle_return_urn,\n              cast(left(sub.sub_data_date,10) as date) as nestle_return_date\n          from ${Database}.staging.npp_gigya_subscriptions sub\n          inner join (\n                         select distinct\n                             ch.bbw_urn,\n                             lower(xr.email) as email\n                         from ${Database}.db.sma_thirdparty ch\n                         join ${Database}.live.xref_name_urn xr on xr.name_urn = ch.name_urn\n                         where ch.nestle_return_urn is null\n                     ) ch on ch.email = lower(sub.email)\n          where sub.sub = 'UKsmababy_RGtcandprivacy'\n      ) sub on ch.bbw_urn = sub.bbw_urn\nwhen matched and ch.nestle_return_urn is null then update\nset ch.nestle_return_urn = sub.nestle_return_urn,\n    ch.nestle_return_date = sub.nestle_return_date;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196467":{"id":196467,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-128,"y":256,"width":32,"height":32,"inputConnectorIDs":[196477],"outputSuccessConnectorIDs":[196472],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Create staging tables for mapping"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"create or replace table ${Database}.staging.npp_gigya_dependant as\nselect\n    l.uid\n    ,dt.*\nfrom ${Database}.staging.npp_gigya_lookup l\ninner join ${Database}.staging.npp_gigya_dependant_temp dt on l.child_uid rlike '(.*)'||dt.child_uid||'(.*)'\n;\n\n\ncreate or replace table ${Database}.staging.npp_gigya_pets as\nselect\n    l.uid\n    ,dt.pet_uid\n    ,nvl(dt.pet_data_date,l.updated_date) as pet_data_date\n    ,pet_name\n    ,pet_type\n    ,pet_breed\n    ,pet_indoor\n    ,pet_size\n    ,pet_food\n    ,pet_gender\n    ,pet_dob\nfrom ${Database}.staging.npp_gigya_lookup l\ninner join ${Database}.staging.npp_gigya_pets_temp dt on l.pet_uid rlike '(.*)'||dt.pet_uid||'(.*)'\n;\n\ncreate or replace table ${Database}.staging.npp_gigya_terms_breakdown as\nselect trim(src[sourcefield]['UID'],'\"') as uid,trim(src[sourcefield]['lastConsentModified'],'\"') as ter_data_date,sourcefield as ter,src[sourcefield]['isConsentGranted'] as optin,trim(src[sourcefield]['tags'],'\"[]') as source_app\nfrom\n\t(\n\tSELECT split_part(s.value,'\"',2) as sourcefield,s.value,parse_json(s.value) as src\n\tFROM\n    \t(\n        \tselect \n                case when contains (ter,'\"legalStatement') then replace(replace(split_part(ter,'\"legalStatement',1)||split_part(split_part(ter,'\"legalStatement',2),'},',2),'},\"',',\"UID\":\"'||uid||'\"}},¦{\"'),']}}','],\"UID\":\"'||uid||'\"}}')\n                else replace(replace(ter,'},\"',',\"UID\":\"'||uid||'\"}},¦{\"'),']}}','],\"UID\":\"'||uid||'\"}}') end as json_field\n        \tfrom ${Database}.staging.npp_gigya_terms_temp\n    \t) tst\n   \t\t, LATERAL FLATTEN (INPUT => SPLIT(json_field,',¦')) s\n\t) t\n    ;\n\ncreate or replace table ${Database}.staging.npp_gigya_terms as\nselect\n\t*\nfrom ${Database}.staging.npp_gigya_accounts a\ninner join ${Database}.staging.npp_gigya_terms_breakdown t using(uid)\n;\n\ncreate or replace table ${Database}.staging.npp_gigya_subscriptions_breakdown as\nselect trim(src[sourcefield]['UID'],'\"') as uid,trim(src[sourcefield]['email']['lastUpdatedSubscriptionState'],'\"') as sub_data_date,sourcefield as sub,src[sourcefield]['email']['isSubscribed'] as optin,trim(src[sourcefield]['email']['tags'],'\"[]') as source_app\nfrom\n\t(\n\tSELECT split_part(s.value,'\"',2) as sourcefield,s.value,parse_json(s.value) as src\n\tFROM\n    \t(\n        \tselect replace(replace(subscriptions,'},\"',',\"UID\":\"'||uid||'\"}},¦{\"'),'}}}}','}},\"UID\":\"'||uid||'\"}}') as json_field\n        \tfrom ${Database}.staging.npp_gigya_subscriptions_temp\n    \t) tst\n   \t\t, LATERAL FLATTEN (INPUT => SPLIT(json_field,',¦')) s\n\t) t\n;\n\ncreate or replace table ${Database}.staging.npp_gigya_subscriptions as\nselect\n\t*\nfrom ${Database}.staging.npp_gigya_accounts a\ninner join ${Database}.staging.npp_gigya_subscriptions_breakdown t using(uid)\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196497":{"id":196497,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-384,"y":0,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[196506],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"196500":{"id":196500,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":53728775,"x":-224,"y":368,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[196469],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Copy of Check Internet Access 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"196465":{"id":196465,"sourceID":196462,"targetID":196463},"196468":{"id":196468,"sourceID":196458,"targetID":196461},"196469":{"id":196469,"sourceID":196500,"targetID":196451},"196470":{"id":196470,"sourceID":196466,"targetID":196464},"196471":{"id":196471,"sourceID":196460,"targetID":196454},"196472":{"id":196472,"sourceID":196467,"targetID":196466},"196473":{"id":196473,"sourceID":196452,"targetID":196453},"196474":{"id":196474,"sourceID":196454,"targetID":196455},"196475":{"id":196475,"sourceID":196453,"targetID":196459},"196476":{"id":196476,"sourceID":196457,"targetID":196463},"196477":{"id":196477,"sourceID":196461,"targetID":196467},"196478":{"id":196478,"sourceID":196459,"targetID":196458},"196479":{"id":196479,"sourceID":196455,"targetID":196452}},"failureConnectors":{},"unconditionalConnectors":{"196501":{"id":196501,"sourceID":196463,"targetID":196460},"196506":{"id":196506,"sourceID":196497,"targetID":196456}},"trueConnectors":{"196502":{"id":196502,"sourceID":196456,"targetID":196457}},"falseConnectors":{"196503":{"id":196503,"sourceID":196456,"targetID":196462}},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"gigya_table":{"definition":{"name":"gigya_table","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"emailaccounts"},"hours_to_load":{"definition":{"name":"hours_to_load","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"0"},"lastrun":{"definition":{"name":"lastrun","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2020-06-17"},"sql_to_run":{"definition":{"name":"sql_to_run","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""}},"grids":{}},"info":{"name":"Gigya Single Table Load","description":"","type":"ORCHESTRATION","tag":"2d8db739-3de9-4bde-a226-a02354b2b9ac"}}