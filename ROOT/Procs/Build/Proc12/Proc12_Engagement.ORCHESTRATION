{"job":{"components":{"197192":{"id":197192,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-301,"y":-65,"width":32,"height":32,"inputConnectorIDs":[197197],"outputSuccessConnectorIDs":[197198],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Engagement Rollups"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/******************************************************************************************\nProgram           : Engagement Rollups\nAuthor            : Lindsay Timms / Lee Wallis\nClient Name       : Nestle\nJob Number        : HH010177 \nStandard Machine  : Snowflake\nAmendment History : v01 - Split of Engagement data from the original Proc12 process\n******************************************************************************************/\n\n/*\n\t\tTABLES CREATED:\n        live.npp_engagement_scoring_activities\n        \n        TABLES UPDATED:\n        [none]\n*/\n\n/******************************************************************************************\n                             ENGAGEMENT ROLLUPS\n******************************************************************************************/\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '*************************',\n    '*************************',\n    'start of script',\n    CURRENT_TIMESTAMP::timestamp_ntz;  \n\n\n\n---------------------\n--Rate & Review\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_rate_review;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_rate_review \nas\nselect    \n    cid,\n    answer_data_date as activity_date,\n    case when answer in ('3','4','5') then 'Left Positive Rate & Review'\n         when answer in ('1','2') then 'Left Negative Rate & Review'\n         end as activity,\n    qu.brand_id as activity_brand_id\nfrom ${Database}.live.cid_brand_question qu\ninner join ${Database}.live.ref_brand br on qu.brand_id = br.brand_id \n                                   and br.division_id = 12\nwhere question ilike '%overall%';\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_rate_review',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_rate_review;\n\n\n---------------------\n--Sample requests\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_samples;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_samples\nas \nselect distinct   \n    cid,\n    first_value(activity_date) over (partition by cid, activity_brand_id order by activity_date desc) as activity_date,\n    'Requested free product sample' as activity,\n    activity_brand_id\nfrom (\n        select distinct \n            xr.cid,\n            case\n                when trim(ch.campaign_id) = 'NPP04825_1' then (select brand_id from ${Database}.live.ref_brand where brand = 'Go Cat')\n                when trim(ch.campaign_id) in ('NPP05588_1','NPP02921_3','NPP04571') then (select brand_id from ${Database}.live.ref_brand where brand = 'Dentalife')\n            end as activity_brand_id,\n            drop_date as activity_date\n        from ${Database}.db.comms_hist ch\n        inner join ${Database}.live.xref_name_urn xr on trim(ch.name_urn) = trim(xr.name_urn)\n        where trim(programme_id) = 'M' \n        and \n            (\n            trim(campaign_id) = 'NPP04825_1' --Go Cat\n            or trim(campaign_id) = 'NPP05588_1' -- Dentalife\n            or trim(campaign_id) = 'NPP02921_3' --old dentalife\n            or trim(campaign_id) = 'NPP04571' --old dentalife\n            )\n        union all\n        select distinct\n            xr.cid,\n            sm.source_brand_id as activity_brand_id,\n            coalesce(sm.request_date,sm.processing_date) as activity_date\n        from ${Database}.db.npp_sample_requests sm\n        inner join ${Database}.live.xref_name_urn xr on trim(xr.name_urn) = trim(sm.name_urn)\n    ) a\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_samples',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_samples;\n\n\n--Loyalty Scheme\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_loyalty_scheme;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_loyalty_scheme\nas \nselect \n    distinct cid,\n    first_value(activity_date) over (partition by cid, trim(brand) order by activity_date desc) as activity_date,\n    'Joined Loyalty Scheme' as activity,\n    brand_id as activity_brand_id\nfrom (\n        select distinct    \n            xr.cid,\n            first_value(l.source_date) over (partition by xr.cid order by l.source_date desc) as activity_date,\n            'BETA' as brand,\n            (select brand_id from ${Database}.live.ref_brand where brand = 'Beta') as brand_id\n        from     ${Database}.db.npp_beta_pro_plan_loyalty l\n        join         ${Database}.live.xref_name_urn xr on xr.name_urn = 'REG_NPP_LYLTY|'||cast(l.urn as varchar)\n        where     trim(l.source) = 'BETA Loyalty'\n        \n        union all\n        \n        select distinct    \n            xr.cid,\n            first_value(l.source_date) over (partition by xr.cid order by l.source_date desc) as activity_date,\n            'Pro Plan' as brand,\n            (select brand_id from ${Database}.live.ref_brand where brand = 'Pro Plan') as brand_id\n        from     ${Database}.db.npp_beta_pro_plan_loyalty l\n        join         ${Database}.live.xref_name_urn xr on xr.name_urn = 'REG_NPP_LYLTY|'||cast(l.urn as varchar)\n        where     trim(l.source) = 'PRO PLAN Loyalty'\n        \n        union all\n        \n        select    \n            cid,\n            last_date_brand_product as activity_date,\n            case when product_id in (970,1611,1612,1613) then 'Pro Plan'\n                 when product_id = 1631 then 'Felix'\n                 when product_id = 1632 then 'Gourmet'\n                 else 'error' end as brand,\n            case when product_id in (970,1611,1612,1613) then (select brand_id from ${Database}.live.ref_brand where brand = 'Pro Plan')\n                 when product_id = 1631 then (select brand_id from ${Database}.live.ref_brand where brand = 'Felix')\n                 when product_id = 1632 then (select brand_id from ${Database}.live.ref_brand where brand = 'Gourmet')\n                 else cast(null as int) end as brand_id\n        from ${Database}.live.cid_brand_product\n        where product_id in (970,1611,1612,1613,1631,1632)\n        union all\n        select distinct\n            cid,\n            answer_data_date as activity_date,\n            'Your Purina' as brand,\n            (select brand_id from ${Database}.live.ref_brand where brand = 'Your Purina') as brand_id\n        from ${Database}.live.cid_question cq\n        inner join ${Database}.db.ref_question rq on rq.question_id = cq.question_id\n        where rq.question = 'Where do you buy food for your pets?'\n        ) a\n;\n\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_loyalty_scheme',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_loyalty_scheme;\n\n\n--Contact CES\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_careline;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_careline\nas \nselect    \n    cid, \n    activity_date,\n    min(activity) as activity,\n    cast(null as int) as activity_brand_id\nfrom      \n(\n    select    \n        trim(name_urn) as name_urn,\n        cast(contact_date as date) as activity_date,\n        'Contacted CES (without completing survey)' as activity\n    from ${Database}.db.npp_ces_contacts\n    union all \n    select    \n        trim(name_urn) as name_urn,\n        cast(contact_date as date) as activity_date,\n        'Completed CES Survey'\n    from ${Database}.db.npp_ces_contacts_and_surveys\n) cs\ninner join ${Database}.live.xref_name_urn xr on xr.name_urn = cs.name_urn\ngroup by 1, 2;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_careline',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_careline;\n\n\n--Coupons\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_coupons;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_coupons\nas \nselect    \n    cid,\n    print_date as activity_date,\n    case \n        when max(trim(redeemed)) = 'Y' then 'Redeemed Coupon'\n        else 'Downloaded Coupon (but did not redeem)'\n    end as activity,\n    qc.brand_id as activity_brand_id\nfrom ${Database}.db.quotient_coupons qc\ninner join ${Database}.live.xref_name_urn xr on trim(qc.name_urn) = xr.name_urn\nwhere trim(qc.name_urn) > ''\ngroup by 1,2,4\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_coupons',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_coupons;\n\n--THG Purchases\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_thg_purchases;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_thg_purchases\nas\nselect distinct\n    n.cid,\n    order_created as activity_date,\n    'Purchased Product' as activity,\n    n.source_brand_id as activity_brand_id\nfrom (\n        select distinct\n                customer_id,\n                order_created,\n                sum(quantity_ordered * transaction_charge_price_per_unit) as order_total_value\n        from ${Database}.db.npp_thg_trans\n        where lower(trim(order_line_status)) = 'despatched'\n        group by customer_id, order_created\n        ) thg\nleft join ${Database}.live.names n on n.name_urn = 'REG_THG|'||cast(thg.customer_id as varchar)\nwhere order_total_value > 0 --1 or more items were not free packs\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_thg_purchases',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_thg_purchases;\n\n--Competition entry/draw\ndrop table if exists ${Database}.temp.build_rollups_npp_competition_entry;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_competition_entry\nas\nselect    \n    cid,\n    max(drop_date) as activity_date,\n    'Competition entry' activity,\n    (select brand_id from ${Database}.live.ref_brand where brand ilike '%purina masterbrand%') as activity_brand_id\nfrom ${Database}.db.comms_hist cmp\ninner join ${Database}.live.xref_name_urn xr on trim(cmp.name_urn) = xr.name_urn\nwhere trim(cmp.name_urn) > ''\nand cmp.promotion_id = 'NPP07753_2'\ngroup by 1,3,4\nunion all\nselect\n    cid,\n    max(q.data_date) as activity_date,\n    'Competition entry' activity,\n    (select brand_id from ${Database}.live.ref_brand where brand ilike '%purina masterbrand%') as activity_brand_id\nfrom ${Database}.db.question q\ninner join ${Database}.live.xref_name_urn x on x.name_urn = q.name_urn\nwhere question_id = (select question_id from ${Database}.db.ref_question where question = 'Pet Photo Uploader')\ngroup by 1,3,4\nunion all\nselect\n    cid,\n    max(acq.data_date) as activity_date,\n    'Competition entry' activity,\n    (select brand_id from ${Database}.live.ref_brand where brand ilike '%purina masterbrand%') as activity_brand_id\nfrom ${Database}.db.names_attributes acq\ninner join ${Database}.live.xref_name_urn x on x.name_urn = acq.name_urn\nwhere REGISTRATION_CAMPAIGN = 'NBS - UK - Quiz - Purina Summer Special - long form - chrono'\ngroup by 1,3,4\nunion all\nselect\n    cid,\n    max(na.data_date) as activity_date,\n    'Competition entry' activity,\n    (select brand_id from ${Database}.live.ref_brand where brand ilike '%purina masterbrand%') as activity_brand_id\nfrom ${Database}.db.names na\ninner join ${Database}.live.xref_name_urn x on x.name_urn = na.name_urn\nwhere na.source = 'NPP09393_BT_SS_QUALIFIO_EXIST'\ngroup by 1,3,4;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_competition_entry',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_competition_entry;\n\n\n--Pet Photo Upload\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_photo_upload;\ncreate or replace table ${Database}.temp.build_rollups_npp_engagement_photo_upload\nas\nselect\n    cid,\n    max(q.data_date) as activity_date,\n    'User Generated Content' activity,\n    (select brand_id from ${Database}.live.ref_brand where brand ilike '%masterbrand%') as activity_brand_id\nfrom ${Database}.db.question q\ninner join ${Database}.live.xref_name_urn x on x.name_urn = q.name_urn\nwhere question_id = (select question_id from ${Database}.db.ref_question where question = 'Pet Photo Uploader')\ngroup by 1,3,4\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_photo_upload',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_photo_upload;\n\n\n--Casting a vote\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_voters;\ncreate or replace table ${Database}.temp.build_rollups_npp_engagement_voters\nas\nselect\n    cid,\n    max(q.data_date) as activity_date,\n    'Cast a Vote' activity,\n    (select brand_id from ${Database}.live.ref_brand where brand ilike '%masterbrand%') as activity_brand_id\nfrom ${Database}.db.question q\ninner join ${Database}.live.xref_name_urn x on x.name_urn = q.name_urn\nwhere question_id = (select question_id from ${Database}.db.ref_question where question = 'Pet Photo Voter')\ngroup by 1,3,4\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_voters',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_voters;\n\n\n--Reconsent\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_reconsent;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_reconsent\nas \nselect    \n    xr.cid,\n    dp.data_date as activity_date,\n    'Reconsent' as activity,\n    cast(null as int) as activity_brand_id\nfrom ${Database}.db.names_dp dp\nleft join ${Database}.live.xref_name_urn xr on xr.name_urn = trim(dp.name_urn)\nwhere trim(dp.source) in ('RESP_ADE_10|232','RESP_ADE_10|234','RESP_ADE_10|253','RESP_ADE_10|259','RESP_ADE_10|274','RESP_ADE_10|275','RESP_ADE_10|317')\nand dp_emailable = 1\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_reconsent',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_reconsent;\n\n\n--registered CIAM account\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_CIAM_accounts;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_CIAM_accounts\nas\nselect distinct\ncid\n,data_date as activity_date\n,case when rownum = 1 then 'Registered New CIAM Account' \n         when rownum > 1 then 'Updated CIAM Account'\n         end as activity\n         ,source_brand_id\nfrom\n(\nselect\n    cid\n    ,nm.data_date\n    ,nm.source_brand_id\n    ,row_number() over (partition by cid,nm.data_date order by nm.data_date asc,nm.source_brand_id asc) as rownum\nfrom ${Database}.live.names nm\ninner join ${Database}.db.names_preference np on trim(np.name_urn) = nm.name_urn\nwhere nm.source = 'REG_GIG' --have a gigya account\nand data_controller_id = 5 --gigya account is for a Purina brand\nand lower(nm.source_file) not regexp '.*json.*' --account was not migrated\nand lower(np.source_file) not regexp '.*json.*'\n) t\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_CIAM_accounts',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_CIAM_accounts;\n\n\n--Registered to Growing Pup\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_GP_registrants;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_GP_registrants\nas\n\t\tselect distinct cid, first_date_brand as activity_date,'Joined Growing Pup' as activity,'138' as activity_brand_id  from ${Database}.live.cid_brand \n\t\t\t\t\t  where brand_id = 138 and activity_date is not NULL and brand_preference = 1  \n\t\t\t\t\t  group by 1,2\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_GP_registrants',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_GP_registrants;\n\n--Registered to Kitten Code\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_KC_registrants;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_KC_registrants\nas\n    select distinct cid, first_date_brand as activity_date,'Joined Kitten Code' as activity,'143' as activity_brand_id  from ${Database}.live.cid_brand \n                  where brand_id = 143 and activity_date is not NULL and brand_preference = 1  \n                  group by 1,2\n\t\t\t\t  ;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_KC_registrants',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_KC_registrants;\n\n--Cashback\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_cashback;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_cashback\nas\n    select distinct cid, data_date as activity_date,'Cashback' as activity,source_brand_id as activity_brand_id  from ${Database}.live.names \n                   where (NAME_URN ilike '%reg_hashting%' or NAME_URN ilike '%reg_shopm%')  \n                   group by 1,2,3,4\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_cashback',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_cashback;\n\n--Your Purina\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_your_purina;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_your_purina\nas\n  select distinct cid, answer_data_date as ACTIVITY_DATE,'Joined Your Purina' as activity,\n  (select brand_id from ${Database}.live.ref_brand where brand ilike '%masterbrand%') as activity_brand_id\n                        from ${Database}.live.cid_question cq\n                        inner join ${Database}.db.ref_question rq on rq.question_id = cq.question_id\n                        where rq.question = 'Where do you buy food for your pets?' \n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_your_purina',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_your_purina;\n\n\n--Your Purina Survey clicks\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_your_purina_survey;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_your_purina_survey\nas\n  select cid, cast(max(event_timestamp) as date) as ACTIVITY_DATE,'Completed Survey' as activity,\n\t\t(select brand_id from ${Database}.live.ref_brand where brand ilike '%your purina%') as activity_brand_id\n    from ${Database}.live.adestra_events ae\n\tjoin ${Database}.db.ref_your_purina_survey_lookup ref on  ae.adestra_campaign_id = ref.campaign_id and ae.link_url = ref.link_url \n    where  event_name ilike '%click%'\ngroup by 1;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_your_purina_survey',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_your_purina_survey;\n\n\n--Updated Pet Details\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_updated_pet_details;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_updated_pet_details\nas\nselect cid, pet_data_date as ACTIVITY_DATE,'Updated Pet Details' as activity,\n(select brand_id from ${Database}.live.ref_brand where brand ilike '%masterbrand%') as activity_brand_id\nfrom ${Database}.live.cid_pet   group by 1,2\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_updated_pet_details',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_updated_pet_details;\n\n\n--Completed Survey\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_survey;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_survey\nas \nselect distinct \n    cid,\n    data_date as activity_date,\n    'Completed Survey' as activity,\n    source_brand_id as activity_brand_id\nfrom ${Database}.live.names\nwhere collate(name_urn,'') ilike 'RESP_GP%'\nunion all\nselect distinct \n    cid,\n    cast(event_timestamp as date) as activity_date,\n    'Completed Survey' as activity,\n    (select brand_id from ${Database}.db.ref_brand where brand ilike '%masterbrand') as activity_brand_id\nfrom ${Database}.live.adestra_events\nwhere event_name = 'GA Survey';\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_survey',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_survey;\n\n\n-- Registration Opt In\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_optin;\ncreate table ${Database}.temp.build_rollups_npp_engagement_optin\nas\nselect \ncid,\ndp_date as activity_date,cast(null as int) as activity_brand_id,'Opt In' as activity\nfrom ${Database}.db.names_dp nd\njoin ${Database}.live.names nm\non nd.name_urn = nm.name_urn\nwhere data_controller_id = 5 and dp_emailable = 1 group by 1,2;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_optin',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_optin;\n\n\n--Registration\n/* NOTE : THIS DOESN'T SEEM TO BE USED ANYWHERE  -- NEEDS INVESTIGATION\t\t************************************/\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_registered_to_purina;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_registered_to_purina\nas \nselect distinct\n    cbb.cid,\n    first_value(cbb.first_date_brand) over (partition by cbb.cid order by cbb.first_date_brand asc) as activity_date,\n    'Registration' as activity,\n    first_value(cbb.brand_id) over (partition by cbb.cid order by cbb.first_date_brand asc) as activity_brand_id\nfrom ${Database}.temp.build_rollups_cid_brand_base cbb\ninner join ${Database}.live.ref_business_unit_brand rbu on cbb.brand_id = rbu.brand_id\nwhere rbu.business_unit_id in (select business_unit_id from ${Database}.live.ref_business_unit where collate(business_unit,'') ilike 'Nestl_ Purina Petcare (UK) Ltd')\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_registered_to_purina',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_registered_to_purina;\n\n\n--Email engagement (prep)\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_adestra_prep;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_adestra_prep\nas\nselect     cid,\n    adestra_campaign_id,\n    activity_date,\n    event_name,\n    case when lower(collate(event_name,'')) regexp '.*click.*' and link_type is null and split_part(link_label, '|', 1) = 'A' then 'Clicked for Advice'\n         when lower(collate(event_name,'')) regexp '.*click.*' and link_type is null and split_part(link_label, '|', 1) = 'Buy_now' then 'Clicked Buy Now'\n         when lower(collate(event_name,'')) regexp '.*click.*' and link_type is null and split_part(link_label, '|', 1) = 'C' then 'Clicked Coupon'\n         when lower(collate(event_name,'')) regexp '.*click.*' and link_type is null and split_part(link_label, '|', 1) = 'DC' and updated_ciam = 0 then 'Clicked Update Details'\n         when lower(collate(event_name,'')) regexp '.*click.*' and link_type is null and split_part(link_label, '|', 1) = 'I' then 'Clicked for Info'\n         when lower(collate(event_name,'')) regexp '.*click.*' and link_type is null and split_part(link_label, '|', 1) = 'P' then 'Clicked Product'\n         when lower(collate(event_name,'')) regexp '.*click.*' and link_type is null and split_part(link_label, '|', 1) = 'PDC' then 'Clicked PDC'\n         when lower(collate(event_name,'')) regexp '.*click.*' and link_type is null and split_part(link_label, '|', 1) = 'R' then 'Clicked Reconsent'\n         when lower(collate(event_name,'')) regexp '.*click.*' and link_type is null and split_part(link_label, '|', 1) = 'S' then 'Clicked Social'\n         when lower(collate(event_name,'')) regexp '.*click.*' and link_type is null and split_part(link_label, '|', 1) = 'O' then 'Clicked Other'\n         when lower(collate(event_name,'')) regexp '.*click.*' and link_type is not null then link_type\n         when lower(collate(event_name,'')) regexp '.*read.*' then 'Opened email (no click)'\n         else 'Clicked Other' end as link_type ,\n    brand_id\nfrom (\n        select distinct     \n            ae.cid, \n            ae.adestra_campaign_id,\n            cast(ae.event_timestamp as date) as activity_date,\n            ae.event_name,\n            ae.link_label,\n            trim(lt.link_type) as link_type,\n            case when c.cid is not null \n                 and lower(ae.event_name) regexp '.*click.*' \n                 and (trim(lt.link_type) = 'Update Details' or (lt.link_type is null and split_part(ae.link_label, '|', 1) = 'DC'))\n                 then 1 else 0 end as updated_ciam, --only get points for clicking if they didn't register or update CIAM details\n            case when atl.adestra_campaign_id is null then cast(null as int) else rb.brand_id end as brand_id\n        from ${Database}.live.adestra_events ae \n        left join ${Database}.db.ref_link_label_type lt on lower(ae.link_url) = lower(trim(lt.link_url))\n        left join ${Database}.temp.build_rollups_npp_engagement_CIAM_accounts c on c.cid = ae.cid \n                                                                                   and c.activity_date = cast(ae.event_timestamp as date)\n        left join ${Database}.db.adestra_tag_lookup atl on trim(atl.adestra_campaign_id) = ae.adestra_campaign_id\n        left join ${Database}.live.ref_brand rb on rb.brand = atl.brand\n        where ae.campaign_id ilike 'npp%'\n            and lower(ae.event_name) regexp '.*click.*|.*open.*|.*read.*|.*shared.*|.*submit.*'\n            and lower(ae.link_url) not regexp '.*unsub.*'\n    ) a\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_adestra_prep',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_adestra_prep;\n\n--Email engagement (post prep)\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_adestra;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_engagement_adestra\nas\nselect distinct \n    adestra_campaign_id,  \n    cid, \n    activity_date,\n    first_value\n        (\n            case\n                when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Buy Now' then 'Clicked Buy Now'\n                when lower(event_name) regexp '.*click.*' and link_type = 'Clicked PDC' then 'Clicked PDC'\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Product' then 'Clicked Product'\n                when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Reconsent' then 'Clicked Reconsent'  \n                when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Coupon' then 'Clicked Coupon'  \n\t\t\t\twhen lower(event_name) regexp '.*click.*' and link_type in ('Clicked for Info','Clicked Social','Clicked for Advice','Clicked Update Details','Clicked Other') then 'Clicked Generic'\n                when lower(event_name) regexp '.*click.*|.*submit.*' then 'Clicked Other'\n                when lower(event_name) regexp '.*read.*' then 'Opened email (no click)'\n            end\n        ) over\n        (\n            partition by cid, adestra_campaign_id\n            order by \n                case\n                    when lower(event_name) regexp '.*click.*' and link_type = 'Clicked PDC' then 1\n                    when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Buy Now' then 2\n                    when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Product' then 3\n                    when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Coupon' then 4\n\t\t\t\t\twhen lower(event_name) regexp '.*click.*' and link_type in ('Clicked for Info','Clicked Social','Clicked for Advice','Clicked Update Details','Clicked Other') then 5\n                    when lower(event_name) regexp '.*click.*|.*submit.*' and link_type = 'Clicked Other' then 6\n                    when lower(event_name) regexp '.*read.*' then 7\n                    when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Reconsent' then 8\n                end\n        ) as activity,\n    first_value(brand_id)\n          over(\n             partition by cid, adestra_campaign_id\n             order by \n                case\n                    when lower(event_name) regexp '.*click.*' and link_type = 'Clicked PDC' then 1\n                    when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Buy Now' then 2\n                    when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Product' then 3\n                    when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Coupon' then 4\n\t\t\t\t\twhen lower(event_name) regexp '.*click.*' and link_type in ('Clicked for Info','Clicked Social','Clicked for Advice','Clicked Update Details','Clicked Other') then 5\n                    when lower(event_name) regexp '.*click.*|.*submit.*' and link_type = 'Clicked Other' then 6\n                    when lower(event_name) regexp '.*read.*' then 7\n                    when lower(event_name) regexp '.*click.*' and link_type = 'Clicked Reconsent' then 8\n                end\n        ) as activity_brand_id  \nfrom ${Database}.temp.build_rollups_npp_engagement_adestra_prep\n;\n\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_adestra',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_adestra;\n\n-- Generic clicks/open, one per month per campaign\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_adestra_generic_clicks;\ncreate or replace table ${Database}.temp.build_rollups_npp_engagement_adestra_generic_clicks as\nselect adestra_campaign_id, concat(year(activity_date),month(activity_date)) as year_month,cid,activity,activity_brand_id,max(activity_date) as activity_date\nfrom ${Database}.temp.build_rollups_npp_engagement_adestra\nwhere activity in \n('Clicked Generic','Opened email (no click)')\ngroup by 1,2,3,4,5;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_adestra_generic_clicks',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_adestra_generic_clicks;\n\n-- Non generic clicks - more points allowed\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_adestra_nongeneric_clicks;\ncreate or replace table ${Database}.temp.build_rollups_npp_engagement_adestra_nongeneric_clicks as\nselect adestra_campaign_id, activity,cid,activity_brand_id,activity_date\nfrom ${Database}.temp.build_rollups_npp_engagement_adestra\nwhere activity not in \n('Clicked Generic','Opened email (no click)');\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_engagement_adestra_nongeneric_clicks',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_engagement_adestra_nongeneric_clicks;\n\n--Qualifio kitten code campaign\n--drop table if exists ${Database}.temp.build_rollups_npp_Qualifio_participation;\n--create table ${Database}.temp.build_rollups_npp_Qualifio_participation\n--as\n--select distinct   \n--    cid,\n--    first_value(na.data_date) over(partition by cid, REGISTRATION_CAMPAIGN order by na.data_date asc) as activity_date,\n--    'Qualifio participation' as activity,\n--   n.source_brand_id as activity_brand_id\n--from ${Database}.db.names_attributes na\n--inner join ${Database}.db.names n on n.name_urn = na.name_urn and n.data_date = na.data_date\n--inner join ${Database}.live.xref_name_urn xr on trim(n.name_urn) = trim(xr.name_urn)\n--where na.source = 'REG_QUALIFIO'\n--and n.SOURCE_DATA_CONTROLLER_ID = (select data_controller_id from ${Database}.db.ref_data_controller where data_controller like 'Nestl_ Purina Petcare (UK) Ltd')  \n--;\n\n\n--insert into ${Database}.db.build_log \n--select \n--    'nestle_engagement_rollups',\n--    '${Database}.temp.build_rollups_npp_Qualifio_participation',\n--    'total records',\n--    cast(count(*) as varchar),\n--    CURRENT_TIMESTAMP\n--from ${Database}.temp.build_rollups_npp_Qualifio_participation;\n\n\n--Pet avatar creation\ndrop table if exists ${Database}.temp.build_rollups_npp_pet_avatar_creation;\nCREATE OR REPLACE TABLE ${Database}.temp.build_rollups_npp_pet_avatar_creation\nas\nselect    \n    cid,\n    max(to_date(left(user_date_created,10),'YYYY-MM-DD')) as activity_date,\n    'Pet Avatar Creation' activity,\n    (select brand_id from ${Database}.live.ref_brand where brand ilike '%masterbrand%') as activity_brand_id\nfrom ${Database}.db.npp_pet_avatar_details ppa\ninner join ${Database}.live.xref_name_urn xr on trim(ppa.name_urn) = trim(xr.name_urn)\nwhere trim(ppa.name_urn) > ''\ngroup by 1,3,4\n;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.temp.build_rollups_npp_pet_avatar_creation',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.temp.build_rollups_npp_pet_avatar_creation;\n\n\n--Score rollup\ndrop table if exists ${Database}.live.npp_engagement_scoring_activities;\nCREATE OR REPLACE TABLE ${Database}.live.npp_engagement_scoring_activities\nas\nselect    \n    cid,\n    activity_date,\n    activity,\n    activity_brand_id,\n    (((1 / sqrt((datediff(day,activity_date,current_date())/60)+1) * 15 ) + 1)) as   recency_multiplier,\n    case\n        when activity = 'Purchased Product' then 40\n\t\twhen activity = 'Left Positive Rate & Review' then 40\n\t\twhen activity = 'Left Negative Rate & Review' then 40\n\t\twhen activity = 'Joined Your Purina' then 40\n        when activity = 'Pet Avatar Creation' then 40\n        when activity = 'Completed Survey' then 30\n        when activity = 'Clicked PDC' then 30\n\t\twhen activity = 'Clicked Update Details' then 30\n        when activity = 'User Generated Content' then 30\n\t\twhen activity = 'Contacted CES (without completing survey)' then 12\n        when activity = 'Joined Growing Pup' then 12\n\t\twhen activity = 'Joined Kitten Code' then 12\n        when activity = 'Clicked Buy Now' then 12\n\t\twhen activity = 'Updated Pet Details' then 12\n\t\twhen activity = 'Redeemed Coupon' then 12\n\t\twhen activity = 'Cashback' then 12\n\t\twhen activity = 'Requested free product sample' then 12\n\t\twhen activity = 'Joined Loyalty Scheme' then 12\n\t\twhen activity = 'Registered New CIAM Account' then 12\n\t\twhen activity = 'Updated CIAM Account' then 12\n        when activity = 'Completed CES Survey' then 12\n\t\twhen activity = 'Downloaded Coupon (but did not redeem)' then 12\n\t\twhen activity = 'Reconsent' then 12\n\t\twhen activity = 'Clicked Reconsent' then 12\n\t\twhen activity = 'Registration' then 6\n\t\twhen activity = 'Opt In' then 6\n\t\twhen activity = 'Clicked Generic' then 6\n        when activity = 'Cast a Vote' then 6\t\t\t\t\t\t\t\t\t\t\t\n        when activity = 'Competition entry' then 2\n        when activity = 'Opened email (no click)' then 1\n    end as base_score\nfrom      \n(   select cid, activity_date, activity, source_brand_id as activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_CIAM_accounts\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_thg_purchases\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_rate_review\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_loyalty_scheme\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_careline\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_samples\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_coupons\n \tunion all\n\tselect cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_competition_entry\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_adestra_nongeneric_clicks\n\tunion all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_adestra_generic_clicks\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_GP_registrants\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_reconsent\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_survey\n\tunion all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_pet_avatar_creation\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_photo_upload\n    union all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_voters \n\tunion all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_KC_registrants\n\tunion all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_cashback\n\tunion all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_your_purina\n\tunion all\n\tselect cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_your_purina_survey\n\tunion all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_updated_pet_details\n\tunion all\n    select cid, activity_date, activity, activity_brand_id\n    from ${Database}.temp.build_rollups_npp_engagement_optin\n) activities\n;\n\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '${Database}.live.npp_engagement_scoring_activities',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.live.npp_engagement_scoring_activities;\n\n\n/******************************************************************************************\n                                       FINISH PROC\n******************************************************************************************/\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_engagement_rollups',\n    '*************************',\n    '*************************',\n    'end of script',\n    CURRENT_TIMESTAMP::timestamp_ntz;  \n  \n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197193":{"id":197193,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-432,"y":-64,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[197197],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197199":{"id":197199,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-160,"y":-64,"width":32,"height":32,"inputConnectorIDs":[197198],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Drop Engagement Temp Tables"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/******************************************************************************************\nProgram           : Drop Engagement Rollups Temp Tables\nAuthor            : Lee Wallis\nClient Name       : Nestle\nJob Number        : HH010177 \nStandard Machine  : Snowflake\nAmendment History : v01 - Split of Engagement data from the original Proc12 process\n******************************************************************************************/\n\n/******************************************************************************************\n                           DROP ENGAGEMENT ROLLUPS TEMP TABLES\n******************************************************************************************/\n\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_CIAM_accounts;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_thg_purchases;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_rate_review;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_loyalty_scheme;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_careline;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_samples;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_coupons;\ndrop table if exists ${Database}.temp.build_rollups_npp_competition_entry;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_adestra_nongeneric_clicks;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_adestra_generic_clicks;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_GP_registrants;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_reconsent;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_survey;\ndrop table if exists ${Database}.temp.build_rollups_npp_pet_avatar_creation;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_photo_upload;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_voters ;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_KC_registrants;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_cashback;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_your_purina;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_your_purina_survey;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_updated_pet_details;\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_optin;\n\n--not used -NEEDS INVESTIGATING\ndrop table if exists ${Database}.temp.build_rollups_npp_engagement_registered_to_purina;\n--drop table if exists ${Database}.temp.build_rollups_npp_Qualifio_participation;"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"197198":{"id":197198,"sourceID":197192,"targetID":197199}},"failureConnectors":{},"unconditionalConnectors":{"197197":{"id":197197,"sourceID":197193,"targetID":197192}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"197194":{"id":197194,"x":-56,"y":-80,"width":360,"height":75,"text":"This identifies activity within the data that is compiled to create the Purina Engagement scoring.\n\nSee top rows of Rollups SQL script for list of tables created.\n","colour":"00ce4f"}},"variables":{},"grids":{}},"info":{"name":"Proc12_Engagement","description":"Proc12 Engagement","type":"ORCHESTRATION","tag":"8a0b3a36-6e21-465a-b1c1-8d2beea44cf2"}}