{"job":{"components":{"197180":{"id":197180,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-432,"y":-64,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[197187],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197181":{"id":197181,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-301,"y":-65,"width":32,"height":32,"inputConnectorIDs":[197187],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Questions Rollups"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/******************************************************************************************\nProgram           : Questions Rollups\nAuthor            : Lindsay Timms / Lee Wallis\nClient Name       : Nestle\nJob Number        : HH010177 \nStandard Machine  : Snowflake\nAmendment History : v01 - Split of Question data from the original Proc12 process\n******************************************************************************************/\n\n/*\n\t\tTABLES CREATED:\n        live.cid_question\n        live.cid_brand_question\n        \n        TABLES UPDATED:\n        [none]\n*/\n\n/******************************************************************************************\n                                 QUESTIONS ROLLUPS\n******************************************************************************************/\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_questions_rollups',\n    '*************************',\n    '*************************',\n    'start of script',\n    CURRENT_TIMESTAMP::timestamp_ntz;  \n\n\n--cid questions\ndrop table if exists ${Database}.live.cid_question ;  \nCREATE OR REPLACE TABLE ${Database}.live.cid_question \nas\nselect distinct\n    nm.cid,\n    qu.question_id,\n    trim(rqu.question) as question,\n    first_value(lower(trim(qu.answer))) over \n        (\n            partition by nm.cid, qu.question_id\n            order by \n                qu.data_date desc nulls last,\n                qu.source_date desc nulls last\n        ) as answer,\n    first_value(qu.data_date) over \n        (\n            partition by nm.cid, qu.question_id\n            order by \n                qu.data_date desc nulls last,\n                qu.source_date desc nulls last\n        ) as answer_data_date       \nfrom ${Database}.live.names nm    \ninner join ${Database}.db.question qu on nm.name_urn = trim(qu.name_urn)\ninner join ${Database}.db.ref_question rqu on qu.question_id = rqu.question_id\nwhere qu.data_date > add_months(current_date, -60) --now only using data from the last 5 years for questions\n    and qu.brand_id is null;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_questions_rollups',\n    '${Database}.live.cid_question',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.live.cid_question;\n\n\n--brand questions\ndrop table if exists ${Database}.live.cid_brand_question ;  \nCREATE OR REPLACE TABLE ${Database}.live.cid_brand_question \nas\nselect distinct\n    nm.cid,\n    qu.brand_id,\n    qu.question_id,\n    trim(rqu.question) as question, \n    first_value(lower(trim(qu.answer))) over \n        (\n            partition by nm.cid, qu.brand_id, qu.question_id\n            order by \n                qu.data_date desc nulls last,\n                qu.source_date desc nulls last\n        ) as answer,\n    first_value(qu.data_date) over \n        (\n            partition by nm.cid, qu.brand_id, qu.question_id\n            order by \n                qu.data_date desc nulls last,\n                qu.source_date desc nulls last\n        ) as answer_data_date    \nfrom ${Database}.live.names nm    \ninner join ${Database}.db.question qu on nm.name_urn = trim(qu.name_urn)\ninner join ${Database}.db.ref_question rqu on qu.question_id = rqu.question_id\nwhere qu.data_date > add_months(current_date, -60) --now only using data from the last 5 years for questions\n    and qu.brand_id is not null;\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_questions_rollups',\n    '${Database}.live.cid_brand_question',\n    'total records',\n    cast(count(*) as varchar),\n    CURRENT_TIMESTAMP::timestamp_ntz \nfrom ${Database}.live.cid_brand_question;\n\n\n/******************************************************************************************\n                                       FINISH PROC\n******************************************************************************************/\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_questions_rollups',\n    '*************************',\n    '*************************',\n    'end of script',\n    CURRENT_TIMESTAMP::timestamp_ntz;  \n  \n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{},"unconditionalConnectors":{"197187":{"id":197187,"sourceID":197180,"targetID":197181}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"197182":{"id":197182,"x":-173,"y":-92,"width":360,"height":75,"text":"This creates tables of questions and answers at both Consumer and Brand levels for use in campaigns.\n\nSee top rows of Rollups SQL script for list of tables created.\n","colour":"00ce4f"}},"variables":{},"grids":{}},"info":{"name":"Proc12_Questions","description":"Proc12 Questions","type":"ORCHESTRATION","tag":"83d81d6e-5489-474a-ac9d-8f592208e817"}}