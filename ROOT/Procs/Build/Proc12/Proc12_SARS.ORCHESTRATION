{"job":{"components":{"197205":{"id":197205,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-432,"y":-64,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[197204],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197206":{"id":197206,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-301,"y":-65,"width":32,"height":32,"inputConnectorIDs":[197204],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"SARs Rollups"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/******************************************************************************************\nProgram           : SARs Rollups\nAuthor            : Lindsay Timms / Lee Wallis\nClient Name       : Nestle\nJob Number        : HH010177 \nStandard Machine  : Snowflake\nAmendment History : v01 - Split of SAR data from the original Proc12 process\n******************************************************************************************/\n\n/******************************************************************************************\n                                   SARS ROLLUPS\n******************************************************************************************/\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_sars_rollups',\n    '*************************',\n    '*************************',\n    'start of script',\n    CURRENT_TIMESTAMP::timestamp_ntz;  \n\n\n\n--collect recent new SARs\ndrop table if exists ${Database}.temp.build_todays_sars;\ncreate or replace table ${Database}.temp.build_todays_sars\nas\nselect distinct\n    nm.cid,\n    first_value(nm.name_urn) over(partition by nm.cid, s.email order by nm.data_date nulls last) as urn,\n    s.supp_urn,\n    s.email,\n    s.sar_source_date\nfrom (\n         select\n             supp_urn,\n             email1 as email,\n             source_date as sar_source_date\n         from ${Database}.db.supps_sar\n         where supp_urn not in (select supp_urn from ${Database}.db.sar_hist_contact)\n             and source_date >= current_date-3 --it's a rolling record of current SARs\n             and trim(email1) > ''\n         union all\n         select\n             supp_urn,\n             email2 as email,\n             source_date as SAR_source_date\n         from ${Database}.db.supps_sar\n         where supp_urn not in (select supp_urn from ${Database}.db.sar_hist_contact)\n             and source_date >= current_date-3 --it's a rolling record of current SARs\n             and trim(email2) > ''\n     ) s\nleft join ${Database}.live.names nm on lower(trim(s.email)) = lower(trim(nm.email));\n\n\ndelete\nfrom ${Database}.db.sar_hist_contact\nwhere sar_source_date < current_date - 7;\n\n\ninsert into ${Database}.db.sar_hist_contact\n(\n    supp_urn,\n    urn,\n    name_urn,\n    date_of_receipt,\n    title,\n    firstname,\n    lastname,\n    job_title,\n    company,\n    address_line_1,\n    address_line_2,\n    address_line_3,\n    address_line_4,\n    city,\n    county,\n    post_code,\n    country,\n    date_of_birth,\n    gender,\n    work_phone,\n    home_phone,\n    mobile_phone,\n    email,\n    source,\n    data_controller,\n    source_brand,\n    sar_source_date\n)\nselect distinct\n    s.supp_urn,\n    s.urn,\n    nm.name_urn,\n    nm.data_date,\n    nm.title,\n    nm.firstname,\n    nm.lastname,\n    nm.job_title,\n    nm.company,\n    nm.add1,\n    nm.add2,\n    nm.add3,\n    nm.add4,\n    nm.city,\n    nm.state,\n    nm.postcode,\n    nm.country,\n    nm.dob,\n    nm.gender,\n    nm.phone_work,\n    nm.phone_home,\n    nm.phone_mobile,\n    nm.email,\n    nm.source,\n    dc.data_controller,\n    br.brand,\n    s.sar_source_date\nfrom ${Database}.temp.build_todays_sars s\ninner join ${Database}.live.xref_name_urn xref on s.cid = xref.cid\ninner join ${Database}.live.names nm on trim(xref.name_urn) = trim(nm.name_urn)\ninner join ${Database}.live.ref_data_controller dc on nm.source_data_controller_id = dc.data_controller_id\nleft join ${Database}.live.ref_brand br on nm.source_brand_id = br.brand_id;\n\n\ndelete\nfrom ${Database}.db.sar_hist_dp\nwhere sar_source_date < current_date - 7;\n\n\ninsert into ${Database}.db.sar_hist_dp\n(\n    supp_urn,\n    urn,\n    name_urn,\n    opt_in_mail_comms,\n    opt_in_email_comms,\n    opt_in_newsletter,\n    opt_in_date,\n    opt_in_business_unit,\n    opt_in_brand,\n    source,\n    opt_in_statement,\n    sar_source_date\n)\nselect\n    s.supp_urn,\n    s.urn,\n    dp.name_urn,\n    case when dp.dp_mailable = 1 then 'Yes' when dp.dp_mailable = 0 then 'No' else '' end,\n    case when dp.dp_emailable = 1 then 'Yes' when dp.dp_emailable = 0 then 'No' else '' end,\n    case when dp.dp_newsletter = 1 then 'Yes' when dp.dp_newsletter = 0 then 'No' else '' end,\n    dp.dp_date,\n    dc.data_controller,\n    br.brand,\n    dp.source,\n    rdp.dp_statement,\n    s.sar_source_date\nfrom ${Database}.temp.build_todays_sars s\ninner join ${Database}.live.xref_name_urn xref on s.cid = xref.cid\ninner join ${Database}.db.names_dp dp on trim(xref.name_urn) = trim(dp.name_urn)\ninner join ${Database}.live.ref_data_controller dc on dp.data_controller_id = dc.data_controller_id\nleft join ${Database}.live.ref_brand br on dp.brand_id = br.brand_id\nleft join ${Database}.db.ref_dp rdp on trim(dp.source) = trim(rdp.source)\n                              and dp.data_controller_id = rdp.data_controller_id\n                              and coalesce(dp.brand_id,0) = coalesce(rdp.brand_id,0)\n                              and (dp.data_date >= rdp.start_date or rdp.start_date is null)\n                              and (dp.data_date <= rdp.end_date or rdp.end_date is null);\n\n\ndelete\nfrom ${Database}.db.sar_hist_comms\nwhere sar_source_date < current_date - 7;\n\n\ninsert into ${Database}.db.sar_hist_comms\n(\n    supp_urn,\n    urn,\n    name_urn,\n    email,\n    send_date,\n    brand_opted_in_to,\n    campaign_business_unit,\n    campaign_brand,\n    programme_description,\n    campaign_description,\n    promotion_description,\n    cell_description,\n    pack_description,\n    destination,\n    sar_source_date\n)\nselect\n    s.supp_urn,\n    s.urn,\n    ch.name_urn,\n    ch.email,\n    ch.drop_date,\n    br.brand,\n    dc.data_controller,\n    br1.brand,\n    chl.programme_description,\n    chl.campaign_id||' '||chl.campaign_description,\n    chl.promotion_id||' '||chl.promotion_description,\n    chl.cell_id||' '||chl.cell_description,\n    chl.pack_id||' '||chl.pack_description,\n    chl.final_destination,\n    s.sar_source_date\nfrom ${Database}.temp.build_todays_sars s\ninner join ${Database}.live.xref_name_urn xref on s.cid = xref.cid\ninner join ${Database}.db.comms_hist ch on trim(xref.name_urn) = trim(ch.name_urn)\ninner join ${Database}.db.comms_hist_lookup chl on trim(ch.programme_id) = trim(chl.programme_id)\n                                          and trim(ch.campaign_id) = trim(chl.campaign_id)\n                                          and trim(ch.promotion_id) = trim(chl.promotion_id)\n                                          and trim(ch.cell_id) = trim(chl.cell_id)\n                                          and trim(ch.pack_id) = trim(chl.pack_id)\nleft join ${Database}.live.ref_brand br on ch.data_brand_id = br.brand_id\nleft join ${Database}.live.ref_data_controller dc on chl.data_controller_id = dc.data_controller_id\nleft join ${Database}.live.ref_brand br1 on chl.brand_id = br1.brand_id;\n\n\ninsert into ${Database}.db.sar_hist_comms --sma and nestle comms all go into the same tab in the report\n(\n    supp_urn,\n    urn,\n    name_urn,\n    email,\n    send_date,\n    brand_opted_in_to,\n    campaign_business_unit,\n    campaign_brand,\n    programme_description,\n    campaign_description,\n    promotion_description,\n    cell_description,\n    pack_description,\n    destination,\n    sar_source_date\n)\nselect\n    s.supp_urn,\n    s.urn,\n    s.urn,\n    s.email,\n    ch.communication_date,\n    'SMA',\n    'NestlÃ© UK Ltd',\n    'SMA',\n    chl.programme_name,\n    cast(chl.campaign_id as varchar)||' '||chl.campaign_name,\n    cast(chl.promotion_id as varchar)||' '||chl.promotion_name,\n    cast(chl.cell_id as varchar)||' '||chl.cell_name,\n    cast(chl.pack_id as varchar)||' '||chl.pack_name,\n    'Adestra/Pragmatica',\n    s.sar_source_date\nfrom ${Database}.temp.build_todays_sars s\ninner join ${Database}.live.sma_comms_hist ch on s.cid = ch.cid\nleft join ${Database}.live.sma_comms_hist_lookup chl on trim(ch.pack_id) = trim(chl.pack_id);\n\n\ndelete\nfrom ${Database}.db.sar_hist_pets\nwhere sar_source_date < current_date - 7;\n\n\ninsert into ${Database}.db.sar_hist_pets\n(\n    supp_urn,\n    name_urn,\n    pet_name,\n    pet_type,\n    pet_age_years,\n    pet_age_months,\n    pet_dob,\n    pet_birth_month,\n    pet_birth_year,\n    pet_age_weeks,\n    pet_indoor_outdoor,\n    pet_size,\n    pet_breed,\n    pet_colour,\n    pet_weight,\n    pet_gender,\n    pet_life_stage,\n    pet_bodyshape,\n    pet_lifestyle,\n    pet_deceased,\n    pet_kennel,\n    source,\n    source_date,\n    sar_source_date\n)\nselect\n    s.supp_urn,\n    p.name_urn,\n    p.pet_name,\n    p.pet_type,\n    p.pet_age_years,\n    p.pet_age_months,\n    p.pet_dob,\n    p.pet_birth_month,\n    p.pet_birth_year,\n    p.pet_age_weeks,\n    p.pet_indoor_outdoor,\n    p.pet_size,\n    p.pet_breed,\n    p.pet_colour,\n    p.pet_weight,\n    p.pet_gender,\n    p.pet_life_stage,\n    p.pet_bodyshape,\n    p.pet_lifestyle,\n    p.pet_deceased,\n    p.pet_kennel,\n    p.source,\n    p.source_date,\n    s.sar_source_date\nfrom ${Database}.temp.build_todays_sars s\ninner join ${Database}.live.xref_name_urn xr on s.cid = xr.cid\ninner join ${Database}.db.pet p on trim(xr.name_urn) = trim(p.name_urn);\n\n\ndelete\nfrom ${Database}.db.sar_hist_children\nwhere sar_source_date < current_date - 7;\n\n\ninsert into ${Database}.db.sar_hist_children\n(\n    supp_urn,\n    urn,\n    name_urn,\n    firstname,\n    lastname,\n    gender,\n    yearofbirth,\n    dateofbirth,\n    create_date,\n    source,\n    source_date,\n    sar_source_date\n)\nselect\n    s.supp_urn,\n    s.urn,\n    name_urn,\n    case when firstname = 'Baby' then '' else firstname end,\n    lastname,\n    gender,\n    left(cast(dob as varchar),4),\n    dob,\n    cast(created_date as date),\n    source,\n    cast(created_date as date),\n    s.sar_source_date\nfrom ${Database}.temp.build_todays_sars s\ninner join ${Database}.live.dependant ch on s.cid = ch.cid;\n\n\n--lookup for SARs to output today\ncreate or replace table ${Database}.jobs.build_sars_lookup\nas\nselect distinct\n    first_value(supp_urn) over(order by sar_source_date) as supp_urn,\n    row_number() over(partition by supp_urn order by 1) as rn --order doesn't matter\nfrom (\n         select distinct\n             supp_urn,\n             sar_source_date\n         from ${Database}.db.sar_hist_contact\n         where processed_date is null\n     ) a;\n\n\n/******************************************************************************************\n                                       FINISH PROC\n******************************************************************************************/\n\ninsert into ${Database}.db.build_log \nselect \n    'nestle_sars_rollups',\n    '*************************',\n    '*************************',\n    'end of script',\n    CURRENT_TIMESTAMP::timestamp_ntz;  \n  \n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{},"failureConnectors":{},"unconditionalConnectors":{"197204":{"id":197204,"sourceID":197205,"targetID":197206}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{"197207":{"id":197207,"x":-200,"y":-82,"width":360,"height":75,"text":"This updates the current SAR details received.\n\nSee top rows of Rollups SQL script for list of tables created.\n","colour":"00ce4f"}},"variables":{},"grids":{}},"info":{"name":"Proc12_SARS","description":"Proc12 SARS","type":"ORCHESTRATION","tag":"7072d075-712e-484a-bf19-97c3aa47c03b"}}