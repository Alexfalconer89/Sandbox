{"job":{"components":{"197220":{"id":197220,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":-1946388514,"x":-272,"y":-112,"width":32,"height":32,"inputConnectorIDs":[197227],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Success 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197221":{"id":197221,"inputCardinality":"ONE","outputCardinality":"ZERO","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":515156205,"x":-272,"y":-16,"width":32,"height":32,"inputConnectorIDs":[197225],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"End Failure 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197222":{"id":197222,"inputCardinality":"ONE","outputCardinality":"MANY","connectorHint":"SUCCESS_FAIL","executionHint":"EXECUTE","implementationID":-798585337,"x":-480,"y":-112,"width":32,"height":32,"inputConnectorIDs":[197226],"outputSuccessConnectorIDs":[197227],"outputFailureConnectorIDs":[197225],"outputUnconditionalConnectorIDs":[],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{"1":{"slot":1,"fromId":null,"fromName":"Completed At","mapTo":"Error_CompletedAt"},"2":{"slot":2,"fromId":null,"fromName":"Component","mapTo":"Error_Component"},"3":{"slot":3,"fromId":null,"fromName":"Duration","mapTo":"Error_Duration"},"4":{"slot":4,"fromId":null,"fromName":"Message","mapTo":"Error_Message"},"5":{"slot":5,"fromId":null,"fromName":"Row Count","mapTo":"Error_RowCount"},"6":{"slot":6,"fromId":null,"fromName":"Started At","mapTo":"Error_StartedAt"},"7":{"slot":7,"fromId":null,"fromName":"Status","mapTo":"Error_Status"}},"parameters":{"1":{"slot":1,"name":"Name","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Proc 20 Nestle Email Output"}}}},"visible":true},"2":{"slot":2,"name":"SQL Script","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"/******************************************************************************************\nProgram           : Nestle Email Outputs\nAuthor            : Luke Dudley\nClient Name       : Nestle\nJob Number        :\nStandard Machine  : Kognitio\nAmendment History : v01 - LD 20170817 - Created for Pets at Work Email\n                    v02 - LD 20170822 - Amended to include firstname for Adestra output\n                    v03 - LT 20171025 - NPP03807 Added Club Pro Plan Customer journey outputs\n\t\t\t\t\t..numerous changes\n\t\t\t\t\tv05 - CB 20220306 - NPP08486 Adding NPP_ECRM_UNIQUEID to GP and zigzag emails\n                    v06 - SM 20220509 - NPP09654 - Go-Cat Senior triggered Follow Up\n\t\t\t\t\tv07 - CB 20220518 - NPP08485 Adding pet_dob_known field to GP and KC journeys, KC emails can now also have null pet DoBs\n\t\t\t\t\tv08 - CB 20220822 - NPP08919 Amending npp_ecrm_yp in relevent emails to be populatated if most recent source is your purina\n\t\t\t\t\t\n******************************************************************************************/\n\ninsert into tbw.db.monitoring\n(monitoring_timestamp,client,process,description,sub_description,value)\nselect  current_timestamp::timestamp_ntz\n,       '${Database}'\n,       'BUILD'\n,       'Proc 20 Email Outputs'\n,       'SCRIPT'\n,       'STARTED'\n;\n\n\n--alter warehouse set warehouse_size = 'Large';\n\n/******************************************************************************************\n   KENNEL CLUB CONSUMER JOURNEY\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where promotion_id in ('NPP04398_C','NPP07290') and drop_date = current_date;\n\n\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ncreate or replace table ${Database}.temp.npp_kennelclub_consumer_supps\nas\nselect distinct\n    xr.cid,\n    trim(ch.cell_id) as cell_id,\n    trim(ch.pack_id) as pack_id,\n    trim(promotion_id) as promotion_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on trim(ch.name_urn) = xr.name_urn\nwhere trim(programme_id) = 'E'\n    and trim(promotion_id) in ('NPP04398_C','NPP07290')\n    ;\n\n\ncreate or replace table ${Database}.temp.npp_kennelclub_consumer_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.promotion_id,\n    su.drop_date\nfrom ${Database}.temp.npp_kennelclub_consumer_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n--update expired THG discount codes prior to each run\nupdate ${Database}.db.thg_discount_codes\nset expired = 0\nwhere expiry_date > current_date\nand bbw_used = 0;\n\nupdate ${Database}.db.thg_discount_codes\nset expired = 1\nwhere expiry_date = current_date;\n\n\n-- Create pets table\ncreate or replace table ${Database}.temp.npp04398_kennelclub_consumer_pets\nas\nselect\n    cid,\n    pet_dob,\n    email_type,\n    referral_brand,\n    max(case when pet_run = 1 then pet_name else '' end) as pet_name_1,\n    max(case when pet_run = 2 then pet_name else '' end) as pet_name_2,\n    max(case when pet_run = 3 then pet_name else '' end) as pet_name_3,\n    max(case when pet_run = 4 then pet_name else '' end) as pet_name_4,\n    sum(case when pet_name > '' then 1 else 0 end) as num_pets,\n    min(case when pet_run = 1 then pet_gender else '' end) as pet_gender,\n    min(case when first_pet_size = last_pet_size then last_pet_size else '' end) as pet_size,\n    first_value(pet_dob)over(partition by cid order by pet_dob nulls first) as dob_is_null\nfrom (\n         select\n             cid,\n             pet_dob,\n             email_type,\n             pet_name,\n             pet_gender,\n             referral_brand,\n             first_value(pet_size) over(partition by cid,pet_dob order by pet_size) as first_pet_size,\n             last_value(pet_size) over(partition by cid,pet_dob order by pet_size) as last_pet_size,\n             row_number() over(partition by cid,pet_dob order by case when pet_name > '' then 1 else 0 end desc) as pet_run\n         from (\n                  select distinct\n                      p.cid,\n                      p.pet_dob,\n                      case\n                          when p.pet_dob <= current_date-59 and p.pet_dob > current_date-61                             then 'Email 2' -- 1 day\n                          when p.pet_dob <= current_date-63 and p.pet_dob > current_date-67                             then 'Email 3'\n                          when p.pet_dob <= current_date-70 and p.pet_dob > current_date-74                             then 'Email 4'\n                          when p.pet_dob <= current_date-77 and p.pet_dob > current_date-81                             then 'Email 5'\n                          when p.pet_dob <= current_date-84 and p.pet_dob > current_date-88                             then 'Email 6'\n                          when p.pet_dob <= current_date-91 and p.pet_dob > current_date-95                             then 'Email 7'\n                          when p.pet_dob <= current_date-98 and p.pet_dob > current_date-102                            then 'Email 8'\n                          when p.pet_dob <= current_date-105 and p.pet_dob > current_date-109                           then 'Email 9'\n                          when p.pet_dob <= add_months(current_date,-5) and p.pet_dob > add_months(current_date,-5)-4   then 'Email 10'\n                          when p.pet_dob <= add_months(current_date,-6) and p.pet_dob > add_months(current_date,-6)-4   then 'Email 11'\n                          when p.pet_dob <= add_months(current_date,-7) and p.pet_dob > add_months(current_date,-7)-4   then 'Email 12'\n                          when p.pet_dob <= add_months(current_date,-8) and p.pet_dob > add_months(current_date,-8)-4   then 'Email 13'\n                          when p.pet_dob <= add_months(current_date,-9) and p.pet_dob > add_months(current_date,-9)-4   then 'Email 14'\n                          when p.pet_dob <= add_months(current_date,-10) and p.pet_dob > add_months(current_date,-10)-4 then 'Email 15'\n                          when p.pet_dob <= add_months(current_date,-11) and p.pet_dob > add_months(current_date,-11)-4 then 'Email 16'\n                          when p.pet_dob <= add_months(current_date,-12) and p.pet_dob > add_months(current_date,-12)-4 then 'Email 17'\n                          when c.cid is not null                                                                        then 'Email 18'\n                          else ''\n                      end as email_type,\n                      case when p.source = 'REG_KC' or lower(p.pet_name) = '2 puppys' then '' else p.pet_name end as pet_name, -- bad names from kennel club and they are too long\n                      case\n                          when lower(p.pet_gender) in ('m','male') then 'M'\n                          when lower(p.pet_gender) in ('f','female') then 'F'\n                          else ''\n                      end as pet_gender,\n                      case\n                          when lk.breed is not null and lower(lk.size) regexp '.*t.*|.*s.*' then 'S'\n                          when lk.breed is not null and lower(lk.size) regexp '.*m.*'   then 'M'\n                          when lk.breed is not null and lower(lk.size) regexp '.*l.*'   then 'L'\n                          else coalesce(p.pet_size,'')\n                      end as pet_size,\n                      case\n                          when trim(lower(q.answer)) = 'pro plan' then 'Pro Plan'\n                          when trim(lower(pdc.answer)) = 'pro plan' then 'Pro Plan'\n                          when trim(lower(prod.product_name)) like '%pro plan%' then 'Pro Plan'\n                          when trim(lower(q.answer)) = 'beta' then 'Beta'\n                          when trim(lower(pdc.answer)) = 'beta' then 'Beta'\n                          when trim(lower(prod.product_name)) like '%beta%' then 'Beta'\n                          when trim(lower(q.answer)) = 'bakers' then 'Bakers'\n                          when trim(lower(pdc.answer)) = 'bakers' then 'Bakers'\n                          when trim(lower(prod.product_name)) like '%bakers%' then 'Bakers'\n                          else ''\n                      end as referral_brand\n                  from ${Database}.live.cid_pet p\n                  left join ${Database}.db.dog_breed_size_lookup lk on lower(replace(replace(replace(p.pet_breed,' ',''),'(',''),')','')) = lower(replace(lk.breed,' ',''))\n                  left join (\n                                select --change to cid\n                                    distinct cid,\n\t\t\t\t\t\t\t\t\tfirst_value(answer) over(partition by cid order by case when answer ilike '%Pro Plan%' then 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  when answer ilike '%BETA%' then 2 \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  when answer ilike '%Bakers%' then 3\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  else 4\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  end) as answer\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \n\t\t\t\t\t\t\t\tfrom ${Database}.live.cid_brand_question                               \n                                where  trim(question) = 'Brand of Breeder Referral'\n                            ) q on q.cid = p.cid \n                  left join (\n                                select distinct \n                                    cid,\n                                    first_value(answer) over(partition by cid order by case\n                                                                                           when answer ilike '%Pro Plan%' then 1\n                                                                                           when answer ilike '%BETA%' then 2\n                                                                                           when answer ilike '%Bakers%' then 3\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   else 4\n                                                                                       end) as answer\n\t\t\t\t\t\t\t\tfrom ${Database}.live.xref_name_urn x\n\t\t\t\t\t\t\t\tjoin ${Database}.db.question q on q.name_urn = x.name_urn\n\t\t\t\t\t\t\t\tjoin ${Database}.db.ref_question rq on rq.question_id = q.question_id\n\t\t\t\t\t\t\t\twhere trim(question) = 'What type of food does your pet eat (Brand)'\n                                    and left(trim(answer),5) not ilike 'Other'\n\t\t\t\t\t\t\t\tand q.source = 'RESP_HC_1|512'\n                            ) pdc on pdc.cid = p.cid\n                  left join (\n                                select distinct\n\t\t\t\t\t\t\t\t    cid,\n                                    first_value(product_name) over(partition by cid order by case\n\t\t\t\t\t\t\t\t\t                                                             when product_name ilike '%Pro Plan%' then 1\n                                                                                                 when product_name ilike '%BETA%' then 2\n                                                                                                 when product_name ilike '%Bakers%' then 3\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t else 4\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t end) as product_name\n                                from ${Database}.db.ref_product rp\n                                join ${Database}.db.product pr on pr.product_id = rp.product_id\n                                join ${Database}.live.xref_name_urn xr on xr.name_urn = pr.name_urn\n                                where pr.source = 'REG_THG'\n                                    and product_name ilike any ('%Pro Plan%','%BETA%','%Bakers%')\n                            ) prod on prod.cid = p.cid\n                  left join (\n                                select\n                                    cid\n                                from ${Database}.db.comms_hist ch\n                                join ${Database}.live.xref_name_urn xr on xr.name_urn = ch.name_urn\n                                where trim(promotion_id) = 'NPP04398_C'\n                                    and trim(cell_id) = '17'\n                                    and drop_date <= current_date -7\n                                    and drop_date >= current_date -12\n                             ) c on c.cid = p.cid\n                  where (lower(p.source) regexp '.*reg_kc.*' or (lower(p.source) regexp '.*reg_wun.*' and lower(p.name_urn) regexp '.*growing pup.*') or (lower(p.source) regexp '.*reg_thg.*' and p.pet_dob >= add_months(current_date,-12)-2) or (p.pet_dob >= add_months(current_date,-12) and p.pet_data_date > '2021-05-01'))\n                      and lower(p.pet_type) = 'dog'\n                      --and p.pet_dob is not null -- should this be inlcuded or excluded?\n              ) a\n     ) b\ngroup by 1,2,3,4;\n\n\n-- Email 1 - Welcome\n-- Audience: Emailable, opted in, Pro Plan consumers who have signed up to the Growing Puppy Club since the last daily extract of new sign ups for this email. Initial extract should include all emailable, opted in Pro Plan consumers who have signed up to the Growing Puppy Club, regardless of sign up date.\n\ncreate or replace table ${Database}.temp.npp04398_kennelclub_consumer_welcome\nas\nselect\n    *,\n    'E|NPP04398_C|NPP04398_C|1|'||case\n                                      when lower(referral_brand) = 'pro plan' then '1'||case\n                                                                                            when kc_pet_subject_line = 1 then 'A'\n                                                                                            when kc_pet_subject_line = 2 then 'B'\n                                                                                            when kc_pet_subject_line = 3 then 'C'\n                                                                                            when kc_pet_subject_line = 4 then 'D'\n                                                                                        end\n                                      when lower(referral_brand) = 'beta' then '2'||case\n                                                                                        when kc_pet_subject_line = 1 then 'A'\n                                                                                        when kc_pet_subject_line = 2 then 'B'\n                                                                                        when kc_pet_subject_line = 3 then 'C'\n                                                                                        when kc_pet_subject_line = 4 then 'D'\n                                                                                    end\n\t\t\t\t\t\t\t\t\t when lower(referral_brand) = 'bakers' then '3'||case\n                                                                                        when kc_pet_subject_line = 1 then 'A'\n                                                                                        when kc_pet_subject_line = 2 then 'B'\n                                                                                        when kc_pet_subject_line = 3 then 'C'\n                                                                                        when kc_pet_subject_line = 4 then 'D'\n                                                                                    end\t\t\t\t\t\t\t\t\t\t\t\t\n                                      else '0'||case\n                                                    when kc_pet_subject_line = 1 then 'A'\n                                                    when kc_pet_subject_line = 2 then 'B'\n                                                    when kc_pet_subject_line = 3 then 'C'\n                                                    when kc_pet_subject_line = 4 then 'D'\n                                                end\n                                  end as kog_pack\nfrom (\n         select\n             em1.cid,\n             em1.npp_ecrm_uniqueid,\t\t\n             em1.name_urn,\n             em1.email,\n             em1.forename,\n             em1.kc_pet_salutation,\n             em1.kc_pet_size,\n             em1.kc_profile_completed,\n             em1.kc_next_chapter,\n             em1.kc_source,\n             em1.gp_shopmium_code,\n             em1.gp_product_name,\n             em1.brand_id,\n             em1.brand_preference,\n             em1.brand_engagement,\n             em1.referral_brand,\n             em1.kc_pet_subject,\n             em1.kc_pet_body,\n             em1.pet_dob_known,\n\t\t\t em1.last_source_yp as npp_ecrm_yp,\n             case\n                 when kc_pet_subject_names = 'person name' then 1\n                 when kc_pet_subject_names = 'pet name' then 2\n                 when kc_pet_subject_names = 'both names' then ntile(4) over(partition by kc_pet_subject_names,kc_next_chapter order by random() desc)\n                 else 4\n             end as kc_pet_subject_line\n         from (\n                  select\n                      cd.name_urn,\n                      cd.cid,\n\t                  sha2(cid.bbw_urn,256) as npp_ecrm_uniqueid, \t\n                      lower(cb.email_brand) as email,\n                      cd.forename,\n                      case\n                          when p.pet_name_1 > '' then p.pet_name_1\n                          else ''\n                      end as kc_pet_subject,\n                      case\n                          when p.pet_name_1 > '' then p.pet_name_1\n                          else ''\n                      end as  kc_pet_body,\n                      case\n                          when cd.forename > '' and pet_name_1 > '' then 'both names'\n                          when cd.forename > '' and (pet_name_1 = '' or pet_name_1 is null) then 'person name'\n                          when cd.forename = '' and pet_name_1 > '' then 'pet name'\n                          when cd.forename = '' and (pet_name_1 = '' or pet_name_1 is null) then 'no name'\n                      end as kc_pet_subject_names,\n                      case\n                          when p.pet_name_4 > '' then 'your puppies'''\n                          when p.pet_name_3 > '' and right(p.pet_name_3,1) = 's' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||''''\n                          when p.pet_name_3 > '' and right(p.pet_name_3,1) <> 's' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||'''s'\n                          when p.pet_name_2 > '' and right(p.pet_name_2,1) = 's' then p.pet_name_1||' and '||p.pet_name_2||''''\n                          when p.pet_name_2 > '' and right(p.pet_name_2,1) <> 's' then p.pet_name_1||' and '||p.pet_name_2||'''s'\n                          when p.pet_name_1 > '' and right(p.pet_name_1,1) = 's' then p.pet_name_1||''''\n                          when p.pet_name_1 > '' and right(p.pet_name_1,1) <> 's' then p.pet_name_1||'''s'\n                          else ''\n                      end as kc_pet_salutation,\n                      coalesce(p.pet_size,'') as kc_pet_size,\n                      case\n                          when shp.cid is not null then 'Shopmium'\n                          when p.pet_dob is null and cb.first_date_brand >= current_date-1                  then 'Email 2'\n                          when p.pet_dob is not null and p.pet_dob >= current_date-57                       then 'Email 2'\n                          when p.pet_dob is null and cb.first_date_brand >= current_date-5                  then 'Email 3'\n                          when p.pet_dob is not null and p.pet_dob >= current_date-61                       then 'Email 3'\n                          when p.pet_dob is null and cb.first_date_brand >= current_date-12                 then 'Email 4'\n                          when p.pet_dob is not null and p.pet_dob >= current_date-68                       then 'Email 4'\n                          when p.pet_dob is null and cb.first_date_brand >= current_date-19                 then 'Email 5'\n                          when p.pet_dob is not null and p.pet_dob >= current_date-75                       then 'Email 5'\n                          when p.pet_dob is null and cb.first_date_brand >= current_date-26                 then 'Email 6'\n                          when p.pet_dob is not null and p.pet_dob >= current_date-82                       then 'Email 6'\n                          when p.pet_dob is null and cb.first_date_brand >= current_date-33                 then 'Email 7'\n                          when p.pet_dob is not null and p.pet_dob >= current_date-91                       then 'Email 7'\n                          when p.pet_dob is null and cb.first_date_brand >= current_date-40                 then 'Email 8'\n                          when p.pet_dob is not null and p.pet_dob >= current_date-98                       then 'Email 8'\n                          when p.pet_dob is null and cb.first_date_brand >= current_date-47                 then 'Email 9'\n                          when p.pet_dob is not null and p.pet_dob >= current_date-105                      then 'Email 9'\n                          when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-5)+54  then 'Email 10'\n                          when p.pet_dob is not null and p.pet_dob >= add_months(current_date,-5)-2         then 'Email 10'\n                          when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-6)+54  then 'Email 11'\n                          when p.pet_dob is not null and p.pet_dob >= add_months(current_date,-6)-2         then 'Email 11'\n                          when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-7)+54  then 'Email 12'\n                          when p.pet_dob is not null and p.pet_dob >= add_months(current_date,-7)-2         then 'Email 12'\n                          when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-8)+54  then 'Email 13'\n                          when p.pet_dob is not null and p.pet_dob >= add_months(current_date,-8)-2         then 'Email 13'\n                          when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-9)+54  then 'Email 14'\n                          when p.pet_dob is not null and p.pet_dob >= add_months(current_date,-9)-2         then 'Email 14'\n                          when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-10)+54 then 'Email 15'\n                          when p.pet_dob is not null and p.pet_dob >= add_months(current_date,-10)-2        then 'Email 15'\n                          when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-11)+54 then 'Email 16'\n                          when p.pet_dob is not null and p.pet_dob >= add_months(current_date,-11)-2        then 'Email 16'\n                          when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-12)+54 then 'Email 17'\n                          when p.pet_dob is not null and p.pet_dob >= add_months(current_date,-12)-2        then 'Email 17'\n                          else ''\n                      end as kc_next_chapter,\n                      case\n                          when p.cid is null and nm.cid is not null then 'N'\n                          when shp.cid is not null then 'N'\n                          else 'Y'\n                      end as kc_profile_completed,\n                      case\n                          when nm.cid is not null then 'THG'\n                          when shp.cid is not null then 'SHOPMIUM'\n                          else 'KC'\n                      end as kc_source,\n                      case\n                          when shp.cid is not null then shp.gp_product_name\n                          else ''\n                      end as gp_product_name,\n                      coalesce(shp.p_id,cast(null as int)) as gp_shopmium_code,\n                      cb.brand_id,\n                      cb.brand_preference,\n                      cb.brand_engagement,\n                      case\n                          when lower(p.referral_brand) = 'pro plan' then 'Pro Plan'\n                          when lower(p.referral_brand) = 'beta' then 'Beta'\n\t\t\t\t\t\t  when lower(p.referral_brand) = 'bakers' then 'Bakers'\n                          else ''\n                      end as referral_brand,\n                      case when p.dob_is_null is null then 'N' else 'Y' end as pet_dob_known,\n\t\t\t\t\t  case when last_source = 'REG_YOUR_PURINA' then 'Y' else '' end as last_source_yp,\n                      row_number() over(partition by lower(cb.email_brand) order by cb.first_date_brand) as em_run\n                  from (\n                           select\n                               cid,\n                               name_urn,\n                               case\n                                   when firstname is null then ''\n                                   when length(firstname) <= 1 then ''\n                                   when substring (firstname,2,1) = ' ' and length(firstname) < 4 then ''\n                                   else firstname\n                               end as forename\n                           from ${Database}.live.cid_details\n                       ) cd\n                  inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n                  inner join ${Database}.live.cid cid on cid.cid = cd.cid\n                  left join (select cid, \n\t\t\t\t\t                first_value(source)over(partition by cid order by data_date desc, source_date desc, case when source = 'REG_YOUR_PURINA' then 0 else 1 end) as last_source\n\t\t\t\t\t\t     from ${Database}.live.names\n                             where SOURCE_DATA_CONTROLLER_ID = 5\n\t\t\t\t            ) yp_source on yp_source.cid = cd.cid and last_source = 'REG_YOUR_PURINA'\n\t\t\t\t  left join (\n                                select distinct\n                                    cid,\n                                    case when p.pet_dob >= add_months(current_date,-12)-2 then 1 else 0 end as thg_has_puppy\n                                from ${Database}.live.names n\n                                left join ${Database}.db.pet p on p.name_urn = n.name_urn\n                                where n.source = 'REG_THG'\n                                    and source_brand_id = (select brand_id from ${Database}.db.ref_brand where brand = 'Growing Pup')\n                            ) nm on cd.cid = nm.cid\n                  left join (\n                                select distinct\n                                    n.cid,\n                                    right(ofr.product_name,9) as gp_product_name,\n                                    ofr.p_id,\n                                    cpn.paid_at\n                                from ${Database}.live.names n\n                                join ${Database}.db.shopmium_proplan_vets_receipts rt on n.name_urn = rt.name_urn\n                                join ${Database}.db.shopmium_proplan_vets_offers ofr on ofr.p_id = rt.product_id\n                                join ${Database}.db.shopmium_proplan_vets_coupons cpn on cpn.submission_id = rt.submission_id\n                                where n.source = 'REG_SHOPM'\n                                    and source_brand_id = (select brand_id from ${Database}.db.ref_brand where brand = 'Growing Pup')\n                                    and right(product_name,9) in ('OPTISTART','OPTIDERMA')\n                                  --and paid_at > current_date - 5   --re-use condition after first run\n                            ) shp on cd.cid = shp.cid\n                  left join (\n                                select\n                                    cid,\n                                    pet_dob,\n                                    pet_name_1,\n                                    pet_name_2,\n                                    pet_name_3,\n                                    pet_name_4,\n                                    pet_size,\n                                    num_pets,\n                                    dob_is_null,\n                                    referral_brand,\n                                    row_number() over(partition by cid order by pet_dob desc) as rn\n                                from ${Database}.temp.npp04398_kennelclub_consumer_pets\n                            ) p on cd.cid = p.cid\n                               and p.rn = 1\n                  left join ${Database}.temp.npp_kennelclub_consumer_supps s on cd.cid = s.cid\n                                                                            and s.cell_id = '1'\n                  left join ${Database}.temp.npp_kennelclub_consumer_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                                                               and es.cell_id = '1'\n                  where ((cb.brand_id = (select brand_id from ${Database}.db.ref_brand where brand = 'Growing Pup') and nm.cid is null) or (nm.cid is not null and nm.thg_has_puppy = 1)) --gowing pup but not thg, or is thg and in pet table\n                      and cb.emailable = 1\n                      and cb.brand_preference = 1\n                      --and (cb.first_date_brand > current_date - 5  -- signed up in last 5 days just incase of build failures over weekend etc. -- comment out for first send to pick everyone up.\n                      --and (cb.first_date_brand > current_date - 5 or (shp.cid is not null))--run for first time to pick up all shopmium consumers but only last five days for GP\n                      --and (cb.first_date_brand > current_date - 5 and (shp.cid is null))--shopmium turned off for now\n                      and (cb.first_date_brand > current_date - 5 and (shp.cid is null))--temp mop up\n                      and s.cid is null\n                      and es.email is null\n              ) em1\n         where em1.em_run = 1\n     ) a;\n\n\n-- Email 2 to 9\n-- Audience: Emailable, opted in, Pro Plan consumers who are signed up to the Growing Puppy Club, and whose puppy has a pet DOB = 8 weeks and 3 days or 9/10/11/12/13/14 weeks or 5 months ago. Exclude consumers who have signed up to the Growing Puppy Club in the last day (i.e. will be receiving Email 1 today), and consumers who have been sent Email 1 <= 1 day ago, and consumers who last received this email < 6 months ago.\n--           Added emails 10 - 17 monthly from 5 month to 1 year\n\ncreate or replace table ${Database}.temp.npp04398_kennelclub_consumer_em2_17\nas\nselect\n    *,\n    case\n        when email_type = 'Email 18' then 'E|NPP07290|NPP07290|1|1'\n        else 'E|NPP04398_C|NPP04398_C|'||trim(replace(email_type,'Email ',''))||'|'||case\n                                                                                         when lower(referral_brand) = 'pro plan' then '1'||case\n                                                                                                                                               when kc_pet_subject_line = '1' then 'A'\n                                                                                                                                               when kc_pet_subject_line = '2' then 'B'\n                                                                                                                                               when kc_pet_subject_line = '3' then 'C'\n                                                                                                                                               when kc_pet_subject_line = '4' then 'D'\n                                                                                                                                           end\n                                                                                         when lower(referral_brand) = 'beta' then '2'||case\n                                                                                                                                           when kc_pet_subject_line = '1' then 'A'\n                                                                                                                                           when kc_pet_subject_line = '2' then 'B'\n                                                                                                                                           when kc_pet_subject_line = '3' then 'C'\n                                                                                                                                           when kc_pet_subject_line = '4' then 'D'\n                                                                                                                                       end\n                                                                                         when lower(referral_brand) = 'bakers' then '3'||case\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                                                                                          \n                                                                                                                                           when kc_pet_subject_line = '1' then 'A'\n                                                                                                                                           when kc_pet_subject_line = '2' then 'B'\n                                                                                                                                           when kc_pet_subject_line = '3' then 'C'\n                                                                                                                                           when kc_pet_subject_line = '4' then 'D'\n                                                                                                                                       end\n                                                                                         else '0'||case\n                                                                                                       when kc_pet_subject_line = '1' then 'A'\n                                                                                                       when kc_pet_subject_line = '2' then 'B'\n                                                                                                       when kc_pet_subject_line = '3' then 'C'\n                                                                                                       when kc_pet_subject_line = '4' then 'D'\n                                                                                                   end\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND\n    end as kog_pack\nfrom (\n         select\n             em.name_urn,\n                       --  em.bbw_urn as uniqueid, --removed for hashed urn change\n             em.npp_ecrm_uniqueid, --Hashed Urn Change\n             em.email,\n             em.forename,\n             em.email_type,\n             case\n                 when em.email_type in ('Email 3', 'Email 4','Email 5','Email 6','Email 8','Email 12','Email 16') and em.num_pets in (1,2,3) and right(em.pet_name,1) = 's' then em.pet_name||''''\n                 when em.email_type in ('Email 3', 'Email 4','Email 5','Email 6','Email 8','Email 12','Email 16') and em.num_pets in (1,2,3) and right(em.pet_name,1) <> 's' then em.pet_name||'''s'\n                 when em.email_type in ('Email 4','Email 6','Email 8','Email 12','Email 16') and em.num_pets = 4                  then 'your pets'''\n                 when em.email_type = 'Email 9' and em.num_pets = 4                                                               then 'your dogs'\n                 when em.email_type = 'Email 5' and em.num_pets = 4                                                               then 'your dogs'''\n                 when em.num_pets = 4                                                                                             then 'your pets'\n                 else em.pet_name\n             end as kc_pet_subject,\n             case when em.num_pets = 4 then 'your pets' else em.pet_name end as kc_pet_salutation,\n             case\n                 when em.email_type in ('Email 3','Email 7') and em.num_pets = 1                            then em.pet_name||' is'\n                 when em.email_type in ('Email 3','Email 7') and em.num_pets in (2,3)                       then em.pet_name||' are'\n                 when em.email_type in ('Email 3','Email 7') and em.num_pets = 4                            then 'your pets are'\n                 when em.email_type = 'Email 9' and em.num_pets = 4                                         then 'your dogs'\n                 when em.email_type = 'Email 4' and em.num_pets = 1                                         then em.pet_name||' has'\n                 when em.email_type = 'Email 4' and em.num_pets in (2,3)                                    then em.pet_name||' have'\n                 when em.email_type = 'Email 4' and em.num_pets = 4                                         then 'your dogs have'\n                 when em.email_type = 'Email 5' and em.num_pets in (1,2,3) and right(em.pet_name,1) = 's'   then em.pet_name||''''\n                 when em.email_type = 'Email 5' and em.num_pets in (1,2,3) and right(em.pet_name,1) <> 's'  then em.pet_name||'''s'\n                 when em.email_type = 'Email 5' and em.num_pets = 4                                         then 'your dogs'''\n                 when em.email_type = 'Email 16' and em.num_pets in (1,2,3) and right(em.pet_name,1) = 's'  then em.pet_name||''''\n                 when em.email_type = 'Email 16' and em.num_pets in (1,2,3) and right(em.pet_name,1) <> 's' then em.pet_name||'''s'\n                 when em.email_type = 'Email 16' and em.num_pets = 4                                        then 'Your Pet''s'\n                 when em.num_pets = 4                                                                       then 'your pets'\n                 else em.pet_name\n             end as kc_pet_body,\n             case when em.email_type in ('Email 8','Email 15') then replace(replace(em.kc_pet_gender,'M','boy'),'F','girl') else em.kc_pet_gender end as kc_pet_gender,\n             em.kc_pet_size,\n             em.kc_profile_completed,\n             em.kc_source,\n             em.pet_dob_known,\n             em.brand_id,\n             em.brand_preference,\n             em.brand_engagement,\n             co.discount_code,\n             em.referral_brand,\n             coalesce(right(comms_subject,1),case when kc_pet_subject_names = 'person name' then '1'\n                         when kc_pet_subject_names = 'pet name' then '2'\n                         when kc_pet_subject_names = 'both names' then to_char(ntile(4) over(partition by kc_pet_subject_names,email_type order by random() desc))\n                         else '4' end) as kc_pet_subject_line,\n\t\t\tcase when last_source_yp = 'REG_YOUR_PURINA' then 'Y' else '' end as npp_ecrm_yp\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n         from (\n                  select\n                      cd.cid,\n                      sha2(cid.bbw_urn,256) as npp_ecrm_uniqueid, \n                      cd.name_urn,\n                      lower(cb.email_brand) as email,\n                      cd.forename,\n                      case\n                          when cd.forename > '' and pet_name_1 > '' then 'both names'\n                          when cd.forename > '' and (pet_name_1 = '' or pet_name_1 is null) then 'person name'\n                          when cd.forename = '' and pet_name_1 > '' then 'pet name'\n                          when cd.forename = '' and (pet_name_1 = '' or pet_name_1 is null) then 'no name'\n                      end as kc_pet_subject_names,\n                      ch_sl.comms_subject,\n                      case\n                          when p.pet_dob is null and cb.first_date_brand <= current_date-3 and p.pet_dob is null and cb.first_date_brand > current_date-5                                   then 'Email 2'\n                          when p.pet_dob is null and cb.first_date_brand <= current_date-7 and p.pet_dob is null and cb.first_date_brand > current_date-11                                  then 'Email 3'\n                          when p.pet_dob is null and cb.first_date_brand <= current_date-14 and p.pet_dob is null and cb.first_date_brand > current_date-18                                 then 'Email 4'\n                          when p.pet_dob is null and cb.first_date_brand <= current_date-21 and p.pet_dob is null and cb.first_date_brand > current_date-25                                 then 'Email 5'\n                          when p.pet_dob is null and cb.first_date_brand <= current_date-28 and p.pet_dob is null and cb.first_date_brand > current_date-32                                 then 'Email 6'\n                          when p.pet_dob is null and cb.first_date_brand <= current_date-35 and p.pet_dob is null and cb.first_date_brand > current_date-39                                 then 'Email 7'\n                          when p.pet_dob is null and cb.first_date_brand <= current_date-42 and p.pet_dob is null and cb.first_date_brand > current_date-46                                 then 'Email 8'\n                          when p.pet_dob is null and cb.first_date_brand <= current_date-49 and p.pet_dob is null and cb.first_date_brand > current_date-53                                 then 'Email 9'\n                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-5)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-5)+52   then 'Email 10'\n                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-6)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-6)+52   then 'Email 11'\n                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-7)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-7)+52   then 'Email 12'\n                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-8)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-8)+52   then 'Email 13'\n                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-9)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-9)+52   then 'Email 14'\n                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-10)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-10)+52 then 'Email 15'\n                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-11)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-11)+52 then 'Email 16'\n                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-12)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-12)+52 then 'Email 17'\n                          when c.cid is not null                                                                                                                                            then 'Email 18'\n                          else coalesce(p.email_type,'')\n                      end as email_type,\n                      case when p.pet_dob is null and nm.cid is not null then 'N' else 'Y' end as kc_profile_completed,\n                      case\n                          when nm.cid is not null then 'THG'\n                          when shp.cid is not null then 'SHOPMIUM'\n                          else 'KC'\n                      end as kc_source,\n                      case\n                          when p.pet_name_4 > '' then ''\n                          when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3\n                          when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2\n                          when p.pet_name_1 > '' then p.pet_name_1\n                          else ''\n                      end as pet_name,\n                      coalesce(p.num_pets,0) as num_pets,\n                      coalesce(p.pet_gender,'') as kc_pet_gender,\n                      coalesce(p.pet_size,'') as kc_pet_size,\n                      case when p.dob_is_null is null then 'N' else 'Y' end as pet_dob_known,\n                      cb.brand_id,\n                      cb.brand_preference,\n                      cb.brand_engagement,\n                      case\n                          when lower(p.referral_brand) = 'pro plan' then 'Pro Plan'\n                          when lower(p.referral_brand) = 'beta' then 'Beta'\n                          when lower(p.referral_brand) = 'bakers' then 'Bakers'\n                          else ''\n                      end as referral_brand,\n\t\t\t\t\t  yp_source.last_source as last_source_yp,\n                      row_number() over(partition by lower(cb.email_brand),case\n                                                                               when p.cid is null and cb.first_date_brand <= current_date-3 and p.cid is null and cb.first_date_brand > current_date-5                                   then 'Email 2'\n                                                                               when p.cid is null and cb.first_date_brand <= current_date-7 and p.cid is null and cb.first_date_brand > current_date-11                                  then 'Email 3'\n                                                                               when p.cid is null and cb.first_date_brand <= current_date-14 and p.cid is null and cb.first_date_brand > current_date-18                                 then 'Email 4'\n                                                                               when p.cid is null and cb.first_date_brand <= current_date-21 and p.cid is null and cb.first_date_brand > current_date-25                                 then 'Email 5'\n                                                                               when p.cid is null and cb.first_date_brand <= current_date-28 and p.cid is null and cb.first_date_brand > current_date-32                                 then 'Email 6'\n                                                                               when p.cid is null and cb.first_date_brand <= current_date-35 and p.cid is null and cb.first_date_brand > current_date-39                                 then 'Email 7'\n                                                                               when p.cid is null and cb.first_date_brand <= current_date-42 and p.cid is null and cb.first_date_brand > current_date-46                                 then 'Email 8'\n                                                                               when p.cid is null and cb.first_date_brand <= current_date-49 and p.cid is null and cb.first_date_brand > current_date-53                                 then 'Email 9'\n                                                                               when p.cid is null and cb.first_date_brand <= add_months(current_date,-5)+56 and p.cid is null and cb.first_date_brand > add_months(current_date,-5)+52   then 'Email 10'\n                                                                               when p.cid is null and cb.first_date_brand <= add_months(current_date,-6)+56 and p.cid is null and cb.first_date_brand > add_months(current_date,-6)+52   then 'Email 11'\n                                                                               when p.cid is null and cb.first_date_brand <= add_months(current_date,-7)+56 and p.cid is null and cb.first_date_brand > add_months(current_date,-7)+52   then 'Email 12'\n                                                                               when p.cid is null and cb.first_date_brand <= add_months(current_date,-8)+56 and p.cid is null and cb.first_date_brand > add_months(current_date,-8)+52   then 'Email 13'\n                                                                               when p.cid is null and cb.first_date_brand <= add_months(current_date,-9)+56 and p.cid is null and cb.first_date_brand > add_months(current_date,-9)+52   then 'Email 14'\n                                                                               when p.cid is null and cb.first_date_brand <= add_months(current_date,-10)+56 and p.cid is null and cb.first_date_brand > add_months(current_date,-10)+52 then 'Email 15'\n                                                                               when p.cid is null and cb.first_date_brand <= add_months(current_date,-11)+56 and p.cid is null and cb.first_date_brand > add_months(current_date,-11)+52 then 'Email 16'\n                                                                               when p.cid is null and cb.first_date_brand <= add_months(current_date,-12)+56 and p.cid is null and cb.first_date_brand > add_months(current_date,-12)+52 then 'Email 17'\n                                                                               when c.cid is not null                                                                                                                                    then 'Email 18'\n                                                                               else p.email_type\n                                                                           end order by cb.first_date_brand) as em_run,\n                      row_number() over (partition by case\n                                                          when p.pet_dob is null and cb.first_date_brand <= current_date-3 and p.pet_dob is null and cb.first_date_brand > current_date-5                                   then 'Email 2'\n                                                          when p.pet_dob is null and cb.first_date_brand <= current_date-7 and p.pet_dob is null and cb.first_date_brand > current_date-11                                  then 'Email 3'\n                                                          when p.pet_dob is null and cb.first_date_brand <= current_date-14 and p.pet_dob is null and cb.first_date_brand > current_date-18                                 then 'Email 4'\n                                                          when p.pet_dob is null and cb.first_date_brand <= current_date-21 and p.pet_dob is null and cb.first_date_brand > current_date-25                                 then 'Email 5'\n                                                          when p.pet_dob is null and cb.first_date_brand <= current_date-28 and p.pet_dob is null and cb.first_date_brand > current_date-32                                 then 'Email 6'\n                                                          when p.pet_dob is null and cb.first_date_brand <= current_date-35 and p.pet_dob is null and cb.first_date_brand > current_date-39                                 then 'Email 7'\n                                                          when p.pet_dob is null and cb.first_date_brand <= current_date-42 and p.pet_dob is null and cb.first_date_brand > current_date-46                                 then 'Email 8'\n                                                          when p.pet_dob is null and cb.first_date_brand <= current_date-49 and p.pet_dob is null and cb.first_date_brand > current_date-53                                 then 'Email 9'\n                                                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-5)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-5)+52   then 'Email 10'\n                                                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-6)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-6)+52   then 'Email 11'\n                                                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-7)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-7)+52   then 'Email 12'\n                                                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-8)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-8)+52   then 'Email 13'\n                                                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-9)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-9)+52   then 'Email 14'\n                                                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-10)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-10)+52 then 'Email 15'\n                                                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-11)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-11)+52 then 'Email 16'\n                                                          when p.pet_dob is null and cb.first_date_brand <= add_months(current_date,-12)+56 and p.pet_dob is null and cb.first_date_brand > add_months(current_date,-12)+52 then 'Email 17'\n                                                          when c.cid is not null                                                                                                                                            then 'Email 18'\n                                                          else coalesce(p.email_type,'')\n                                                      end\n                                          order by case when p.cid is null and cb.first_date_brand <= add_months(current_date,-12)+56 and p.cid is null and cb.first_date_brand > add_months(current_date,-12)+52 then 1 else 0 end desc) as code_run\n                  from (\n                           select\n                               *,\n                               case\n                                   when firstname is null then ''\n                                   when length(firstname) <= 1 then ''\n                                   when substring(firstname,2,1) = ' ' and length(firstname) < 4 then ''\n                                   else firstname\n                               end as forename\n                           from ${Database}.live.cid_details\n                       ) cd\n                  inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n                  inner join ${Database}.live.cid cid on cid.cid = cd.cid\n                  inner join ${Database}.live.xref_name_urn xr on cb.cid = xr.cid  --Hashed Urn Change\n                  left join ${Database}.temp.npp04398_kennelclub_consumer_pets p on cd.cid = p.cid\n                  left join ${Database}.temp.npp04398_kennelclub_consumer_welcome w on cd.cid = w.cid\n                  left join (select cid, \n\t\t\t\t\t\t\t\t\tfirst_value(source)over(partition by cid order by data_date desc, source_date desc, case when source = 'REG_YOUR_PURINA' then 0 else 1 end) as last_source\n\t\t\t\t\t\t     from ${Database}.live.names\n                             where SOURCE_DATA_CONTROLLER_ID = 5\n\t\t\t\t\t\t\t) yp_source on yp_source.cid = cd.cid and last_source = 'REG_YOUR_PURINA'\n\t\t\t\tleft join (\n                                select distinct\n                                    n.cid,\n                                    right(ofr.product_name, 9) as gp_product_name,\n                                    ofr.p_id,\n                                    cpn.paid_at\n                                from ${Database}.live.names n\n                                join ${Database}.db.shopmium_proplan_vets_receipts rt on n.name_urn = rt.name_urn\n                                join ${Database}.db.shopmium_proplan_vets_offers ofr on ofr.p_id = rt.product_id\n                                join ${Database}.db.shopmium_proplan_vets_coupons cpn on cpn.submission_id = rt.submission_id\n                                where n.source = 'REG_SHOPM'\n                                    and source_brand_id = (select brand_id from ${Database}.db.ref_brand where brand = 'Growing Pup')\n                                    and right(product_name, 9) in ('OPTISTART','OPTIDERMA')\n                                    --and paid_at > current_date - 5   --re-use condition after first run\n                            ) shp on cd.cid = shp.cid\n                  left join (\n                                select distinct\n                                    cid,\n                                    case when p.pet_dob >= add_months(current_date,-12)-2 then 1 else 0 end as thg_has_puppy\n                                from ${Database}.live.names n\n                                left join ${Database}.db.pet p on p.name_urn = n.name_urn\n                                where n.source = 'REG_THG'\n                                    and source_brand_id = (select brand_id from ${Database}.db.ref_brand where brand = 'Growing Pup')\n                            ) nm on cd.cid = nm.cid\n                  left join (\n                                select\n                                    cid\n                                from ${Database}.db.comms_hist ch\n                                join ${Database}.live.xref_name_urn xr on xr.name_urn = ch.name_urn\n                                where promotion_id = 'NPP04398_C'\n                                    and cell_id = '17'\n                                    and drop_date <= current_date -7\n                                    and drop_date >= current_date -12\n                            ) c on c.cid = cd.cid\n                  left join (\n                                select\n                                    cid,\n                                    first_value(pack_id) over (partition by cid order by drop_date desc) as comms_subject\n                                from ${Database}.db.comms_hist ch\n                                join ${Database}.live.xref_name_urn xr on xr.name_urn = ch.name_urn\n                                where lower(pack_id) regexp '(.*)(a|b|c|d)(.*)'\n                                    and promotion_id ilike '%NPP06848_C%'\n                                    and left(pack_id,1) = '1'\n                            ) ch_sl on ch_sl.cid =    cd.cid\n                  where ((cb.brand_id = (select brand_id from ${Database}.db.ref_brand where brand = 'Growing Pup') and nm.cid is null) or (nm.cid is not null and nm.thg_has_puppy = 1 )) --gowing pup but not thg, or is thg and in pet table\n                      --and shp.cid is null--run while wait for shopmium consumers to be tested\n                      and cb.emailable = 1\n                      and cb.brand_preference = 1\n                      and w.cid is null\n              ) em\n         left join ${Database}.temp.npp_kennelclub_consumer_supps s on em.cid = s.cid\n                                                                   and (\n                                                                           (case when s.promotion_id = 'NPP07290' then '18' else s.cell_id end = replace(em.email_type,'Email ','') and s.drop_date >= current_date - 5 )\n                                                                        or\n                                                                           (s.promotion_id = 'NPP04398_C' and s.cell_id = '1' and s.drop_date >= current_date-1)\n                                                                       )\n         left join ${Database}.temp.npp_kennelclub_consumer_e_supps es on em.email = es.email\n                                                                      and (\n                                                                              (case when es.promotion_id = 'NPP07290' then '18' else es.cell_id end = replace(em.email_type,'Email ','') and es.drop_date >= current_date - 5)\n                                                                           or\n                                                                              (es.promotion_id = 'NPP04398_C' and es.cell_id = '1' and es.drop_date >= current_date-1)\n                                                                          )\n         left join (\n                       select\n                           discount_code,\n                           row_number() over (partition by 1 order by discount_code asc) as code_run\n                       from ${Database}.db.thg_discount_codes\n                       where expired = 0\n                           and bbw_used = 0\n                   ) co on co.code_run = em.code_run\n                       and em.email_type = 'Email 17' --discount code only for the final email\n         where em.em_run = 1\n             and em.email_type > ''\n             and s.cid is null\n             and es.email is null\n     ) a;\n\n\n--update used discount codes\nmerge into ${Database}.db.thg_discount_codes c\nusing (\n          select\n              name_urn,\n              discount_code\n          from ${Database}.temp.npp04398_kennelclub_consumer_em2_17\n          where discount_code > ''\n      ) d on trim(c.discount_code) = d.discount_code\nwhen matched then update\nset c.sent_to_name_urn = d.name_urn,\n    c.bbw_used = 1,\n    c.bbw_used_date = current_date;\n\n\ndrop table if exists ${Database}.temp.npp04398_kennelclub_consumer_pets;\ndrop table if exists ${Database}.temp.npp_kennelclub_consumer_supps;\ndrop table if exists ${Database}.temp.npp_kennelclub_consumer_e_supps;\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP04398_C',\n    'NPP04398_C',\n    '1',\n    case\n        when lower(referral_brand) = 'pro plan' and kc_pet_subject_line = 1 then '1A'\n        when lower(referral_brand) = 'pro plan' and kc_pet_subject_line = 2 then '1B'\n        when lower(referral_brand) = 'pro plan' and kc_pet_subject_line = 3 then '1C'\n        when lower(referral_brand) = 'pro plan' and kc_pet_subject_line = 4 then '1D'\n        when lower(referral_brand) = 'beta' and kc_pet_subject_line = 1 then '2A'\n        when lower(referral_brand) = 'beta' and kc_pet_subject_line = 2 then '2B'\n        when lower(referral_brand) = 'beta' and kc_pet_subject_line = 3 then '2C'\n        when lower(referral_brand) = 'beta' and kc_pet_subject_line = 4 then '2D'\n        when lower(referral_brand) = 'bakers' and kc_pet_subject_line = 1 then '3A'\n        when lower(referral_brand) = 'bakers' and kc_pet_subject_line = 2 then '3B'\n        when lower(referral_brand) = 'bakers' and kc_pet_subject_line = 3 then '3C'\n        when lower(referral_brand) = 'bakers' and kc_pet_subject_line = 4 then '3D'\n        when lower(referral_brand) = '' and kc_pet_subject_line = 1 then '0A'\n        when lower(referral_brand) = '' and kc_pet_subject_line = 2 then '0B'\n        when lower(referral_brand) = '' and kc_pet_subject_line = 3 then '0C'\n        when lower(referral_brand) = '' and kc_pet_subject_line = 4 then '0D'\t\tend,\n    0,\n    name_urn,\n    current_date,\n    email,\n    1,\n    1,\n    current_date,\n    138\nfrom ${Database}.temp.npp04398_kennelclub_consumer_welcome;\n\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    trim(case when email_type = 'Email 18' then 'NPP07290' else  'NPP04398_C' end),\n    trim(case when email_type = 'Email 18' then 'NPP07290' else  'NPP04398_C' end),\n    case when email_type = 'Email 18' then '1' else trim(replace(email_type,'Email ','')) end,\n    case\n        when lower(referral_brand) = 'pro plan' and kc_pet_subject_line = 1 then '1A'\n        when lower(referral_brand) = 'pro plan' and kc_pet_subject_line = 2 then '1B'\n        when lower(referral_brand) = 'pro plan' and kc_pet_subject_line = 3 then '1C'\n        when lower(referral_brand) = 'pro plan' and kc_pet_subject_line = 4 then '1D'\n        when lower(referral_brand) = 'beta' and kc_pet_subject_line = 1 then '2A'\n        when lower(referral_brand) = 'beta' and kc_pet_subject_line = 2 then '2B'\n        when lower(referral_brand) = 'beta' and kc_pet_subject_line = 3 then '2C'\n        when lower(referral_brand) = 'beta' and kc_pet_subject_line = 4 then '2D'\n        when lower(referral_brand) = 'bakers' and kc_pet_subject_line = 1 then '3A'\n        when lower(referral_brand) = 'bakers' and kc_pet_subject_line = 2 then '3B'\n        when lower(referral_brand) = 'bakers' and kc_pet_subject_line = 3 then '3C'\n        when lower(referral_brand) = 'bakers' and kc_pet_subject_line = 4 then '3D'\n        when lower(referral_brand) = '' and kc_pet_subject_line = 1 then '0A'\n        when lower(referral_brand) = '' and kc_pet_subject_line = 2 then '0B'\n        when lower(referral_brand) = '' and kc_pet_subject_line = 3 then '0C'\n        when lower(referral_brand) = '' and kc_pet_subject_line = 4 then '0D'\n    end,\n    0,\n    name_urn,\n    current_date,\n    email,\n    1,\n    1,\n    current_date,\n    138\nfrom ${Database}.temp.npp04398_kennelclub_consumer_em2_17;\n\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_1 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body,                kc_pet_size, kc_profile_completed,  pet_dob_known, kc_next_chapter, kc_source, gp_shopmium_code, gp_product_name, kc_pet_subject_line, referral_brand, npp_ecrm_yp, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_welcome;\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_2 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed,  pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 2';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_3 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed,  pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 3';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_4 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed,  pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 4';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_5 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed,  pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 5';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_6 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed,  pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 6';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_7 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed,  pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 7';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_8 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed,  pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 8';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_9 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed,  pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 9';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_10 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed, pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 10';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_11 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed, pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 11';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_12 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed, pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 12';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_13 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed, pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 13';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_14 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed, pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 14';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_15 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed, pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 15';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_16 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed, pet_dob_known, kc_source, kc_pet_subject_line, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 16';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_17 as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_subject, kc_pet_salutation, kc_pet_body, kc_pet_gender, kc_pet_size, kc_profile_completed, pet_dob_known, kc_source, kc_pet_subject_line, discount_code, referral_brand, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 17';\ncreate or replace table ${Database}.jobs.NPP04398_kennel_club_consumer_email_18_Hypercare as select name_urn, npp_ecrm_uniqueid, email, forename, kc_pet_body, pet_dob_known, kog_pack from ${Database}.temp.npp04398_kennelclub_consumer_em2_17 where email_type = 'Email 18';\n\n/******************************************************************************************\n   KC breeder acquisition\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\n delete from ${Database}.db.comms_hist where trim(campaign_id) = 'NPP08662' and drop_date = current_date;\n\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ncreate or replace table ${Database}.temp.npp_kc_acquisition_supps\nas\nselect distinct\n    xr.cid,\n    trim(ch.promotion_id) as promotion_id,\n    trim(ch.pack_id) as pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on trim(ch.name_urn) = xr.name_urn\nwhere trim(programme_id) = 'E'\n    and (trim(promotion_id) ='NPP05478_1B' or trim(promotion_id) in ('NPP08662_1','NPP08662_2','NPP08662_3'))\n    and drop_date >= Current_date()-60; --keep excluding the historic email(NPP05478)\n\n\ncreate or replace table ${Database}.temp.npp_kc_acquisition_e_supps\nas\nselect distinct\n    xr.email,\n    su.promotion_id,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.npp_kc_acquisition_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n-- Email 1\n-- Audience: Emailable, opted in, positive brand_campaignable flag to pro plan breeders or beta breeder, source of Kennel Club breeders in last 24 hours\n-- Timings: 1 day after sign-up\n\ncreate or replace table ${Database}.temp.NPP08662_kc_breeder_acquisition\nas\nselect\n    name_urn,\n    email,\n    title,\n    forename,\n    lastname,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    'E|NPP08662|NPP08662_1|'||case when brand_id = 136 then '1'\n                                 when brand_id = 137 then '2'\n                                  end||'|1' as kog_pack\nfrom (\n         select\n             cd.cid,\n             cd.name_urn,\n             cb.email_brand as email,\n             title,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             lastname,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             row_number() over(partition by cb.email_brand order by cb.first_date_brand nulls last) as em_run\n         from ${Database}.live.cid_details cd\n         inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n         inner join (\n                        select\n                            x.cid,\n                            trim(n.name_urn) as name_urn\n                        from ${Database}.db.names n\n                        inner join ${Database}.live.xref_name_urn x on x.name_urn = trim(n.name_urn)\n                        where (\n                               n.source_brand_id = (select brand_id from ${Database}.db.ref_brand where lower(trim(brand)) = 'pro plan breeder')\n                               or\n                               n.source_brand_id = (select brand_id from ${Database}.db.ref_brand where lower(trim(brand)) = 'beta breeder')\n                               )\n                            and trim(n.source) = 'REG_KC'\n                            and datediff(day,n.source_date,current_date()) < 3  --put as 3 days in case of failures\n                            and x.cid not in (\n                                                 select\n                                                     x.cid\n                                                 from ${Database}.db.names n\n                                                 inner join ${Database}.live.xref_name_urn x on x.name_urn = trim(n.name_urn)\n                                                 where trim(n.source) = 'REG_THG'\n                                                     and (\n                                                       n.source_brand_id = (select brand_id from ${Database}.db.ref_brand where lower(trim(brand)) = 'pro plan breeder')\n                                                       or \n                                                       n.source_brand_id = (select brand_id from ${Database}.db.ref_brand where lower(trim(brand)) = 'beta breeder')\n                                                       )\n                                             )\n                    ) br on cd.cid = br.cid\n         left join ${Database}.temp.npp_kc_acquisition_supps s on cd.cid = s.cid\n                                                              and (\n                                                               (s.promotion_id ='NPP05478_1B' and s.pack_id = '1B')\n                                                                or\n                                                                s.promotion_id = 'NPP08662_1'\n                                                                )\n         left join ${Database}.temp.npp_kc_acquisition_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                                                 and (\n                                                                (es.promotion_id ='NPP05478_1B' and es.pack_id = '1B')\n                                                                or\n                                                                es.promotion_id = 'NPP08662_1'\n                                                                )\n         where cb.emailable = 1\n             and (\n               cb.brand_id = (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'pro plan breeder')\n                or\n               cb.brand_id = (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'beta breeder')\n               )\n             and cb.brand_campaignable = 1\n             and s.cid is null\n             and es.email is null\n     ) em\nwhere em_run = 1;\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP08662',\n    'NPP08662_1',\n    case when brand_id = 136 then '1'\n         when brand_id = 137 then '2'\n    end as cell_id,\n    '1',\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NPP08662_kc_breeder_acquisition;\n\n-- Email 2\n-- Audience: Emailable, opted in, received Email 1 14 - 16 days ago and consumer has not yet registered on the Purina Shop\n\ncreate or replace table ${Database}.temp.NPP08662_kc_breeder_acquisition_fup\nas\nselect\n    name_urn,\n    email,\n    title,\n    forename,\n    lastname,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    'E|NPP08662|NPP08662_2|'||case when brand_id = 136 then '1'\n                                 when brand_id = 137 then '2'\n                                  end||'|1' as kog_pack\nfrom (\n         select\n             cd.cid,\n             cd.name_urn,\n             cb.email_brand as email,\n             title,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             lastname,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             row_number() over(partition by cb.email_brand order by cb.first_date_brand nulls last) as em_run\n         from ${Database}.live.cid_details cd\n         inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n         join (\n                           select distinct\n                               cid,\n                               promotion_id,\n                               pack_id,\n                               drop_date\n                           from ${Database}.live.xref_name_urn xr\n                           join ${Database}.db.comms_hist ch on ch.name_urn = xr.name_urn\n                           where promotion_id in ('NPP08662_1') and drop_date <= current_date-14 and ch.drop_date >= current_date-16\n                           and xr.cid not in (select\n                                                     x.cid\n                                                 from ${Database}.db.names n\n                                                 inner join ${Database}.live.xref_name_urn x on x.name_urn = trim(n.name_urn)\n                                                 where trim(n.source) = 'REG_THG'\n                                                     and (\n                                                       n.source_brand_id = (select brand_id from ${Database}.db.ref_brand where lower(trim(brand)) = 'pro plan breeder')\n                                                       or \n                                                       n.source_brand_id = (select brand_id from ${Database}.db.ref_brand where lower(trim(brand)) = 'beta breeder')\n                                                       )\n                                             )\n                       ) ch on ch.cid = cd.cid\n         left join ${Database}.temp.npp_kc_acquisition_supps s on cd.cid = s.cid\n                                                              and s.promotion_id = 'NPP08662_2'\n         left join ${Database}.temp.npp_kc_acquisition_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                                              and es.promotion_id = 'NPP08662_2'\n         where cb.emailable = 1\n             and (\n               cb.brand_id = (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'pro plan breeder')\n                or\n               cb.brand_id = (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'beta breeder')\n               )\n             and cb.brand_campaignable = 1\n             and s.cid is null\n             and es.email is null\n     ) em\nwhere em_run = 1;\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP08662',\n    'NPP08662_2',\n    case when brand_id = 136 then '1'\n         when brand_id = 137 then '2'\n    end as cell_id,\n    '1',\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NPP08662_kc_breeder_acquisition_fup;\n\n-- Email 3\n-- Audience: Emailable, Consumer received the initial email 56-62 days ago (Adestra ID 28107), Csource of Kennel Club \n\t--Consumer has not yet registered on the Purina Shop (consumer data has not come in via the THG feed with a Site Name for Pro Plan Breeder or Beta Breeder) \n\n\ncreate or replace table ${Database}.temp.NPP08662_kc_breeder_acquisition_fup_2\nas\nselect\n    name_urn,\n    email,\n    title,\n    forename,\n    lastname,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    'E|NPP08662|NPP08662_3|'||case when brand_id = 136 then '1'\n                                 when brand_id = 137 then '2'\n                                  end||'|1' as kog_pack\nfrom (\n         select\n             cd.cid,\n             cd.name_urn,\n             cb.email_brand as email,\n             title,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             lastname,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             row_number() over(partition by cb.email_brand order by cb.first_date_brand nulls last) as em_run\n         from ${Database}.live.cid_details cd\n         inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n         join (\n                           select distinct\n                               cid,\n                               promotion_id,\n                               pack_id,\n                               drop_date\n                           from ${Database}.live.xref_name_urn xr\n                           join ${Database}.db.comms_hist ch on ch.name_urn = xr.name_urn\n                           where (\n                                   \n         \n                                    promotion_id in ('NPP08662_1') and drop_date <= current_date-56 \n                                 ) \n                           and xr.cid not in (select\n                                                     x.cid\n                                                 from ${Database}.db.names n\n                                                 inner join ${Database}.live.xref_name_urn x on x.name_urn = trim(n.name_urn)\n                                                 where trim(n.source) = 'REG_THG'\n                                                     and (\n                                                       n.source_brand_id = (select brand_id from ${Database}.db.ref_brand where lower(trim(brand)) = 'pro plan breeder')\n                                                       or \n                                                       n.source_brand_id = (select brand_id from ${Database}.db.ref_brand where lower(trim(brand)) = 'beta breeder')\n                                                       )\n                                             )\n                       ) ch on ch.cid = cd.cid\n         left join ${Database}.temp.npp_kc_acquisition_supps s on cd.cid = s.cid\n                                                              and s.promotion_id = 'NPP08662_3'\n         left join ${Database}.temp.npp_kc_acquisition_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                                              and es.promotion_id = 'NPP08662_3'\n         where cb.emailable = 1\n             and (\n               cb.brand_id = (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'pro plan breeder')\n                or\n               cb.brand_id = (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'beta breeder')\n               )\n             and cb.brand_campaignable = 1\n             and s.cid is null\n             and es.email is null\n     ) em\nwhere em_run = 1;\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP08662',\n    'NPP08662_3',\n    case when brand_id = 136 then '1'\n         when brand_id = 137 then '2'\n    end as cell_id,\n    '1',\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NPP08662_kc_breeder_acquisition_fup_2;\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\ndrop table if exists ${Database}.temp.npp_kc_acquisition_supps;\ndrop table if exists ${Database}.temp.npp_kc_acquisition_e_supps;\n\ncreate or replace table ${Database}.jobs.NPP08662_kennel_club_breeder_email_AQ_1 as select name_urn, forename, email, kog_pack from ${Database}.temp.NPP08662_kc_breeder_acquisition;\ncreate or replace table ${Database}.jobs.NPP08662_kennel_club_breeder_email_AQ_fup as select name_urn, forename, email, kog_pack from ${Database}.temp.NPP08662_kc_breeder_acquisition_fup;\ncreate or replace table ${Database}.jobs.NPP08662_kennel_club_breeder_email_AQ_fup_2 as select name_urn, forename, email, kog_pack from ${Database}.temp.NPP08662_kc_breeder_acquisition_fup_2;\n\n/******************************************************************************************\nTHG LIVE CLEAR\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where promotion_id = 'NPP07052' and drop_date = current_date();\n\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ncreate or replace table ${Database}.temp.npp_live_clear_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id ='NPP07052';\n\n\ncreate or replace table ${Database}.temp.npp_live_clear_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.npp_live_clear_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n--email 1 sent two days after purchasing 'live clear' from thg\n\ncreate or replace table ${Database}.temp.npp07052_live_clear_purchase\nas\nselect\n    name_urn,\n    title,\n    forename,\n    lastname,\n    brand_id,\n    email,\n    1 as cell,\n    1 as batch,\n    case\n        when right(kog_pack,1) = '1'      and forename > '' then forename||', Thank you for starting your Pro Plan LIVECLEAR® experience'\n        when right(kog_pack,1) = '1'     then 'Thank you for starting your Pro Plan LIVECLEAR® experience'\n        when right(kog_pack,1) = '2'     and forename > '' then forename||', Tips to maximise your food journey'\n        when right(kog_pack,1) = '2'     then 'Tips to maximise your food journey'\n        end as lc_subjectline,\n    case\n        when right(kog_pack,1) = '1'     then 'Try these handy tips'\n        when right(kog_pack,1) = '2'     then 'So you and your cat can get closer'\n    end as lc_preheader,\n    brand_preference,\n    brand_engagement,\n    right(kog_pack,1) as pack_id,\n    kog_pack\nfrom (\n         select\n             *,\n             'E|NPP07052|NPP07052|1|'|| to_char(ntile(2) over (order by email,lastname,forename)) as kog_pack\n         from (\n                  select\n                      cd.name_urn,\n                      cb.email_brand as email,\n                      title,\n                      case\n                          when cd.firstname is null then ''\n                          when length(cd.firstname) <= 1 then ''\n                          when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                          else cd.firstname\n                      end as forename,\n                      lastname,\n                      thg_product_id,\n                      cb.brand_id,\n                      cb.brand_preference,\n                      cb.brand_engagement,\n                      row_number() over(partition by cb.email_brand order by case when trim(cb.email_brand) = '' then 1 else 0 end, case when trim(cd.firstname) = '' then 1 else 0 end, cb.first_date_brand nulls last) as em_run\n                  from ${Database}.live.cid_details cd\n                  inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n                  left join  ${Database}.temp.npp_live_clear_supps s on cb.cid = s.cid\n                                                                    and s.cell_id = '1'\n                  left join  ${Database}.temp.npp_live_clear_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                                                       and es.cell_id = '1'\n                  inner join (\n                                 select\n                                     xr.cid,\n                                     left(rpr.product_name,8) as thg_product_id,\n                                     min(tr.despatched_date) as order_date\n                                 from ${Database}.live.xref_name_urn xr\n                                 join ${Database}.db.npp_thg_trans tr on 'REG_THG|'||cast(customer_id as varchar) = xr.name_urn\n                                 join ${Database}.db.ref_product rpr on left(rpr.product_name,8) = to_char(tr.ordered_Product_id)\n                                 where lower(rpr.product_name) regexp '.*live clear.*'\n                                     and tr.despatched_date <= current_date - 2\n                                     and tr.despatched_date >= current_date - 7\n                                     and tr.despatched_date >= '2020-05-15'\n                                 group by 1,2\n                             ) pr on pr.cid = cd.cid\n                  where cb.emailable = 1\n                      and cb.business_unit_id = 5\n                      and cb.brand_preference = 1\n                      and s.cid is null\n                      and es.email is null\n              ) em1\n         where em1.em_run = 1\n     ) a;\n\n\ncreate or replace table ${Database}.temp.npp07052_live_clear_despatched\nas\nselect\n    name_urn,\n    title,\n    forename,\n    lastname,\n    brand_id,\n    email,\n    2 as cell,\n    1 as batch,\n    case\n        when right(kog_pack,1) = '1'      and forename > '' then forename||', have you and your cat been enjoying Pro Plan LIVECLEAR®?'\n        when right(kog_pack,1) = '1'     then 'Have you and your cat been enjoying Pro Plan LIVECLEAR®?'\n        when right(kog_pack,1) = '2'     and forename > '' then forename||', subscribe and save on your next order'\n        when right(kog_pack,1) = '2'     then 'Subscribe and save on your next order'\n    end as lc_subjectline,\n    'We’d like to hear from you' lc_preheader,\n     case\n        when thg_product_id = '12507612' then 'AC_tur_28'\n        when thg_product_id = '12507613' then 'AC_tur_14'\n        when thg_product_id = '12507614' then 'AC_sal_14'\n        when thg_product_id = '12507615' then 'KC_tur_14'\n        when thg_product_id = '12507616' then 'AC_sal_28'\n        when thg_product_id = '12507617' then 'SC_tur_28'\n        end as lc_product,\n    brand_preference,\n    brand_engagement,\n    right(kog_pack,1) as pack_id,\n    kog_pack\nfrom (\n         select\n             *,\n             'E|NPP07052|NPP07052|2|'|| to_char(ntile(2) over (order by email,lastname,forename)) as kog_pack\n         from (\n                  select\n                      cd.name_urn,\n                      cb.email_brand as email,\n                      title,\n                      case\n                          when cd.firstname is null then ''\n                          when length(cd.firstname) <= 1 then ''\n                          when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                          else cd.firstname\n                      end as forename,\n                      lastname,\n                      cb.brand_id,\n                      thg_product_id,\n                      cb.brand_preference,\n                      cb.brand_engagement,\n                      row_number() over(partition by cb.email_brand order by case when trim(cb.email_brand) = '' then 1 else 0 end, case when trim(cd.firstname) = '' then 1 else 0 end, cb.first_date_brand nulls last) as em_run\n                  from ${Database}.live.cid_details cd\n                  inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n                  left join  ${Database}.temp.npp_live_clear_supps s on cb.cid = s.cid\n                                                                    and s.cell_id = '2'\n                  left join  ${Database}.temp.npp_live_clear_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                                                       and es.cell_id = '2'\n                  inner join (\n                              select\n                                  xr.cid,\n                                  left(rpr.product_name,8) as thg_product_id,\n                                  min(tr.despatched_date) as order_date\n                              from ${Database}.live.xref_name_urn xr\n                              join ${Database}.db.npp_thg_trans tr on 'REG_THG|'||cast(customer_id as varchar) = xr.name_urn\n                              join ${Database}.db.ref_product rpr on left(rpr.product_name,8) = to_char(tr.ordered_Product_id)\n                              where lower(rpr.product_name) regexp '.*live clear.*'\n                                  and tr.despatched_date <= current_date - 28\n                                  and tr.despatched_date >= current_date - 33\n                              group by 1,2\n                             ) pr on pr.cid = cd.cid\n                  where cb.emailable = 1\n                      and cb.business_unit_id = 5\n                      and cb.brand_preference = 1\n                      and s.cid is null\n                      and es.email is null\n              ) em1\n         where em1.em_run = 1\n     ) b;\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP07052',\n    'NPP07052',\n    '1',\n    pack_id,\n    0,\n    name_urn,\n    current_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    current_date,\n    brand_id\nfrom ${Database}.temp.npp07052_live_clear_purchase;\n\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP07052',\n    'NPP07052',\n    '2',\n    pack_id,\n    0,\n    name_urn,\n    current_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    current_date,\n    brand_id\nfrom ${Database}.temp.npp07052_live_clear_despatched;\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.npp07052_liveclear_postpurchase_1 as select name_urn, forename, email, cell, batch, lc_subjectline, lc_preheader, kog_pack from ${Database}.temp.NPP07052_live_clear_purchase;\ncreate or replace table ${Database}.jobs.npp07052_liveclear_postpurchase_2 as select name_urn, forename, email, cell, batch, lc_subjectline, lc_preheader, lc_product, kog_pack from ${Database}.temp.NPP07052_live_clear_despatched;\n\n\n/******************************************************************************************\n   KITTEN CODE LIVE CLEAR INTRODUCTION\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where promotion_id = 'NPP08813' and drop_date = current_date();\n\n\n/******************************************************************************************\n   KITTEN CODE LIVE CLEAR SUPPRESSIONS\n******************************************************************************************/\n\ndrop table if exists ${Database}.temp.npp_kc_liveclear_supps;\ndrop table if exists ${Database}.temp.npp_kc_liveclear_e_supps;\ndrop table if exists ${Database}.temp.npp_kc_liveclear_mod_6m;\ndrop table if exists ${Database}.temp.npp_kc_liveclear_mod_e_6m;\n\nCREATE OR REPLACE TABLE ${Database}.temp.npp_kc_liveclear_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id = 'NPP08813';\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.npp_kc_liveclear_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.npp_kc_liveclear_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n--pick up all records that have received live clear module in the past for other kittens\nCREATE OR REPLACE TABLE ${Database}.temp.npp_kc_liveclear_mod_6m\nas\nselect \n    xr.cid,\n    max(ch.cell_id) as cell_id,            \n    max(ch.pack_id) as pack_id,\n    max(ch.drop_date) as drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'A'                            --analysis\n    and promotion_id = 'NPP08813_1'\n    and drop_date >= current_date - 6\ngroup by 1;\n\nCREATE OR REPLACE TABLE ${Database}.temp.npp_kc_liveclear_mod_e_6m\nas\nselect distinct\n    xr.email,\n    lc.cell_id,\n    lc.pack_id,\n    lc.drop_date\nfrom ${Database}.temp.npp_kc_liveclear_mod_6m lc\ninner join ${Database}.live.xref_email xr on lc.cid = xr.cid;\n\n\n/******************************************************************************************\n   KITTEN CODE LIVE CLEAR EMAIL SELECTIONS\n******************************************************************************************/\n\n-- Create pets table\ndrop table if exists ${Database}.temp.NPP08813_kc_liveclear_pets;\n\nCREATE OR REPLACE TABLE ${Database}.temp.NPP08813_kc_liveclear_pets\nas \nselect\n    cid,\n    max(case when pet_run = 1 then pet_name else '' end) as pet_name_1,\n    max(case when pet_run = 2 then pet_name else '' end) as pet_name_2,\n    max(case when pet_run = 3 then pet_name else '' end) as pet_name_3,\n    max(case when pet_run = 1 then pet_dob end) as pet_dob_1,\n    max(case when pet_run = 2 then pet_dob end) as pet_dob_2,\n    max(case when pet_run = 3 then pet_dob end) as pet_dob_3,\n    sum(case when pet_name > '' then 1 else 0 end) as num_pets,\n    min(pet_data_date) as pet_data_date\nfrom (\n         select\n             cid,\n             pet_dob,\n             pet_name,\n             pet_data_date,\n             row_number() over(partition by cid order by case when pet_name > '' then 1 else 0 end desc, pet_data_date, pet_dob nulls last) as pet_run --only same age kittens\n         from (\n                  select distinct\n                      p.cid,\n                      p.pet_dob,\n                      p.pet_name, \n                      p.pet_data_date\n                --*\n                  from ${Database}.live.cid_pet p\n                 -- left join ${Database}.live.names n on n.name_urn = p.name_urn\n                  where \n                        ((contains(lower(p.source),'reg_wun') and contains(lower(p.name_urn),'kitten code'))       --kitten code registered\n                      or p.pet_dob >= add_months(current_date,-12)) \n                      and p.pet_data_date > '2021-09-28'     --prevent old data from being included\n                      and lower(p.pet_type) = 'cat'\n                      and p.pet_dob is not null\n              ) a\n     ) b\ngroup by 1\n;\n\n--Audience: Targets emailable and opted in consumers who have signed up to Kitten Code,or have come in via another source with a kitten under 12 months.\n--Timings: 14 - 16 days after sign up\n\ndrop table if exists ${Database}.temp.NPP08813_kc_liveclear cascade;\n\nCREATE OR REPLACE TABLE ${Database}.temp.NPP08813_kc_liveclear\nas\nselect\n    em.cid,\n    em.name_urn,\n    em.title,\n    em.email,\n    em.forename,\n    em.surname,\n    em.kitten_name,\n    em.subject_line,\n    em.pet_data_date,\n    em.brand_id,\n    em.brand_preference, \n    em.brand_engagement,\n    ntile(2) over(order by em.name_urn) as pack_id,\n    'E|NPP08813|NPP08813|1|'||to_char(ntile(2) over(order by em.name_urn)) as kog_pack    \nfrom (\n         select\n             cd.name_urn,\n             cd.cid,\n             lower(cb.email_brand) as email,\n             title,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             cd.lastname as surname,\n             case\n                 when p.pet_name_3 > '' then 'your kittens'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2\n                 when p.pet_name_1 > '' then p.pet_name_1\n                 else 'your kitten'\n             end as kitten_name,\n             case\n                 when p.pet_name_1 > '' and right(p.pet_name_1,1) in ('s','S') then 'Reduce '||p.pet_name_1||''' allergens with LiveClear'\n                 when p.pet_name_1 > '' then 'Reduce '||p.pet_name_1||'''s allergens with LiveClear'\n                 else 'Reduce your kitten''s allergens with LiveClear'\n             end as subject_line,\n             p.pet_data_date,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,            \n             row_number() over(partition by lower(cb.email_brand) order by case when cb.brand_id = 143 then 1 else 0 end desc,p.pet_data_date) as em_run\n         --select count(*), count(distinct cd.cid), count(distinct cb.email_brand), min(pet_data_date), max(pet_data_date)\n         from ${Database}.live.cid_details cd\n         inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n         inner join ${Database}.temp.NPP08813_kc_liveclear_pets p on cd.cid = p.cid   \n         left join ${Database}.temp.npp_kc_liveclear_supps s on cd.cid = s.cid\n                                                              and s.cell_id = '1'\n         left join ${Database}.temp.npp_kc_liveclear_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                                              and es.cell_id = '1' \n         left join ${Database}.temp.npp_kc_liveclear_mod_6m ms on cd.cid = ms.cid\n                                                              and ms.cell_id = '1'\n         left join ${Database}.temp.npp_kc_liveclear_mod_e_6m mes on lower(cb.email_brand) = lower(mes.email)\n                                                              and mes.cell_id = '1'\n             where cb.emailable = 1\n             and(cb.brand_preference = 1 or (cb.brand_engagement = 1 and (cb.brand_preference <> 0)))   \n             and cb.brand_id in (select brand_id from ${Database}.live.ref_brand where brand = 'Kitten Code')\n             and p.pet_data_date >= dateadd(day,-16,current_date) and p.pet_data_date <= dateadd(day,-14,current_date) -- signed up between 14-16 days (just incase of build failures over weekend etc.)\n             and s.cid is null\n             and es.email is null\n             and ms.cid is null\n             and mes.email is null\n     ) em\nwhere em.em_run = 1;\n\n\n--select * from ${Database}.temp.NPP08813_kc_liveclear;\n\nCREATE OR REPLACE TABLE ${Database}.jobs.NPP08813_kc_liveclear_a\nas\nselect\n    name_urn,\n    forename,\n    email,\n    subject_line,\n    1 as cell,\n    pack_id as batch,\n    kog_pack\nfrom ${Database}.temp.NPP08813_kc_liveclear\nwhere pack_id=1\n;\n\nCREATE OR REPLACE TABLE ${Database}.jobs.NPP08813_kc_liveclear_b\nas\nselect\n    name_urn,\n    forename,\n    email,\n    subject_line,\n    1 as cell,\n    pack_id as batch,\n    kog_pack\nfrom ${Database}.temp.NPP08813_kc_liveclear\nwhere pack_id=2\n;\n\ndrop table if exists ${Database}.temp.NPP08813_kc_liveclear_pets;\ndrop table if exists ${Database}.temp.npp_kc_liveclear_supps;\ndrop table if exists ${Database}.temp.npp_kc_liveclear_e_supps;\ndrop table if exists ${Database}.temp.npp_kc_liveclear_mod_6m;\ndrop table if exists ${Database}.temp.npp_kc_liveclear_mod_e_6m;\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP08813',\n    'NPP08813',\n    '1',\n    pack_id,\n    0,\n    name_urn,\n    current_date,\n    email,\n    brand_preference, \n    brand_engagement,\n    current_date,\n    143\nfrom ${Database}.temp.NPP08813_kc_liveclear;\n\n\n\n/******************************************************************************************\n   KITTEN CODE CONSUMER JOURNEY\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where promotion_id = 'NPP05975' and drop_date = current_date();\n\n\n/******************************************************************************************\n   KITTEN CODE SUPPRESSIONS\n******************************************************************************************/\n\ndrop table if exists ${Database}.temp.npp_kitten_code_supps;\n\nCREATE OR REPLACE TABLE ${Database}.temp.npp_kitten_code_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,            \n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id = 'NPP05975';\n\n\ndrop table if exists ${Database}.temp.npp_kitten_code_e_supps;\n\nCREATE OR REPLACE TABLE ${Database}.temp.npp_kitten_code_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,        \n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.npp_kitten_code_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n/******************************************************************************************\n   KITTEN CODE LIVE CLEAR MODULE SELECTIONS\n******************************************************************************************/\n\ndrop table if exists ${Database}.temp.npp_kitten_code_live_clear_4w;\ndrop table if exists ${Database}.temp.npp_kitten_code_live_clear_e_4w;\ndrop table if exists ${Database}.temp.npp_kitten_code_live_clear_6m;\ndrop table if exists ${Database}.temp.npp_kitten_code_live_clear_e_6m;\n\n--select dateadd(week,-4,current_date), dateadd(month,-6,current_date);\n\nCREATE OR REPLACE TABLE ${Database}.temp.npp_kitten_code_live_clear_4w\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,            \n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and drop_date >= dateadd(week,-4,current_date)\n    and promotion_id = 'NPP08813'\n    and cell_id = 1;\n\nCREATE OR REPLACE TABLE ${Database}.temp.npp_kitten_code_live_clear_e_4w\nas\nselect distinct\n    xr.email,\n    lc.cell_id,\n    lc.pack_id,\n    lc.drop_date\nfrom ${Database}.temp.npp_kitten_code_live_clear_4w lc\ninner join ${Database}.live.xref_email xr on lc.cid = xr.cid;\n\n--pick up all records that have received live clear module in the past\nCREATE OR REPLACE TABLE ${Database}.temp.npp_kitten_code_live_clear_6m\nas\nselect \n    xr.cid,\n    max(ch.cell_id) as cell_id,            \n    max(ch.pack_id) as pack_id,\n    max(ch.drop_date) as drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'A'                            --analysis\n    and promotion_id = 'NPP08813_1'\ngroup by 1;\n\nCREATE OR REPLACE TABLE ${Database}.temp.npp_kitten_code_live_clear_e_6m\nas\nselect distinct\n    xr.email,\n    lc.cell_id,\n    lc.pack_id,\n    lc.drop_date\nfrom ${Database}.temp.npp_kitten_code_live_clear_6m lc\ninner join ${Database}.live.xref_email xr on lc.cid = xr.cid;\n\n\n/******************************************************************************************\n   KITTEN CODE EMAIL SELECTIONS\n******************************************************************************************/\n\n\n\n-- Create pets table\ndrop table if exists ${Database}.temp.npp05975_kitten_code_pets;\n\ncreate or replace table ${Database}.temp.npp05975_kitten_code_pets\nas\nselect\n    cid,\n    pet_dob,\n    email_type,\n    max(case when pet_run = 1 then pet_colour else '' end) as pet_colour,\n    max(case when pet_run = 1 then pet_name else '' end) as pet_name_1,\n    max(case when pet_run = 2 then pet_name else '' end) as pet_name_2,\n    max(case when pet_run = 3 then pet_name else '' end) as pet_name_3,\n    max(case when pet_run = 4 then pet_name else '' end) as pet_name_4,\n    sum(case when pet_name > '' then 1 else 0 end) as num_pets,\n    min(case when pet_run = 1 then pet_gender else '' end) as pet_gender,\n    first_value(pet_dob)over(partition by cid order by pet_dob nulls first) as dob_is_null\nfrom (\n         select\n             cid,\n             pet_dob,\n             email_type,\n             pet_name,\n             pet_gender,\n             pet_colour,\n             row_number() over(partition by cid, pet_dob \n                                order by case when pet_name > '' then 1 else 0 end desc, \n                                         case when pet_colour > '' then 1 else 0 end desc,\n                                         pet_dob nulls last) as pet_run --only same age kittens\n         from (\n                  select distinct\n                      p.cid,\n                      p.pet_dob,\n                      case\n                          when p.pet_dob <= current_date-56 and p.pet_dob > current_date-61                             then 'Email 2' --8weeks\n                          when p.pet_dob <= current_date-63 and p.pet_dob > current_date-68                             then 'Email 3' --9weeks\n                          when p.pet_dob <= current_date-70 and p.pet_dob > current_date-75                             then 'Email 4' --10weeks\n                          when p.pet_dob <= current_date-77 and p.pet_dob > current_date-82                             then 'Email 5' --11weeks\n                          when p.pet_dob <= current_date-84 and p.pet_dob > current_date-88                             then 'Email 6' --12weeks\n                          when p.pet_dob <= current_date-91 and p.pet_dob > current_date-96                             then 'Email 7' --13weeks\n                          when p.pet_dob <= current_date-98 and p.pet_dob > current_date-103                            then 'Email 8' --14weeks\n                          when p.pet_dob <= current_date-105 and p.pet_dob > current_date-110                           then 'Email 9' --15weeks\n                          when p.pet_dob <= add_months(current_date,-4) and p.pet_dob > add_months(current_date,-4)-5   then 'Email 10' --4months\n                          when p.pet_dob <= add_months(current_date,-5) and p.pet_dob > add_months(current_date,-5)-5   then 'Email 11'\n                          when p.pet_dob <= add_months(current_date,-6) and p.pet_dob > add_months(current_date,-6)-5   then 'Email 12'\n                          when p.pet_dob <= add_months(current_date,-7) and p.pet_dob > add_months(current_date,-7)-5   then 'Email 13'\n                          when p.pet_dob <= add_months(current_date,-8) and p.pet_dob > add_months(current_date,-8)-5   then 'Email 14'\n                          when p.pet_dob <= add_months(current_date,-9) and p.pet_dob > add_months(current_date,-9)-5   then 'Email 15'\n                          when p.pet_dob <= add_months(current_date,-10) and p.pet_dob > add_months(current_date,-10)-5 then 'Email 16'\n                          when p.pet_dob <= add_months(current_date,-11) and p.pet_dob > add_months(current_date,-11)-5 then 'Email 17'\n                          when p.pet_dob <= add_months(current_date,-12) and p.pet_dob > add_months(current_date,-12)-5 then 'Email 18'\n                          else ''\n                      end as email_type,\n                      trim(p.pet_name) as pet_name,\n                  case when p.pet_colour is not null then lower(replace(p.pet_colour,' &amp; ',' and ')) else '' end as pet_colour,--check which colours are wanted\n                  case\n                      when lower(p.pet_gender) in ('m','male') then 'M'\n                      when lower(p.pet_gender) in ('f','female') then 'F'\n                      else ''\n                  end as pet_gender\n                  from ${Database}.live.cid_pet p\n                  where ((lower(p.source) regexp '.*reg_wun.*' and lower(p.name_urn) regexp '.*kitten code.*') or (p.pet_dob >= add_months(current_date,-12) and p.pet_data_date > '2020-06-08'))\n                      and lower(p.pet_type) = 'cat'\n              ) a\n     ) b\ngroup by 1,2,3;\n\n-- Email 1 - Welcome\n--Audience: Targets emailable and opted in consumers who have signed up to Kitten Code (via Wunderman API), or have come in via another source with a kitten under 12 months.\n--Timings: 1 day after sign up\n\ndrop table if exists ${Database}.temp.npp05975_kittencode_welcome cascade;\n\nCREATE OR REPLACE TABLE ${Database}.temp.npp05975_kittencode_welcome\nas\nselect\n    em1.cid,\n    em1.name_urn,\n    em1.npp_ecrm_uniqueid,\n    em1.title,\n    em1.email,\n    em1.forename,\n    em1.surname,\n    em1.kitten_name_variation,--what goes in this field???\n    em1.kitten_name_variation_ces,\n    em1.kitten_name_variation_1,\n    em1.kitten_name_variation_2,\n--    em1.kitten_name_variation_3,\n--    em1.kitten_name_variation_4,\n--    em1.kitten_name_variation_5,\n--    em1.kitten_name_variation_6,\n--    em1.kitten_name_variation_7,\n--    em1.kitten_name_variation_8,\n\n    em1.pet_colour as kco_kitten_colour,\n    em1.kitten_next_chapter,\n    em1.brand_id,\n    em1.answer as kco_kitten_brand_preference,\n    cast('' as varchar(1)) as kco_liveclear,        -- not included after first sign-up (see LiveClear Introduction)\n    em1.pet_dob_known,\n    em1.brand_preference, \n    em1.brand_engagement,\n    ntile(2) over(order by name_urn) as kco_subject_line,\n\tcase when last_source_yp = 'REG_YOUR_PURINA' then 'Y' else '' end as npp_ecrm_yp,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   \n    'E|NPP05975|NPP05975|1|'||to_char(ntile(2) over(order by name_urn)) as kog_pack    \nfrom (\n         select\n             cd.name_urn,\n             cd.cid,\n             sha2(cid.bbw_urn,256) as npp_ecrm_uniqueid, --Hashed Urn Change\n             lower(cb.email_brand) as email,\n             title,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             cd.lastname as surname,\n             case\n                 when p.pet_name_4 > '' then 'your kittens'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2\n                 when p.pet_name_1 > '' then p.pet_name_1\n                 else 'your kitten'\n             end as kitten_name_variation,\n             case\n                 when p.pet_name_4 > '' then 'your kittens'' journeys'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||'''s journeys'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2||'''s journeys'\n                 when p.pet_name_1 > '' then p.pet_name_1||'''s journey'\n                 else 'your kitten''s journey'\n             end as kitten_name_variation_ces,\n             case\n                 when p.pet_name_4 > '' then 'your kittens'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2\n                 when p.pet_name_1 > '' then p.pet_name_1\n                 else 'your kitten'\n             end as kitten_name_variation_1,\n             case\n                 when p.pet_name_4 > '' then 'your kittens'''\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||'''s'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2||'''s'\n                 when p.pet_name_1 > '' then p.pet_name_1||'''s'\n                 else 'your kitten''s'\n             end as kitten_name_variation_2,\n\n             case                              --we are expecting them all to have dob\n                 when p.pet_dob >= current_date-58                                  then 'Email 2'\n                 when p.pet_dob is null and cb.first_date_brand >= current_date-1   then 'Email 2'\n                 when p.pet_dob >= current_date-63                                  then 'Email 3'\n                 when p.pet_dob is null and cb.first_date_brand >= current_date-5   then 'Email 3'\n                 when p.pet_dob >= current_date-70                                  then 'Email 4'\n                 when p.pet_dob is null and cb.first_date_brand >= current_date-12  then 'Email 4'\n                 when p.pet_dob >= current_date-77                                  then 'Email 5'\n                 when p.pet_dob is not null and p.pet_dob >= current_date-75        then 'Email 5'\n                 when p.pet_dob >= current_date-84                                  then 'Email 6'\n                 when p.pet_dob is null and cb.first_date_brand >= current_date-26  then 'Email 6'\n                 when p.pet_dob >= current_date-91                                  then 'Email 7'\n                 when p.pet_dob is null and cb.first_date_brand >= current_date-33  then 'Email 7'\n                 when p.pet_dob >= current_date-98                                  then 'Email 8'\n                 when p.pet_dob is null and cb.first_date_brand >= current_date-40  then 'Email 8'\n                 when p.pet_dob >= current_date-105                                 then 'Email 9'\n                 when p.pet_dob is null and cb.first_date_brand >= current_date-47  then 'Email 9'\n                 when p.pet_dob >= add_months(current_date,-4)                                      then 'Email 10'\n                 when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-5)+54  then 'Email 10'\n                 when p.pet_dob >= add_months(current_date,-5)                                      then 'Email 11'\n                 when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-6)+54  then 'Email 11'\n                 when p.pet_dob >= add_months(current_date,-6)                                      then 'Email 12'\n                 when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-7)+54  then 'Email 12'\n                 when p.pet_dob >= add_months(current_date,-7)                                      then 'Email 13'\n                 when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-8)+54  then 'Email 13'\n                 when p.pet_dob >= add_months(current_date,-8)                                      then 'Email 14'\n                 when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-9)+54  then 'Email 14'\n                 when p.pet_dob >= add_months(current_date,-9)                                      then 'Email 15'\n                 when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-10)+54 then 'Email 15'\n                 when p.pet_dob >= add_months(current_date,-10)                                     then 'Email 16'\n                 when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-11)+54 then 'Email 16'\n                 when p.pet_dob >= add_months(current_date,-11)                                     then 'Email 17'\n                 when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-12)+54 then 'Email 17'\n                 when p.pet_dob >= add_months(current_date,-12)                                     then 'Email 18'  \n                 when p.pet_dob is null and cb.first_date_brand >= add_months(current_date,-13)+54 then 'Email 18'\n                 else ''\n             end as kitten_next_chapter,\n             p.pet_colour,\n             q.answer,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             case when p.dob_is_null is null then 'N' else 'Y' end as pet_dob_known,\n\t\t\t yp_source.last_source as last_source_yp,\n             row_number() over(partition by lower(cb.email_brand) order by case when cb.brand_id = 143 then 1 else 0 end desc,cb.first_date_brand) as em_run\n         from ${Database}.live.cid_details cd\n         inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n         inner join ${Database}.live.cid cid on cid.cid = cd.cid\n         left join ${Database}.temp.npp05975_kitten_code_pets p on cd.cid = p.cid\n         left join (select cid, \n\t\t\t\t\t\t   first_value(source)over(partition by cid order by data_date desc, source_date desc, case when source = 'REG_YOUR_PURINA' then 0 else 1 end) as last_source\n\t\t\t\t    from ${Database}.live.names\n                    where SOURCE_DATA_CONTROLLER_ID = 5\n\t\t\t\t   ) yp_source on yp_source.cid = cd.cid and last_source = 'REG_YOUR_PURINA'\n\t     left join (\n                     select \n                        cid,\n                        first_value(answer) over(partition by cid order by q.data_date desc) as answer\n                    from ${Database}.db.question q\n                    inner join ${Database}.live.xref_name_urn xr on xr.name_urn = q.name_urn\n                    where question_id in (\n                                            select question_id from ${Database}.db.ref_question\n                                            where question = 'What do you feed your kitten?'\n                                         )\n                    and answer in ('Felix','Go Cat','Pro Plan','Purina ONE')\n                    ) q on q.cid = cd.cid       \n         left join ${Database}.temp.npp_kitten_code_supps s on cd.cid = s.cid\n                                                              and s.cell_id = '1'\n         left join ${Database}.temp.npp_kitten_code_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                                                 and es.cell_id = '1'\n             where cb.brand_id = (select brand_id from ${Database}.db.ref_brand where brand = 'Kitten Code')\n             and cb.emailable = 1\n             and (cb.brand_preference = 1 or (cb.brand_engagement = 1 and (cb.brand_preference <> 0)))             and cb.first_date_brand > dateadd(day,-5,current_date())  -- signed up in last 5 days just incase of build failures over weekend etc. \n             and s.cid is null\n             and es.email is null\n     ) em1\nwhere em1.em_run = 1;\n\n\n-- Email 2 to 18\n\n\ndrop table if exists ${Database}.temp.npp05975_kittencode_em2_18 cascade;\n\nCREATE OR REPLACE TABLE ${Database}.temp.npp05975_kittencode_em2_18\nas\nselect\n    em.name_urn,\n    em.npp_ecrm_uniqueid,\n    em.email,\n    em.title,\n    em.forename,\n    em.surname,\n    em.email_type,\n    em.kitten_name_variation,--what goes in this field???\n    em.kitten_name_variation_ces,\n    em.kitten_name_variation_1,\n    em.kitten_name_variation_2,\n    em.kitten_name_variation_3,\n    em.kitten_name_variation_4,\n    em.kitten_name_variation_5,\n    em.kitten_name_variation_6,\n    em.kitten_name_variation_7,\n    em.kitten_name_variation_8,\n    em.pet_gender,\n    em.pet_colour as kco_kitten_colour,\n    em.brand_id,\n    em.answer as kco_kitten_brand_preference, \n    em.kco_liveclear, \n    em.pet_dob_known,\n    em.brand_preference, \n    em.brand_engagement,\n    ntile(2) over(partition by email_type order by name_urn) as kco_subject_line,\n    npp_ecrm_yp,\n    'E|NPP05975|NPP05975|'||trim(replace(email_type,'Email ',''))||'|'||to_char(ntile(2) over(partition by email_type order by name_urn)) as kog_pack    \nfrom (\n         select\n             cd.cid,\n             sha2(cid.bbw_urn,256) as npp_ecrm_uniqueid, --Hashed Urn Change\n             cd.name_urn,\n             cd.title,\n             lower(cb.email_brand) as email,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             cd.lastname as surname,\n             case\n                 when p.pet_name_4 > '' then 'your kittens'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2\n                 when p.pet_name_1 > '' then p.pet_name_1\n                 else 'your kitten'\n             end as kitten_name_variation,\n             case\n                 when p.pet_name_4 > '' then 'your kittens'' journeys'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||'''s journeys'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2||'''s journeys'\n                 when p.pet_name_1 > '' then p.pet_name_1||'''s journey'\n                 else 'your kitten''s journey'\n             end as kitten_name_variation_ces,\n             case\n                 when p.pet_name_4 > '' then 'your kittens'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2\n                 when p.pet_name_1 > '' then p.pet_name_1\n                 else 'your kitten'\n             end as kitten_name_variation_1,\n             case\n                 when p.pet_name_4 > '' then 'your kittens'''\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||'''s'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2||'''s'\n                 when p.pet_name_1 > '' then p.pet_name_1||'''s'\n                 else 'your kitten''s'\n             end as kitten_name_variation_2,\n             case\n                 when p.pet_name_4 > '' then 'your kittens are'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||' are'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2||' are'\n                 when p.pet_name_1 > '' then p.pet_name_1||' is'\n                 else 'your kitten is'\n             end as kitten_name_variation_3,\n             case\n                 when p.pet_name_4 > '' then 'your kittens have'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||' have'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2||' have'\n                 when p.pet_name_1 > '' then p.pet_name_1||' has'\n                 else 'your kitten has'\n             end as kitten_name_variation_4,\n             case\n                 when p.pet_name_4 > '' then 'your kittens haven''t'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||' haven''t'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2||' haven''t'\n                 when p.pet_name_1 > '' then p.pet_name_1||' hasn''t'\n                 else 'your kitten hasn''t'\n             end as kitten_name_variation_5,\n                          case\n                 when p.pet_name_4 > '' then 'your kittens live'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||' live'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2||' live'\n                 when p.pet_name_1 > '' then p.pet_name_1||' lives'\n                 else 'your kitten lives'\n             end as kitten_name_variation_6,\n                          case\n                 when p.pet_name_4 > '' then 'your kittens prefer'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||' prefer'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2||' prefer'\n                 when p.pet_name_1 > '' then p.pet_name_1||' prefers'\n                 else 'your kitten prefers'\n             end as kitten_name_variation_7,\n                          case\n                 when p.pet_name_4 > '' then 'your kittens aren''t'\n                 when p.pet_name_3 > '' then p.pet_name_1||', '||p.pet_name_2||' and '||p.pet_name_3||' aren''t'\n                 when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2||' aren''t'\n                 when p.pet_name_1 > '' then p.pet_name_1||' isn''t'\n                 else 'your kitten isn''t'\n             end as kitten_name_variation_8,\n             email_type,\n             coalesce(p.num_pets,0) as num_pets,\n             coalesce(p.pet_gender,'') as pet_gender,\n             coalesce(p.pet_colour,'') as pet_colour,\n             q.answer,\n             case \n                when (lc4w.cid is not null or lce4w.email is not null) and lc6m.cid is null and lce6m.email is null          then 'Y' --4 weeks after first triggered email (E NPP08813)\n                when lc6m.cid is not null                              and lc6m.drop_date  <= dateadd(month,-6,current_date) then 'Y' --6 months after last LC module - cid match (A NPP08813_1)\n                when lc6m.cid is null      and lce6m.email is not null and lce6m.drop_date <= dateadd(month,-6,current_date) then 'Y' --6 months after last LC module - email match (A NPP08813_1)\n                /*when lc4w.cid is null and lce4w.email is null and lc6m.cid is null and lce6m.email is null \n                     and cb.first_date_brand <= dateadd(month,-6,current_date)                                               then 'Y'*/ -- never received LC module and with KC for 6 months (catch-all) - removed 19/10/2021 LW(VO)\n                else '' end as kco_liveclear,\n             w.pet_dob_known,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement, \n\t\t\t w.npp_ecrm_yp,\n             row_number() over(partition by lower(cb.email_brand), p.email_type order by case when cb.brand_id = 143 then 1 else 0 end desc,cb.first_date_brand) as em_run\n        from ${Database}.live.cid_details cd\n        join ${Database}.live.cid_brand cb on cb.cid = cd.cid\n        inner join ${Database}.live.cid cid on cid.cid = cd.cid\n        join ${Database}.temp.npp05975_kitten_code_pets p on cd.cid = p.cid\n        left join ${Database}.temp.npp05975_kittencode_welcome w on cd.cid = w.cid\n        left join (\n           select \n              cid,\n              first_value(answer) over(partition by cid order by q.data_date desc) as answer\n          from ${Database}.db.question q\n          inner join ${Database}.live.xref_name_urn xr on xr.name_urn = q.name_urn\n          where question_id in (\n                                  select question_id from ${Database}.db.ref_question\n                                  where question = 'What do you feed your kitten?'\n                               )\n          and answer in ('Felix','Go Cat','Pro Plan','Purina ONE')\n          ) q on q.cid = cd.cid \n        left join ${Database}.temp.npp_kitten_code_live_clear_4w   lc4w  on cd.cid = lc4w.cid\n        left join ${Database}.temp.npp_kitten_code_live_clear_e_4w lce4w on cb.email_brand = lce4w.email\n        left join ${Database}.temp.npp_kitten_code_live_clear_6m   lc6m  on cd.cid = lc6m.cid\n        left join ${Database}.temp.npp_kitten_code_live_clear_e_6m lce6m on cb.email_brand = lce6m.email\n        where cb.brand_id = (select brand_id from ${Database}.db.ref_brand where brand = 'Kitten Code')\n             and cb.emailable = 1\n             and (cb.brand_preference = 1 or (cb.brand_engagement = 1 and (cb.brand_preference <> 0)))\n             and w.cid is null\n     ) em\nleft join ${Database}.temp.npp_kitten_code_supps s        on em.cid = s.cid\n                                                            and (\n                                                                    (s.cell_id = replace(em.email_type,'Email ','') and s.drop_date >= current_date - 6 )\n                                                                 or\n                                                                    (s.cell_id = '1' and s.drop_date >= current_date-1)\n                                                                )\nleft join ${Database}.temp.npp_kitten_code_e_supps es     on em.email = lower(es.email)\n                                                            and (\n                                                                    (es.cell_id = replace(em.email_type,'Email ','') and es.drop_date >= current_date - 6 ) \n                                                                 or\n                                                                    (es.cell_id = '1' and es.drop_date >= current_date-1)\n                                                                )\nwhere em.em_run = 1\n    and em.email_type > ''\n    and s.cid is null\n    and es.email is null\n    ;\n\ndrop table if exists ${Database}.temp.npp05975_kitten_code_pets;\ndrop table if exists ${Database}.temp.npp_kitten_code_supps;\ndrop table if exists ${Database}.temp.npp_kitten_code_e_supps;\n\ndrop table if exists ${Database}.temp.npp_kitten_code_live_clear_4w;\ndrop table if exists ${Database}.temp.npp_kitten_code_live_clear_e_4w;\ndrop table if exists ${Database}.temp.npp_kitten_code_live_clear_6m;\ndrop table if exists ${Database}.temp.npp_kitten_code_live_clear_e_6m;\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP05975',\n    'NPP05975',\n    '1',\n    to_char(kco_subject_line),\n    0,\n    name_urn,\n    current_date,\n    email,\n    brand_preference, \n    brand_engagement,\n    current_date,\n    143\nfrom ${Database}.temp.npp05975_kittencode_welcome;\n\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP05975',\n    'NPP05975',\n    trim(replace(email_type,'Email ','')),\n    to_char(kco_subject_line),\n    0,\n    name_urn,\n    current_date,\n    email,\n    brand_preference, \n    brand_engagement,\n    current_date,\n    143\nfrom ${Database}.temp.npp05975_kittencode_em2_18;\n\n--additional analysis records to identify Live Clear module sends\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'A',\n    'NPP08813',\n    'NPP08813_1',\n    trim(replace(email_type,'Email ','')),\n    to_char(kco_subject_line),\n    0,\n    name_urn,\n    current_date,\n    email,\n    brand_preference, \n    brand_engagement,\n    current_date,\n    143\nfrom ${Database}.temp.npp05975_kittencode_em2_18\nwhere kco_liveclear='Y'\n;\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_1  as select name_urn, npp_ecrm_uniqueid, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, npp_ecrm_yp, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_welcome;\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_2  as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 2';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_3  as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 3';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_4  as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 4';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_5  as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 5';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_6  as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 6';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_7  as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 7';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_8  as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 8';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_9  as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 9';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_10 as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 10';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_11 as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 11';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_12 as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 12';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_13 as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 13';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_14 as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 14';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_15 as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 15';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_16 as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 16';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_17 as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 17';\ncreate or replace table ${Database}.jobs.NPP05975_Kitten_Code_email_18 as select name_urn, email, title, forename, surname, kitten_name_variation_ces, kitten_name_variation_1, kitten_name_variation_2, kitten_name_variation_3, kitten_name_variation_4, kitten_name_variation_5, kitten_name_variation_6, kitten_name_variation_7, kco_kitten_colour, kco_kitten_brand_preference, kco_subject_line, kco_liveclear, pet_dob_known, kog_pack from ${Database}.temp.npp05975_kittencode_em2_18 where email_type = 'Email 18';\n\n\n\n/******************************************************************************************\n   Breed Selector JOURNEY\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where promotion_id = 'NPP06155' and drop_date = current_date();\n\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ncreate or replace table ${Database}.temp.npp_breed_selector_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and (promotion_id = 'NPP06155' or promotion_id = 'NPP04398');\n\n\ncreate or replace table ${Database}.temp.npp_breed_selector_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.npp_breed_selector_supps su\ninner join ${Database}.live.xref_name_urn xr on su.cid = xr.cid;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n-- Email 1 - Welcome\n--Audience: Emailable, opted in, consumers who have signed up to Breed Selector comms\n--Timings: 1 day after sign up\n--Broadcast time: 6pm\n--Frequency: Daily\n\ncreate or replace table ${Database}.temp.npp06155_breed_selector_welcome\nas\nselect\n    distinct\n    em1.cid,\n    em1.name_urn,\n    em1.email,\n    em1.title,\n    em1.forename,\n    em1.surname,\n    '' as bs_puppy_expected,\n    '' as bs_concerns,\n    '' as bs_concern_lifestyle,\n    '' as bs_concern_cost,\n    '' as bs_concern_acquisition,\n    '' as bs_concern_training,\n    '' as bs_new_consumer,\n    1 as cell,\n    1 as batch,\n    '1' as cell_id,\n    '1' as pack_id,\n    em1.brand_id,\n    em1.brand_preference,\n    em1.brand_engagement,\n    'E|NPP06155|NPP06155|1|1' as kog_pack\nfrom (\n         select\n             cd.name_urn,\n             cd.cid,\n             lower(cb.email_brand) as email,\n             cd.title,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             cd.lastname as surname,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             row_number() over(partition by lower(cb.email_brand) order by cb.first_date_brand) as em_run\n         from ${Database}.live.cid_details cd\n         inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n         left join ${Database}.temp.npp_breed_selector_supps s on cd.cid = s.cid\n                                                              and s.cell_id = '1'\n         left join ${Database}.temp.npp_breed_selector_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                                                 and es.cell_id = '1'\n         where cb.brand_id = (select brand_id from ${Database}.db.ref_brand where brand = 'Breed Selector')\n             and cb.emailable = 1\n             and cb.brand_preference = 1\n             and cb.first_date_brand > current_date - 5 --turn off for first run?\n             and s.cid is null\n             and es.email is null\n     ) em1\nwhere em1.em_run = 1;\n\n\n--lookup, questions answered, last email received\ncreate or replace table ${Database}.temp.npp06155_breed_selector_pdc_resp\nas\nselect\n    distinct\n    cid,\n    cell_id as last_email,\n    drop_date as last_email_date,\n    bs_puppy_expected,\n    bs_concerns,\n    bs_concern_lifestyle,\n    bs_concern_cost,\n    bs_concern_acquisition,\n    bs_concern_training,\n    bs_found_puppy_yet,\n    bs_puppy_arrival_month,\n    bs_puppy_arrival_year,\n    bs_still_getting_puppy,\n    bs_other_pets,\n    bs_cat_dog,\n   a.expected_date\nfrom (\n         select\n             resp.urn as name_urn,\n             xr.cid,\n             ch.drop_date,\n             ch.campaign_id, --do we get campaign_name and kog packin the resp.data?\n             ch.promotion_id,\n             first_value(ch.cell_id) over (partition by cid order by ch.drop_date desc ) as cell_id, --ensure only for this campaign\n             first_value(ch.pack_id) over (partition by cid order by ch.drop_date desc ) as pack_id, --ensure only for this campaign\n             resp.event_timestamp,\n             resp.bs_puppy_expected,\n             resp.bs_concerns,\n             resp.bs_concern_lifestyle,\n             resp.bs_concern_cost,\n             resp.bs_concern_acquisition,\n             resp.bs_concern_training,\n             resp.bs_found_puppy_yet,\n             resp.bs_puppy_arrival_month,\n             resp.bs_puppy_arrival_year,\n             resp.bs_still_getting_puppy,\n             resp.bs_other_pets,\n             resp.bs_cat_dog,\n             case\n                 when bs_still_getting_puppy in ('3-6 months','6-12 months','1 year plus')\n                   or bs_found_puppy_yet in ('found and waiting') then try_to_date(resp.bs_puppy_arrival_year||'-'||right(resp.bs_puppy_arrival_month,2)||'-'||to_char(dayofmonth(resp.event_timestamp)))\n             end as expected_date,\n             row_number() over(partition by xr.cid order by cell_id desc,ch.drop_date desc, resp.event_timestamp  desc nulls last) as email_run -- most recent submission for highest numbered email\n         from ${Database}.db.comms_hist ch\n         left join ${Database}.db.npp_breed_selector_pdc_responses resp on ch.name_urn = resp.urn --and ch.kog_pack = resp.kog_pack\n         join ${Database}.live.xref_name_urn xr on xr.name_urn = ch.name_urn\n         where ch.campaign_id  = 'NPP06155'\n     ) a\nwhere a.email_run = 1\n    and (a.bs_still_getting_puppy <> 'no' or a.bs_still_getting_puppy is null);\n\n\n-- Email 2 to 8\n-- Audience: Emailable, opted in,\n\ncreate or replace table ${Database}.temp.npp06155_breed_selector_em2_8\nas\nselect\n    distinct\n    em.name_urn,\n    em.email,\n    em.forename,\n    em.email_type,\n    em.bs_puppy_expected,\n    em.bs_concerns,\n    em.bs_concern_lifestyle,\n    em.bs_concern_cost,\n    em.bs_concern_acquisition,\n    em.bs_concern_training,\n    em.bs_new_consumer,\n    em.brand_id,\n    em.brand_preference,\n    em.brand_engagement,\n    right(email_type,1) as cell_id,\n    right(email_type,1) as cell,\n    '1' as pack_id,\n    '1' as batch,\n    'E|NPP06155|NPP06155|'||trim(replace(email_type,'Email ',''))||'|1' as kog_pack\nfrom (\n         select\n             cd.cid,\n             cd.name_urn,\n             lower(cb.email_brand) as email,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             resp.bs_puppy_expected,\n             resp.bs_concerns,\n             resp.bs_concern_lifestyle,\n             resp.bs_concern_cost,\n             resp.bs_concern_acquisition,\n             resp.bs_concern_training,\n             case when resp.last_email = '1' then 'Y' else 'N' end as  bs_new_consumer,\n             case\n                 when lower(resp.bs_puppy_expected) = 'already' or lower(resp.bs_found_puppy_yet) regexp '.*have puppy.*' or resp.expected_date > current_date - 5 then 'Email 8'\n                 when (resp.last_email = '1' and resp.last_email_date < current_date - 7)\n                   or (resp.last_email = '1' and resp.last_email_date < current_date and resp.last_email_date > current_date - 5 and lower(resp.bs_puppy_expected) regexp '(.*)(3-6 months|6-12 months|1 year plus|not sure)(.*)') then 'Email 2'\n                 when resp.last_email = '2' and resp.last_email_date > (add_months(current_date,-1)-5) and resp.last_email_date <= add_months(current_date,-1)     then 'Email 3'\n                 when resp.last_email = '3' and resp.last_email_date > (add_months(current_date,-1)-5) and resp.last_email_date <= add_months(current_date,-1)     then 'Email 4'\n                 when (resp.last_email = '4' and resp.last_email_date > (add_months(current_date,-1)-5) and resp.last_email_date <= add_months(current_date,-1))\n                   or (resp.last_email <> '5' and lower(resp.bs_puppy_expected) regexp '.*3 months.*')                                                             then 'Email 5'\n                 when resp.last_email = '5' and resp.last_email_date > (add_months(current_date,-1)-5) and resp.last_email_date <= add_months(current_date,-1)     then 'Email 6'\n                 when resp.last_email = '6' and resp.last_email_date > (add_months(current_date,-1)-5) and resp.last_email_date <= add_months(current_date,-1)     then 'Email 7'\n             end as email_type,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             row_number() over(partition by lower(cb.email_brand) order by case\n                                                                               when lower(resp.bs_puppy_expected) = 'already' or lower(resp.bs_found_puppy_yet) regexp '.*have puppy.*' or resp.expected_date > current_date - 5 then 'Email 8'\n                                                                               when (resp.last_email = '1' and resp.last_email_date < current_date - 7)\n                                                                                 or (resp.last_email = '1' and resp.last_email_date < current_date and resp.last_email_date > current_date - 5 and lower(resp.bs_puppy_expected) regexp '(.*)(3-6 months|6-12 months|1 year plus|not sure)(.*)') then 'Email 2'\n                                                                               when resp.last_email = '2' and resp.last_email_date > (add_months(current_date,-1)-5) and resp.last_email_date <= add_months(current_date,-1)     then 'Email 3'\n                                                                               when resp.last_email = '3' and resp.last_email_date > (add_months(current_date,-1)-5) and resp.last_email_date <= add_months(current_date,-1)     then 'Email 4'\n                                                                               when (resp.last_email = '4' and resp.last_email_date > (add_months(current_date,-1)-5) and resp.last_email_date <= add_months(current_date,-1))\n                                                                                 or (resp.last_email <> '5' and lower(resp.bs_puppy_expected) regexp '.*3 months.*')                                                             then 'Email 5'\n                                                                               when resp.last_email = '5' and resp.last_email_date > (add_months(current_date,-1)-5) and resp.last_email_date <= add_months(current_date,-1)     then 'Email 6'\n                                                                               when resp.last_email = '6' and resp.last_email_date > (add_months(current_date,-1)-5) and resp.last_email_date <= add_months(current_date,-1)     then 'Email 7'\n                                                                           end) as em_run\n         from ${Database}.live.cid_details cd\n         inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n         left join ${Database}.temp.npp06155_breed_selector_pdc_resp resp on resp.cid = cd.cid\n         left join ${Database}.temp.npp06155_breed_selector_welcome w on cd.cid = w.cid --in todays welcome selection is null\n         where cb.brand_id = (select brand_id from ${Database}.db.ref_brand where brand = 'Breed Selector') --dbn source date from gigya lite reg\n             and cb.emailable = 1\n             and cb.brand_preference = 1\n             and w.cid is null\n             and (resp.bs_still_getting_puppy <> 'no' or resp.bs_still_getting_puppy is null)\n     ) em\nleft join ${Database}.temp.npp_breed_selector_supps s on em.cid = s.cid\n                                                     and s.cell_id = replace(em.email_type,'Email ','')\nleft join ${Database}.temp.npp_breed_selector_e_supps es on em.email = lower(es.email)\n                                                        and es.cell_id = replace(em.email_type,'Email ','')\nwhere em.em_run = 1\n    and em.email_type > ''\n    and s.cid is null\n    and es.email is null;\n\ndrop table if exists ${Database}.temp.npp_breed_selector_supps;\ndrop table if exists ${Database}.temp.npp_breed_selector_e_supps;\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP06155',\n    'NPP06155',\n    '1',\n    '1',\n    0,\n    name_urn,\n    current_date,\n    email,\n    1,\n    1,\n    current_date,\n    147\nfrom ${Database}.temp.npp06155_breed_selector_welcome;\n\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP06155',\n    'NPP06155',\n    cell_id,\n    pack_id,\n    0,\n    name_urn,\n    current_date,\n    email,\n    1,\n    1,\n    current_date,\n    147\nfrom ${Database}.temp.npp06155_breed_selector_em2_8;\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.NPP06155_breed_selector_email_1 as select name_urn,email,forename,bs_puppy_expected,bs_concerns,bs_concern_lifestyle,bs_concern_cost,bs_concern_acquisition,bs_concern_training,bs_new_consumer, CELL, BATCH,pack_id from ${Database}.temp.npp06155_breed_selector_welcome;\ncreate or replace table ${Database}.jobs.NPP06155_breed_selector_email_2 as select name_urn,email,forename,bs_puppy_expected,bs_concerns,bs_concern_lifestyle,bs_concern_cost,bs_concern_acquisition,bs_concern_training,bs_new_consumer, CELL, BATCH,pack_id from ${Database}.temp.npp06155_breed_selector_em2_8 where email_type = 'Email 2';\ncreate or replace table ${Database}.jobs.NPP06155_breed_selector_email_3 as select name_urn,email,forename,bs_puppy_expected,bs_concerns,bs_concern_lifestyle,bs_concern_cost,bs_concern_acquisition,bs_concern_training,bs_new_consumer, CELL, BATCH,pack_id from ${Database}.temp.npp06155_breed_selector_em2_8 where email_type = 'Email 3';\ncreate or replace table ${Database}.jobs.NPP06155_breed_selector_email_4 as select name_urn,email,forename,bs_puppy_expected,bs_concerns,bs_concern_lifestyle,bs_concern_cost,bs_concern_acquisition,bs_concern_training,bs_new_consumer, CELL, BATCH,pack_id from ${Database}.temp.npp06155_breed_selector_em2_8 where email_type = 'Email 4';\ncreate or replace table ${Database}.jobs.NPP06155_breed_selector_email_5 as select name_urn,email,forename,bs_puppy_expected,bs_concerns,bs_concern_lifestyle,bs_concern_cost,bs_concern_acquisition,bs_concern_training,bs_new_consumer, CELL, BATCH,pack_id from ${Database}.temp.npp06155_breed_selector_em2_8 where email_type = 'Email 5';\ncreate or replace table ${Database}.jobs.NPP06155_breed_selector_email_6 as select name_urn,email,forename,bs_puppy_expected,bs_concerns,bs_concern_lifestyle,bs_concern_cost,bs_concern_acquisition,bs_concern_training,bs_new_consumer, CELL, BATCH,pack_id from ${Database}.temp.npp06155_breed_selector_em2_8 where email_type = 'Email 6';\ncreate or replace table ${Database}.jobs.NPP06155_breed_selector_email_7 as select name_urn,email,forename,bs_puppy_expected,bs_concerns,bs_concern_lifestyle,bs_concern_cost,bs_concern_acquisition,bs_concern_training,bs_new_consumer, CELL, BATCH,pack_id from ${Database}.temp.npp06155_breed_selector_em2_8 where email_type = 'Email 7';\ncreate or replace table ${Database}.jobs.NPP06155_breed_selector_email_8 as select name_urn,email,forename,bs_puppy_expected,bs_concerns,bs_concern_lifestyle,bs_concern_cost,bs_concern_acquisition,bs_concern_training,bs_new_consumer, CELL, BATCH,pack_id from ${Database}.temp.npp06155_breed_selector_em2_8 where email_type = 'Email 8';\n\n/******************************************************************************************\n   BETTER TOGETHER EMAILS\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where promotion_id in ('NPP07746_1','NPP07746_2','NPP07746_3') and drop_date = current_date;\n\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ncreate or replace table ${Database}.temp.npp_bt_welcome_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.promotion_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and campaign_id = 'NPP07746'\n    and promotion_id in ('NPP07746_1','NPP07746_2','NPP07746_3')\n    ;\n\n\ncreate or replace table ${Database}.temp.npp_bt_welcome_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.promotion_id,\n    su.drop_date\nfrom ${Database}.temp.npp_bt_welcome_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\ncreate or replace table ${Database}.temp.npp07746_pet_name_lookup\nas\nselect distinct\n    a.cid,\n    first_value(case when named_pet_run = 1 then pet_name end) over (partition by cid order by case when named_pet_run = 1 then 1 else 0 end desc) as pet_name_1,\n    first_value(case when named_pet_run = 2 then pet_name end) over (partition by cid order by case when named_pet_run = 2 then 1 else 0 end desc) as pet_name_2,\n    first_value(case when named_pet_run = 3 then pet_name end) over (partition by cid order by case when named_pet_run = 3 then 1 else 0 end desc) as pet_name_3\nfrom (\n         select\n             cid,\n             pet_name,\n             row_number() over (partition by a.cid order by case when pet_name > '' then 1 else 0 end desc, pet_data_date desc, pet_name asc) as named_pet_run\n         from (\n                  select\n                      *,\n                      row_number() over (partition by cid, pet_name order by pet_data_date desc) as dupe_pet_run\n                  from ${Database}.live.cid_pet\n                  where pet_name > ''\n                  union all\n                  select\n                      *,\n                      1 as dupe_pet_run\n                  from ${Database}.live.cid_pet\n                  where pet_name = ''\n                      or pet_name is null\n              ) a\n         where dupe_pet_run = 1 --remove pets of the same name but different species\n     ) a;\n\n\n--pack_id 1 = control\n--pack_id 2 = 3 emails\n--pack_id 3 = 2 emails\n\ncreate or replace table ${Database}.temp.npp07746_bt_welcome_1\nas\nselect\n    b.*,\n    'NPP07746_1' as promotion_id,\n    'E|NPP07746|NPP07746_1|'||cell_id||'|'||pack_id as kog_pack\nfrom (\n         select\n             cid,\n             uniqueid as npp_ecrm_uniqueid, --Hashed Urn Change\n             name_urn,\n             title,\n             forename,\n             lastname,\n             brand_preference,\n             brand_engagement,\n             email_brand as email,\n             emailable,\n             brand_id,\n             case\n                 when forename = '' or forename is null then 'Hi Pet Lover'\n                 when (pet_name_1 = '' or pet_name_1 is null) then 'Hi '||forename\n                 when pet_name_3 > '' then 'Hi '||forename||' and furry friends'\n                 when pet_name_2 > '' then 'Hi '||forename||', '||pet_name_1||' and '||pet_name_2\n                 when pet_name_1 > '' then 'Hi '||forename||' and '||pet_name_1\n                 else 'error'\n             end as npp_ecrm_salutation,\n             case\n                 when pet_seg = 'Cat' and  pet_name_3 > '' then 'your feline friends'\n                 when pet_seg = 'Cat'and (pet_name_1 = '' or pet_name_1 is null) then 'your feline friend'\n                 when pet_seg = 'Dog' and  pet_name_3 > '' then 'your best friend'\n                 when pet_seg = 'Dog'and (pet_name_1 = '' or pet_name_1 is null) then 'your best friend'\n                 when pet_seg in ('Both','Unknown') and  pet_name_3 > '' then 'your furry friends'\n                 when pet_seg in ('Both','Unknown') and (pet_name_1 = '' or pet_name_1 is null) then 'your furry friends'\n                 when pet_name_2 > '' then pet_name_1||' and '||pet_name_2\n                 when pet_name_1 > '' then pet_name_1\n                 else 'error'\n             end as npp_ecrm_hero_pet_name,\n             npp_ecrm_pdc,\n             npp_ecrm_pdc_age,\n             npp_ecrm_pdc_breed,\n             npp_ecrm_pdc_colour,\n             npp_ecrm_pdc_outdoor,\n             npp_ecrm_pdc_gender,\n             lower(pet_seg) as npp_ecrm_pet_segment,\n             pack_id||case\n                          when lower(pet_seg) = 'both' then 'A'\n                          when lower(pet_seg) = 'dog' then 'B'\n                          when lower(pet_seg) = 'cat' then 'C'\n                          when lower(pet_seg) = 'unknown' then 'D'\n                      end as cell_id,\n             pack_id||case\n                            when npp_ecrm_pdc = 'name' then 'A'\n                            when npp_ecrm_pdc ilike '%age' then 'B'\n                            when npp_ecrm_pdc = 'breed' then 'C'\n                            when npp_ecrm_pdc = 'gender' then 'D'\n                            when npp_ecrm_pdc = 'colour' then 'E'\n                            when npp_ecrm_pdc = 'type' then 'F'\n                            when npp_ecrm_pdc = 'outdoor' then 'G'\n\t\t\t\t\t\t\telse 'Z'\n                      end as pack_id,\n             case when last_source = 'REG_YOUR_PURINA' then 'Y' else '' end as npp_ecrm_yp,\n             row_number() over(partition by a.email_brand order by case when trim(forename) = '' then 1 else 0 end, case when pet_name_1 = '' then 0 else 1 end nulls last,case when pet_name_2 = '' then 0 else 1 end nulls last) as em_run\n         from (\n                  select\n                      cd.cid,\n                      cd.name_urn,\n                      sha2(cid.bbw_urn,256) as uniqueid, --Hashed Urn Change\n                      cd.title,\n                      case\n                          when length(cd.firstname) = 1 then ''\n                          when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                          else cd.firstname\n                      end as forename,\n                      cd.lastname,\n                      cb.brand_preference,\n                      cb.brand_engagement,\n                      cb.email_brand,\n                      cb.emailable,\n                      cb.brand_id,\n                      pl.pet_name_1,\n                      pl.pet_name_2,\n                      pl.pet_name_3,\n                      case\n                          when cid.have_cat in ('Y') and cid.have_dog in ('Y') then 'Both'\n                          when cid.have_cat in ('Y') then 'Cat'\n                          when cid.have_dog in ('Y') then 'Dog'\n                          when cid.have_cat in ('N','IN','IO') and cid.have_dog in ('N','IN','IO') then 'Unknown'\n                      end as pet_seg,\n                      case\n                          when cid.have_cat in ('N','IN','IO') and cid.have_dog in ('N','IN','IO') then 'type'\n                          when p.cid is not null and p.p_type > '' and p.p_name = '' then 'name'\n                          when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is null and p_dob_type = 'Cat' then 'cat_age'\n                          when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is null and p_dob_type = 'Dog' then 'dog_age'\n                          when cid.have_dog = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.d_breed,'') = '' then 'breed'\n                          when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender = '' then 'gender'\n                          when cid.have_cat = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender > '' and nvl(p.c_colour,'') = '' then 'colour'\n                          when cid.have_cat = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender > '' and nvl(p.c_colour,'') > '' and c_indoor_outdoor = '' then 'outdoor'\n                          else ''\n                      end as npp_ecrm_pdc,\n           \n                      case when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is null then p_dob_name else '' end as npp_ecrm_pdc_age,\n                      case when cid.have_dog = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.d_breed,'') = '' then d_breed_name else '' end as npp_ecrm_pdc_breed,\n                      case when cid.have_cat = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender > '' and nvl(p.c_colour,'') = '' then  c_colour_name else '' end as npp_ecrm_pdc_colour,\n                      case when cid.have_cat = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender > '' and nvl(p.c_colour,'') > '' and c_indoor_outdoor = '' then c_indoor_outdoor_name else '' end as npp_ecrm_pdc_outdoor,\n           \n                      case when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender = '' then p.no_gender_name end as npp_ecrm_pdc_gender,\n                      case\n                          when mod(abs(hash(cd.cid)),5) = 0 then '1'\n                          when mod(abs(hash(cd.cid)),5) in (1,2) then '2'\n                          when mod(abs(hash(cd.cid)),5) in (3,4) then '3'\n                      end as pack_id,\n\t\t\t\t\t  yp_source.last_source,\n                      row_number() over(partition by cb.cid order by case when trim(cd.firstname) = '' then 1 else 0 end, case when pet_name_1 = '' then 0 else 1 end nulls last,case when pet_name_2 = '' then 0 else 1 end nulls last) as cid_run\n                  from ${Database}.live.cid_details cd\n                  join ${Database}.live.cid cid on cid.cid = cd.cid\n                  join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n                  left join (select cid, \n\t\t\t\t\t                first_value(source)over(partition by cid order by data_date desc, source_date desc, case when source = 'REG_YOUR_PURINA' then 0 else 1 end) as last_source\n\t\t\t\t\t\t     from ${Database}.live.names\n                             where SOURCE_DATA_CONTROLLER_ID = 5\n\t\t\t\t            ) yp_source on yp_source.cid = cd.cid and last_source = 'REG_YOUR_PURINA'\n\t\t\t\t  left join (\n                              select distinct\n                                  cid,\n                                  first_value(pet_type) over (partition by cid order by case when pet_type = '' then 0 else 1 end asc) as p_type,\n                                  first_value(pet_name) over (partition by cid order by case when pet_name = '' then 0 else 1 end asc) as p_name,\n                                  first_value(pet_dob) over (partition by cid order by case when pet_dob is null then 0 else 1 end asc, pet_data_date desc, pet_name) as p_dob,\n                                  first_value(pet_type) over (partition by cid order by case when pet_dob is null then 0 else 1 end asc, pet_data_date desc, pet_name) as p_dob_type,\n                                  first_value(pet_name) over (partition by cid order by case when pet_dob is null then 0 else 1 end asc, pet_data_date desc, pet_name) as p_dob_name,\n                                  first_value(pet_breed) over (partition by cid order by case when nvl(pet_breed,'') = '' then 0 else 1 end asc) as p_breed,\n                                  first_value(case when pet_type = 'Dog' then pet_breed else 'Cat' end) over (partition by cid order by case when pet_type = 'Dog' then 0 else 1 end asc, case when nvl(pet_breed,'') = '' then 0 else 1 end asc,pet_data_date desc, pet_name) as d_breed,\n                                  first_value(case when pet_type = 'Dog' then pet_name else 'Cat' end) over (partition by cid order by case when pet_type = 'Dog' then 0 else 1 end asc, case when nvl(pet_breed,'') = '' then 0 else 1 end asc,pet_data_date desc, pet_name)  as d_breed_name,\n                                  first_value(pet_gender) over (partition by cid order by case when pet_gender = '' then 0 else 1 end asc, pet_data_date desc) as p_gender,\n                                  first_value(case when pet_type = 'Cat' then pet_colour else 'Dog' end) over (partition by cid order by case when pet_type = 'Cat' then 0 else 1 end asc, case when nvl(pet_colour,null) = '' then 0 else 1 end asc,pet_data_date desc, pet_name)  as c_colour,\n                                  first_value(case when pet_type = 'Cat' then pet_name else 'Dog' end) over (partition by cid order by case when pet_type = 'Cat' then 0 else 1 end asc, case when nvl(pet_colour,null) = '' then 0 else 1 end asc,pet_data_date desc, pet_name)  as c_colour_name,\n                                  first_value(case when pet_type = 'Cat' then PET_INDOOR_OUTDOOR else 'Dog' end) over (partition by cid order by case when pet_type = 'Cat' then 0 else 1 end asc, case when nvl(PET_INDOOR_OUTDOOR, '') = '' then 0 else 1 end asc,pet_data_date desc, pet_name)  as c_indoor_outdoor,\n                                  first_value(case when pet_type = 'Cat' then PET_NAME else 'Dog' end) over (partition by cid order by case when pet_type = 'Cat' then 0 else 1 end asc, case when nvl(PET_INDOOR_OUTDOOR, '') = '' then 0 else 1 end asc,pet_data_date desc, pet_name)  as c_indoor_outdoor_name,\n                                  first_value(pet_name) over (partition by cid order by case when pet_name > '' and pet_gender = '' then 1 else 0 end desc, pet_data_date desc, pet_name asc) as no_gender_name\n                              from ${Database}.live.cid_pet\n                            ) p on p.cid = cd.cid\n                  left join ${Database}.temp.npp07746_pet_name_lookup pl on pl.cid = cd.cid\n                  left join ${Database}.temp.npp_bt_welcome_supps s on cd.cid = s.cid\n                                                                   and lower(s.promotion_id) regexp '.*npp07746.*'\n                  left join ${Database}.temp.npp_bt_welcome_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                                                      and lower(es.promotion_id) regexp '.*npp07746.*'\n                  where cb.business_unit_id = 5\n                      and cb.brand_id = (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'purina masterbrand')\n                      and cb.emailable = 1\n                      and (cb.brand_preference = 1 or (cb.brand_engagement = 1 and  cb.brand_preference <> 0))\n                      and s.cid is null\n                      and es.email is null\n                      and cb.first_date_brand >= current_date - 5\n                      and cd.cid not in (select cid from ${Database}.live.xref_name_urn xref\n                                      join ${Database}.db.names dbn on dbn.name_urn = xref.name_urn\n                                         where dbn.name_urn ilike '%better together christmas%' \n                                         and dbn.data_date < '2021-12-22'\n                                     )\n                      and cd.cid not in (\n                                            select distinct\n                                                cid\n                                            from ${Database}.live.xref_name_urn xr\n                                            join ${Database}.db.comms_hist ch on ch.name_urn = xr.name_urn\n                                            join ${Database}.db.comms_hist_lookup chl on chl.campaign_id = ch.campaign_id and ch.promotion_id = chl.promotion_id and ch.cell_id = chl.cell_id\n                                            where lower(chl.campaign_description) regexp '.*better together.*'\n                                                and drop_date > add_months(current_date,-6)\n                                                and ch.campaign_id <> 'NPP07746'\n                                        )\n                      and cd.cid not in (\n                                            select distinct\n                                                cid\n                                            from ${Database}.db.names dbn\n                                            join ${Database}.live.xref_name_urn xr on xr.name_urn = dbn.name_urn\n                                            where dbn.source_data_controller_id = 5\n                                                and dbn.source = 'REG_FANFINDERS'\n                                        )\n                      and cd.cid not in (\n                                            select distinct\n                                                cid\n                                            from ${Database}.db.names dbn\n                                            join ${Database}.live.xref_name_urn xr on xr.name_urn = dbn.name_urn\n                                            where dbn.source_data_controller_id = 5\n                                                and dbn.source = 'NPP_PET_AVATAR_DAILY'\n                                        )\n                      and cd.cid not in (\n                                            select distinct\n                                                cid\n                                            from ${Database}.db.names dbn\n                                            join ${Database}.live.xref_name_urn xr on xr.name_urn = dbn.name_urn\n                                            where dbn.source_data_controller_id = 5\n                                                and dbn.source = 'REG_EMMAS_DIARY'\n                                        )\n              ) a\n         where cid_run = 1\n     ) b\nwhere b.em_run = 1;\n\ncreate or replace table ${Database}.temp.npp07746_bt_welcome_2_3\nas\nselect\n    b.*,\n    'E|NPP07746|'||promotion_id||'|'||cell_id||'|'||pack_id as kog_pack\nfrom (\n         select\n             a.cid,\n             bbw_urn,\n             uniqueid,\n             name_urn,\n             title,\n             forename,\n             lastname,\n             brand_preference,\n             brand_engagement,\n             email_brand as email,\n             emailable,\n             brand_id,\n             case\n                 when forename = '' or forename is null then 'Hi Pet Lover'\n                 when (pet_name_1 = '' or pet_name_1 is null) then 'Hi '||forename\n                 when pet_name_3 > '' then 'Hi '||forename||' and furry friends'\n                 when pet_name_2 > '' then 'Hi '||forename||', '||pet_name_1||' and '||pet_name_2\n                 when pet_name_1 > '' then 'Hi '||forename||' and '||pet_name_1\n                 else 'error'\n             end as npp_ecrm_salutation,\n             case\n                 when pet_seg = 'Cat' and  pet_name_3 > '' then 'your feline friends'\n                 when pet_seg = 'Cat'and (pet_name_1 = '' or pet_name_1 is null) then 'your feline friend'\n                 when pet_seg = 'Dog' and  pet_name_3 > '' then 'your best friend'\n                 when pet_seg = 'Dog'and (pet_name_1 = '' or pet_name_1 is null) then 'your best friend'\n                 when pet_seg in ('Both','Unknown') and  pet_name_3 > '' then 'your furry friends'\n                 when pet_seg in ('Both','Unknown') and (pet_name_1 = '' or pet_name_1 is null) then 'your furry friends'\n                 when pet_name_2 > '' then pet_name_1||' and '||pet_name_2\n                 when pet_name_1 > '' then pet_name_1\n                 else 'error'\n             end as npp_ecrm_hero_pet_name,\n             npp_ecrm_pdc,\n             npp_ecrm_pdc_age,\n             npp_ecrm_pdc_breed,\n             npp_ecrm_pdc_colour,\n             npp_ecrm_pdc_outdoor,\n             npp_ecrm_pdc_gender,\n             npp_ecrm_pdc_neither,\n             lower(pet_seg) as npp_ecrm_pet_segment,\n             a.promotion_id,\n             a.pack_id||case\n                            when lower(pet_seg) = 'both' then 'A'\n                            when lower(pet_seg) = 'dog' then 'B'\n                            when lower(pet_seg) = 'cat' then 'C'\n                            when lower(pet_seg) = 'unknown' then 'D'\n                        end as cell_id,\n             a.pack_id||case\n                            when npp_ecrm_pdc = 'name' then 'A'\n                            when npp_ecrm_pdc ilike '%age' then 'B'\n                            when npp_ecrm_pdc = 'breed' then 'C'\n                            when npp_ecrm_pdc = 'gender' then 'D'\n                            when npp_ecrm_pdc = 'colour' then 'E'\n                            when npp_ecrm_pdc = 'type' then 'F'\n                            when npp_ecrm_pdc = 'outdoor' then 'G'\n\t\t\t\t\t\t\telse 'Z'\n                        end as pack_id,\n             row_number() over(partition by a.email_brand order by case when trim(forename) = '' then 1 else 0 end, case when pet_name_1 = '' then 0 else 1 end nulls last,case when pet_name_2 = '' then 0 else 1 end nulls last) as em_run\n         from (\n                  select\n                      cd.cid,\n                      cd.name_urn,\n                      cid.bbw_urn,\n                      sha2(cid.bbw_urn,256) as uniqueid,\n                      cd.title,\n                      case\n                          when length(cd.firstname) = 1 then ''\n                          when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                          else cd.firstname\n                      end as forename,\n                      cd.lastname,\n                      cb.brand_preference,\n                      cb.brand_engagement,\n                      cb.email_brand,\n                      cb.emailable,\n                      cb.brand_id,\n                      pl.pet_name_1,\n                      pl.pet_name_2,\n                      pl.pet_name_3,\n                      case\n                          when cid.have_cat in ('Y') and cid.have_dog in ('Y') then 'both'\n                          when cid.have_cat in ('Y') then 'cat'\n                          when cid.have_dog in ('Y') then 'dog'\n                          when cid.have_cat in ('N','IN','IO') or cid.have_dog in ('N','IN','IO') then 'unknown'\n                      end as pet_seg,\n                      case\n                          when cid.have_cat in ('N','IN','IO') and cid.have_dog in ('N','IN','IO') then 'type'\n                          when p.cid is not null and p.p_type > '' and p.p_name = '' then 'name'\n                          when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is null and p_dob_type = 'Cat' then 'cat age'\n                          when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is null and p_dob_type = 'Dog' then 'dog age'\n                          when cid.have_dog = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.d_breed,'') = '' then 'breed'\n                          when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender = '' then 'gender'\n                          when cid.have_cat = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender > '' and nvl(p.c_colour,'') = '' then 'colour'\n                          when cid.have_cat = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender > '' and nvl(p.c_colour,'') > '' and c_indoor_outdoor = '' then 'outdoor'\n                          else ''\n                      end as npp_ecrm_pdc,\n           \n                      case when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is null then p_dob_name else '' end as npp_ecrm_pdc_age,\n                      case when cid.have_dog = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.d_breed,'') = '' then d_breed_name else '' end as npp_ecrm_pdc_breed,\n                      case when cid.have_cat = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender > '' and nvl(p.c_colour,'') = '' then  c_colour_name else '' end as npp_ecrm_pdc_colour,\n                      case when cid.have_cat = 'Y' and p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender > '' and nvl(p.c_colour,'') > '' and c_indoor_outdoor = '' then c_indoor_outdoor_name else '' end as npp_ecrm_pdc_outdoor,\n           \n                      case when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender = '' then p.no_gender_name end as npp_ecrm_pdc_gender,\n                      case when ae.cid is not null then '1' end as npp_ecrm_pdc_neither,\n                      case\n                          when ch.promotion_id = 'NPP07746_1' and ch.drop_date <= current_date-2 and ch.drop_date >= current_date-5 then 'NPP07746_2'\n                          when ch.promotion_id = 'NPP07746_2' and pack_id = '3' and ch.drop_date <= current_date-3 and ch.drop_date >= current_date-6 then 'NPP07746_3'\n                      end as promotion_id,\n                      pack_id,\n                      row_number() over(partition by cb.cid order by case when trim(cd.firstname) = '' then 1 else 0 end, case when pet_name_1 = '' then 0 else 1 end nulls last,case when pet_name_2 = '' then 0 else 1 end nulls last) as cid_run\n                  from ${Database}.live.cid_details cd\n                  join ${Database}.live.cid cid on cid.cid = cd.cid\n                  join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n                  left join (\n                             select distinct\n                                 cid,\n                                 first_value(pet_type) over (partition by cid order by case when pet_type = '' then 0 else 1 end asc) as p_type,\n                                 first_value(pet_name) over (partition by cid order by case when pet_name = '' then 0 else 1 end asc) as p_name,\n                                 first_value(pet_dob) over (partition by cid order by case when pet_dob is null then 0 else 1 end asc, pet_data_date desc, pet_name) as p_dob,\n                                 first_value(pet_type) over (partition by cid order by case when pet_dob is null then 0 else 1 end asc, pet_data_date desc, pet_name) as p_dob_type,\n                                 first_value(pet_name) over (partition by cid order by case when pet_dob is null then 0 else 1 end asc, pet_data_date desc, pet_name) as p_dob_name,\n                                 first_value(pet_breed) over (partition by cid order by case when nvl(pet_breed,'') = '' then 0 else 1 end asc) as p_breed,\n                                 first_value(case when pet_type = 'Dog' then pet_breed else 'Cat' end) over (partition by cid order by case when pet_type = 'Dog' then 0 else 1 end asc, case when nvl(pet_breed,'') = '' then 0 else 1 end asc,pet_data_date desc, pet_name) as d_breed,\n                                 first_value(case when pet_type = 'Dog' then pet_name else 'Cat' end) over (partition by cid order by case when pet_type = 'Dog' then 0 else 1 end asc, case when nvl(pet_breed,'') = '' then 0 else 1 end asc,pet_data_date desc, pet_name)  as d_breed_name,\n                                 first_value(pet_gender) over (partition by cid order by case when pet_gender = '' then 0 else 1 end asc, pet_data_date desc) as p_gender,\n                                 first_value(case when pet_type = 'Cat' then pet_colour else 'Dog' end) over (partition by cid order by case when pet_type = 'Cat' then 0 else 1 end asc, case when nvl(pet_colour,null) = '' then 0 else 1 end asc,pet_data_date desc, pet_name)  as c_colour,\n                                 first_value(case when pet_type = 'Cat' then pet_name else 'Dog' end) over (partition by cid order by case when pet_type = 'Cat' then 0 else 1 end asc, case when nvl(pet_colour,null) = '' then 0 else 1 end asc,pet_data_date desc, pet_name)  as c_colour_name,\n                                 first_value(case when pet_type = 'Cat' then PET_INDOOR_OUTDOOR else 'Dog' end) over (partition by cid order by case when pet_type = 'Cat' then 0 else 1 end asc, case when nvl(PET_INDOOR_OUTDOOR, '') = '' then 0 else 1 end asc,pet_data_date desc, pet_name)  as c_indoor_outdoor,\n                                 first_value(case when pet_type = 'Cat' then PET_NAME else 'Dog' end) over (partition by cid order by case when pet_type = 'Cat' then 0 else 1 end asc, case when nvl(PET_INDOOR_OUTDOOR, '') = '' then 0 else 1 end asc,pet_data_date desc, pet_name)  as c_indoor_outdoor_name,\n                                 first_value(pet_name) over (partition by cid order by case when pet_name > '' and pet_gender = '' then 1 else 0 end desc, pet_data_date desc, pet_name asc) as no_gender_name\n                             from ${Database}.live.cid_pet\n                            ) p on p.cid = cd.cid\n                  join (\n                           select distinct\n                               cid,\n                               first_value(promotion_id) over(partition by cid order by promotion_id desc, drop_date desc) as promotion_id,\n                               first_value(left(pack_id,1)) over(partition by cid order by promotion_id desc, drop_date desc) as pack_id,\n                               first_value(drop_date)over(partition by cid order by promotion_id desc, drop_date desc)as drop_date\n                           from ${Database}.live.xref_name_urn xr\n                           join ${Database}.db.comms_hist ch on ch.name_urn = xr.name_urn\n                           where promotion_id in ('NPP07746_1','NPP07746_2')\n                       ) ch on ch.cid = cd.cid\n                  left join (\n                                select\n                                    cid\n                                from ${Database}.live.cid_brand_question\n                                where question = 'Which pets do you have?'\n                                    and answer = 'neither'\n                            ) ae on ae.cid = cd.cid\n                  left join ${Database}.temp.npp07746_pet_name_lookup pl on pl.cid = cd.cid\n                  where cb.business_unit_id = 5\n                      and cb.brand_id = (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'purina masterbrand')\n                      and cb.emailable = 1\n                      and (cb.brand_preference = 1 or (cb.brand_engagement = 1 and  cb.brand_preference <> 0))\n                      and cb.first_date_brand <= current_date-2\n                      and cb.first_date_brand >= current_date-12\n                      and cd.cid not in (\n                                            select distinct\n                                                cid\n                                            from ${Database}.live.xref_name_urn xr\n                                            join ${Database}.db.comms_hist ch on ch.name_urn = xr.name_urn\n                                            join ${Database}.db.comms_hist_lookup chl on chl.campaign_id = ch.campaign_id and ch.promotion_id = chl.promotion_id and ch.cell_id = chl.cell_id\n                                            where lower(chl.campaign_description) regexp '.*better together.*'\n                                                and drop_date > add_months(current_date, -6)\n                                                and ch.campaign_id <> 'NPP07746'\n                                        )\n\t\t\t\t\t and cd.cid not in (select distinct cid from ${Database}.live.xref_name_urn xref\n\t\t\t\t\t\t\t\t\t\tjoin ${Database}.db.names dbn on dbn.name_urn = xref.name_urn\n\t\t\t\t\t\t\t\t\t    where dbn.name_urn ilike '%better together christmas%' \n\t\t\t\t\t\t\t\t\t\tand dbn.data_date < '2021-12-22'\n\t\t\t\t\t\t\t\t\t\t)\t\t\t\t\t\n              ) a\n         left join ${Database}.temp.npp_bt_welcome_supps s on a.cid = s.cid\n                                                          and s.promotion_id = a.promotion_id\n         left join ${Database}.temp.npp_bt_welcome_e_supps es on lower(a.email_brand) = lower(es.email)\n                                                             and es.promotion_id = a.promotion_id\n         where cid_run = 1\n             and s.cid is null\n             and es.email is null\n             and a.cid not in (\n                                  select distinct\n                                      cid\n                                  from ${Database}.temp.npp07746_bt_welcome_1\n                              )\n             and a.cid not in (\n                                  select distinct\n                                      cid\n                                  from ${Database}.db.names dbn\n                                  join ${Database}.live.xref_name_urn xr on xr.name_urn = dbn.name_urn\n                                  where dbn.source_data_controller_id = 5\n                                      and dbn.source = 'REG_FANFINDERS'\n                              )\n     ) b\nwhere b.em_run = 1\n    and promotion_id is not null;\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\n-- Insert into comms_hist\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id, pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP07746',\n    'NPP07746_1',\n    cell_id,\n    pack_id,\n    case when left(pack_id,1) = '1' then 1 else 0 end,\n    name_urn,\n    current_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    current_date,\n    brand_id\nfrom ${Database}.temp.npp07746_bt_welcome_1;\n\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id, pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP07746',\n    promotion_id,\n    cell_id,\n    pack_id,\n    case when left(pack_id,1) = '1' then 1 else 0 end,\n    name_urn,\n    current_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    current_date,\n    brand_id\nfrom ${Database}.temp.npp07746_bt_welcome_2_3\nwhere promotion_id in ('NPP07746_2','NPP07746_3');\n\ndrop table if exists ${Database}.temp.npp_bt_welcome_supps;\ndrop table if exists ${Database}.temp.npp_bt_welcome_e_supps;\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.npp07746_bt_welcome_em1_2 as select * from ${Database}.temp.npp07746_bt_welcome_1 where promotion_id = 'NPP07746_1' and left(pack_id,1) = '2';\ncreate or replace table ${Database}.jobs.npp07746_bt_welcome_em1_3 as select * from ${Database}.temp.npp07746_bt_welcome_1 where promotion_id = 'NPP07746_1' and left(pack_id,1) = '3';\ncreate or replace table ${Database}.jobs.npp07746_bt_welcome_em2_2 as select * from ${Database}.temp.npp07746_bt_welcome_2_3 where promotion_id = 'NPP07746_2' and left(pack_id,1) = '2';\ncreate or replace table ${Database}.jobs.npp07746_bt_welcome_em2_3 as select * from ${Database}.temp.npp07746_bt_welcome_2_3 where promotion_id = 'NPP07746_2' and left(pack_id,1) = '3';\ncreate or replace table ${Database}.jobs.npp07746_bt_welcome_em3_3 as select * from ${Database}.temp.npp07746_bt_welcome_2_3 where promotion_id = 'NPP07746_3' and left(pack_id,1) = '3';\n\n\n/******************************************************************************************\n   NPP07398 Your Purina Panel Invite Triggered Email + Reminders\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where promotion_id in ('NPP07398_TR1','NPP07398_TR2','NPP07398_TR3') and drop_date = current_date+1;\n\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ncreate or replace table ${Database}.temp.npp_your_purina_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.promotion_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and campaign_id like 'NPP07398'\n    and (promotion_id in ('NPP07398_TR1','NPP07398_TR2','NPP07398_TR3')\n         or promotion_id in  ('NPP07398','NPP07398_7'))--manual invites\n;\n\n\ncreate or replace table ${Database}.temp.npp_your_purina_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.promotion_id,\n    su.drop_date\nfrom ${Database}.temp.npp_your_purina_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n--pet lookup table\ncreate or replace table ${Database}.temp.npp07398_tr_pet_name_lookup\nas\nselect distinct\n    a.cid,\n    first_value(case when named_pet_run = 1 then pet_name end) over (partition by cid order by case when named_pet_run = 1 then 1 else 0 end desc) as pet_name_1,\n    first_value(case when named_pet_run = 2 then pet_name end) over (partition by cid order by case when named_pet_run = 2 then 1 else 0 end desc) as pet_name_2,\n    first_value(case when named_pet_run = 3 then pet_name end) over (partition by cid order by case when named_pet_run = 3 then 1 else 0 end desc) as pet_name_3,\n    first_value(case when named_pet_run = 1 then pet_name_s end) over (partition by cid order by case when named_pet_run = 1 then 1 else 0 end desc) as pet_name_1_s,\n    first_value(case when named_pet_run = 2 then pet_name_s end) over (partition by cid order by case when named_pet_run = 2 then 1 else 0 end desc) as pet_name_2_s\nfrom (\n        select\n            cid,\n            pet_name,\n            case when lower(right(pet_name,1)) = 's' then pet_name||'''' else pet_name||'''s' end as pet_name_s,\n            row_number() over (partition by a.cid order by case when pet_name > '' then 1 else 0 end desc, pet_data_date desc, pet_name asc) as named_pet_run\n        from (\n                select *,\n                    row_number() over (partition by cid, pet_name order by pet_data_date desc) as dupe_pet_run\n                from ${Database}.live.cid_pet\n                where pet_name > ''\n                union all\n                select *\n                ,     1 as dupe_pet_run\n                from ${Database}.live.cid_pet\n                where pet_name = '' or pet_name is null\n              ) a\n        where dupe_pet_run = 1 --remove pets of the same name but different species\n        ) a\n;\n\n\n--Panel Invitation Email\ncreate or replace table ${Database}.temp.NPP07398_tr_your_purina_1\nas\nselect b.*,\n       /* \n        --below replaced NPP09276\n        to_char(ntile(2) over(partition by brand_id order by uniqueId, name_urn)) as pack_id,\n        'NPP07398|NPP07398_TR1|1|'||to_char(ntile(2) over(partition by brand_id order by uniqueId, name_urn)) as kog_pack,\n        ntile(2) over(partition by brand_id  order by uniqueId, name_urn) as batch*/\n        '2' as pack_id,    --split B was winner of original SL test\n        'NPP07398|NPP07398_TR1|1|2' as kog_pack,\n        2 as batch\nfrom (\n    select\n        bbw_urn,\n        SHA2(bbw_urn,256) as uniqueId,\n        name_urn,\n        title,\n        forename,\n        lastname,\n        brand_preference,\n        brand_engagement,\n        email_brand as email,\n        emailable,\n        brand,\n        brand_id,\n        NPP_YP_PET_SEGMENT,\n        NPP_YP_PET_NAME_1,\n        NPP_YP_PET_NAME_2,\n        '1' as cell_id,\n        row_number() over(partition by a.email_brand order by case when forename = '' then 1 else 0 end, case when NPP_YP_PET_NAME_1 = '' then 0 else 1 end nulls last) as em_run\n    from (\n        select cd.cid,\n            cd.name_urn,\n            xrb.bbw_urn,\n            cd.title,\n            case\n                when length(cd.firstname) = 1 then ''\n                when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                else cd.firstname\n            end as forename,\n            cd.lastname,\n            cb.brand_preference,\n            cb.brand_engagement,\n            cb.email_brand,\n            cb.emailable,\n            rb.brand,\n            rb.brand_id,\n            case when cid.have_cat in ('Y','IN','IO') and cid.have_dog in ('Y','IN','IO') then 'Both'\n                 when cid.have_cat in ('Y','IN','IO') then 'Cat'\n                 when cid.have_dog in ('Y','IN','IO') then 'Dog'\n                 when cid.have_cat = 'N' and cid.have_dog = 'N' then 'Unknown'\n            end as NPP_YP_PET_SEGMENT,\n            case\n                when p.pet_name_3 > '' then 'your pets'\n                when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2\n                when p.pet_name_1 > '' then p.pet_name_1\n                else 'your pets'\n            end as NPP_YP_PET_NAME_1,\n            case\n                when p.pet_name_3 > '' then 'your pet''s'\n                when p.pet_name_2 > '' then p.pet_name_1||' or '||p.pet_name_2_s\n                when p.pet_name_1 > '' then p.pet_name_1_s\n                else 'your pet''s'\n            end as NPP_YP_PET_NAME_2,\n            row_number() over(partition by cb.cid order by case when trim(cd.firstname) = '' then 1 else 0 end, case when pet_name_1 = '' then 0 else 1 end nulls last,case when pet_name_2 = '' then 0 else 1 end nulls last) as cid_run\n        from    ${Database}.live.cid_details    cd\n        join    ${Database}.live.cid    cid on cid.cid = cd.cid\n        join    ${Database}.live.cid_brand  cb on cd.cid = cb.cid\n        join    ${Database}.live.ref_brand  rb on rb.brand_id = cb.brand_id\n         left join (select distinct cid from ${Database}.live.cid_brand where brand_id in (136, 137) and (brand_preference = 1 or (brand_engagement = 1 and  brand_preference <> 0))) exb on cd.cid = exb.cid\n         left join (select distinct cid\n                               from ${Database}.live.cid_brand_question cbq\n                               join ${Database}.db.ref_brand rb on rb.brand_id = cbq.brand_id\n                               where rb.division_id = 12 --purina\n                               and rb.brand_id not in (136,137)\n                               and question ilike ('%Overall Rating of Product%')\n                               and answer_data_date > add_months(current_date,-24)\n                              )  bv on bv.cid = cd.cid\n                    left join (select distinct cid\n                                from ${Database}.live.adestra_events\n                                where (left(adestra_campaign_name,3) ilike 'npp' or left(campaign_id,3) ilike 'npp')\n                                and lower(event_name) regexp '(.*)(read|click)(.*)'\n                                and event_timestamp > add_months(current_date,-12)\n                              ) ae on ae.cid = cd.cid\n                    join (\n                          select\n                              cid,\n                              min(bbw_urn) as bbw_urn\n                          from ${Database}.live.xref_name_urn\n                      group by 1\n                        ) xrb on xrb.cid = cd.cid\n        left join ${Database}.temp.NPP07398_tr_pet_name_lookup p on p.cid = cd.cid\n        left join ${Database}.temp.npp_your_purina_supps s    on cd.cid = s.cid\n                                and ((s.cell_id = '1'\n                                and s.promotion_id ilike ('%NPP07398_TR1%'))\n                                    or s.promotion_id in ('NPP07398','NPP07398_7'))\n        left join  ${Database}.temp.npp_your_purina_e_supps es on lower(cb.email_brand) = lower(es.email)\n                                and ((es.cell_id = '1'\n                                and es.promotion_id ilike ('%NPP07398_TR1%'))\n                                    or es.promotion_id in ('NPP07398','NPP07398_7'))\n        where   cb.business_unit_id = 5\n        and lower(rb.brand) regexp '(.*)(masterbrand|growing pup|kitten code)(.*)'\n        and (brand_preference = 1 or (brand_engagement = 1 and  brand_preference <> 0))\n        and (\n            bv.cid is not null\n            or (ae.cid is not null and cid.PURINA_ENGAGEMENT_SCORE > 171)\n            )\n        and     cb.emailable = 1\n        and s.cid is null\n        and es.email is null\n        and cd.cid not in (select distinct cid from ${Database}.live.adestra_events --should be covered by suppression but adding this in just in case\n                            where adestra_campaign_id in ('22828','22827','23343','23342','24326')\n                           )\n        and cd.cid not in (select distinct cid from ${Database}.live.names\n                            where source = 'REG_YOUR_PURINA') -- exclude your purina acquisitions from panel invite as they have already joined\n        and exb.cid is null\n        ) a\n    where cid_run = 1\n)b\nwhere b.em_run = 1\n;\n\n--reminder 1 and 2 emails\nCREATE OR REPLACE TABLE ${Database}.temp.NPP07398_tr_your_purina_2_3\nas\nselect b.*,\n        to_char(ntile(2) over(partition by promotion_id order by uniqueId, name_urn)) as pack_id,\n        'NPP07398|'||promotion_id||'|1|'||to_char(ntile(2) over(partition by promotion_id order by uniqueId, name_urn)) as kog_pack,\n        ntile(2) over(partition by promotion_id  order by uniqueId, name_urn) as batch\nfrom (\n    select\n        bbw_urn,\n        SHA2(bbw_urn,256) as uniqueId,\n        name_urn,\n        title,\n        forename,\n        lastname,\n        brand_preference,\n        brand_engagement,\n        email_brand as email,\n        emailable,\n        brand,\n        brand_id,\n        NPP_YP_PET_SEGMENT,\n        NPP_YP_PET_NAME_1,\n        NPP_YP_PET_NAME_2,\n        '1' as cell_id,\n                    a.promotion_id,\n        row_number() over(partition by a.promotion_id,a.email_brand order by case when forename = '' then 1 else 0 end, case when NPP_YP_PET_NAME_1 = '' then 0 else 1 end nulls last) as em_run\n    from (\n        select cd.cid,\n            cd.name_urn,\n            xrb.bbw_urn,\n            cd.title,\n            case\n                when length(cd.firstname) = 1 then ''\n                when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                else cd.firstname\n            end as forename,\n            cd.lastname,\n            cb.brand_preference,\n            cb.brand_engagement,\n            cb.email_brand,\n            cb.emailable,\n            rb.brand,\n            rb.brand_id,\n            case when cid.have_cat in ('Y','IN','IO') and cid.have_dog in ('Y','IN','IO') then 'Both'\n                 when cid.have_cat in ('Y','IN','IO') then 'Cat'\n                 when cid.have_dog in ('Y','IN','IO') then 'Dog'\n                 when cid.have_cat = 'N' and cid.have_dog = 'N' then 'Unknown'\n            end as NPP_YP_PET_SEGMENT,\n            case\n                when p.pet_name_3 > '' then 'your pets'\n                when p.pet_name_2 > '' then p.pet_name_1||' and '||p.pet_name_2\n                when p.pet_name_1 > '' then p.pet_name_1\n                else 'your pets'\n            end as NPP_YP_PET_NAME_1,\n            case\n                when p.pet_name_3 > '' then 'your pet''s'\n                when p.pet_name_2 > '' then p.pet_name_1||' or '||p.pet_name_2_s\n                when p.pet_name_1 > '' then p.pet_name_1_s\n                else 'your pet''s'\n            end as NPP_YP_PET_NAME_2,\n            /*\n            case\n                 when clicked = 0 and ae.sent_date >= current_date - 5 and ae.sent_date <= current_date - 3 then 'NPP07398_TR2'\n                 when clicked = 1 and ae.sent_date >= current_date - 10 and ae.sent_date <= current_date - 7 and qu.cid is null then 'NPP07398_TR3'\n            end as promotion_id,\n            */\n            case\n                 when clicked = 0 and ae.sent_date >= current_date - 5  and ae.sent_date <= current_date - 3 then 'NPP07398_TR2'                            --<--outstanding query\n                 when clicked = 1 and ae.sent_date >= current_date - 10 and ae.sent_date <= current_date - 5 and qu.cid is null then 'NPP07398_TR3'\n                 when clicked = 0 and ae.sent_date >= current_date - 8 and ae.sent_date < current_date - 5 and qu.cid is null then 'NPP07398_TR3'           --<--outstanding query\n            end as promotion_id,\n            row_number() over(partition by cb.cid order by case when trim(cd.firstname) = '' then 1 else 0 end, case when pet_name_1 = '' then 0 else 1 end nulls last,case when pet_name_2 = '' then 0 else 1 end nulls last) as cid_run\n        from    ${Database}.live.cid_details    cd\n        join    ${Database}.live.cid    cid on cid.cid = cd.cid\n        join    ${Database}.live.cid_brand  cb on cd.cid = cb.cid\n        join    ${Database}.live.ref_brand  rb on rb.brand_id = cb.brand_id\n        join (\n                select\n                    cid,\n                    min(bbw_urn) as bbw_urn\n                from ${Database}.live.xref_name_urn\n                group by 1\n             ) xrb on xrb.cid = cd.cid\n        join (\n                 select\n                     cid,\n                     max(case when adestra_campaign_name ilike 'NPP08387_Your_Purina_Invitation_%' and event_name ilike '%sent_campaign%' then cast(event_timestamp as date) end) as sent_date,\n                     max(case when lower(event_name) regexp '.*click.*' then 1 else 0 end) as clicked\n                 from ${Database}.live.adestra_events\n                 where lower(adestra_campaign_name) regexp '(.*)(npp08387_your_purina_invitation_|npp08387_your_purina_reminder_1_)(.*)'\n                 group by 1\n             ) ae on ae.cid = cd.cid\n        left join (\n        select distinct cid\n                    from ${Database}.live.cid_question q\n                    where question = 'Where do you buy food for your pets?'\n             )  qu on qu.cid = cd.cid\n    left join ${Database}.temp.NPP07398_tr_pet_name_lookup p on p.cid = cd.cid\n    where   cb.business_unit_id = 5\n    and lower(rb.brand) regexp '(.*)(masterbrand|growing pup|kitten code)(.*)'\n    and (brand_preference = 1 or (brand_engagement = 1 and  brand_preference <> 0))\n    and     cb.emailable = 1\n    ) a\n          left join  ${Database}.temp.npp_your_purina_supps s    on a.cid = s.cid\n                        and ((s.cell_id = '1'\n                        and s.promotion_id = a.promotion_id)\n                            or s.promotion_id in ('NPP07398','NPP07398_7'))\n    left join  ${Database}.temp.npp_your_purina_e_supps es on lower(a.email_brand) = lower(es.email)\n                        and ((es.cell_id = '1'\n                        and es.promotion_id = a.promotion_id)\n                            or es.promotion_id in ('NPP07398','NPP07398_7'))\n    where cid_run = 1\n        and s.cid is null\n        and es.email is null\n)b\nwhere b.em_run = 1\n;\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\n-- Insert into comms_hist\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id, pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n )\n select\n     'E',\n     'NPP07398',\n     'NPP07398_TR1' ,\n     '1',\n     to_char(batch),\n     0,\n     name_urn,\n     current_date+1,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date+1,\n     brand_id\nfrom ${Database}.temp.NPP07398_tr_your_purina_1\n;\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id, pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n )\n select\n     'E',\n     'NPP07398',\n     promotion_id,\n     '1',\n     to_char(batch),\n     0,\n     name_urn,\n     current_date+1,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date+1,\n     brand_id\nfrom ${Database}.temp.NPP07398_tr_your_purina_2_3\nwhere promotion_id is not null;\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\n--batchA invitation should always have zero volume after NPP09276 optimisation\ncreate or replace table ${Database}.jobs.NPP07398_Your_Purina_Invitation_batch_A as select name_urn, forename, npp_yp_pet_segment, npp_yp_pet_name_1, npp_yp_pet_name_2, email, uniqueId, batch, kog_pack from ${Database}.temp.NPP07398_tr_your_purina_1 where batch = 1;\ncreate or replace table ${Database}.jobs.NPP07398_Your_Purina_Invitation_batch_B as select name_urn, forename, npp_yp_pet_segment, npp_yp_pet_name_1, npp_yp_pet_name_2, email, uniqueId, batch, kog_pack from ${Database}.temp.NPP07398_tr_your_purina_1 where batch = 2;\ncreate or replace table ${Database}.jobs.NPP07398_Your_Purina_Reminder_1_batch_A as select name_urn, forename, npp_yp_pet_segment, npp_yp_pet_name_1, npp_yp_pet_name_2, email, uniqueId, batch, kog_pack from ${Database}.temp.NPP07398_tr_your_purina_2_3 where batch = 1 and promotion_id = 'NPP07398_TR2';\ncreate or replace table ${Database}.jobs.NPP07398_Your_Purina_Reminder_1_batch_B as select name_urn, forename, npp_yp_pet_segment, npp_yp_pet_name_1, npp_yp_pet_name_2, email, uniqueId, batch, kog_pack from ${Database}.temp.NPP07398_tr_your_purina_2_3 where batch = 2 and promotion_id = 'NPP07398_TR2';\ncreate or replace table ${Database}.jobs.NPP07398_Your_Purina_Reminder_2_batch_A as select name_urn, forename, npp_yp_pet_segment, npp_yp_pet_name_1, npp_yp_pet_name_2, email, uniqueId, batch, kog_pack from ${Database}.temp.NPP07398_tr_your_purina_2_3 where batch = 1 and promotion_id = 'NPP07398_TR3';\ncreate or replace table ${Database}.jobs.NPP07398_Your_Purina_Reminder_2_batch_B as select name_urn, forename, npp_yp_pet_segment, npp_yp_pet_name_1, npp_yp_pet_name_2, email, uniqueId, batch, kog_pack from ${Database}.temp.NPP07398_tr_your_purina_2_3 where batch = 2 and promotion_id = 'NPP07398_TR3';\n\n/******************************************************************************************\nEmmas Diary Welcome email\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NPP08393' and cell_id in ('1') and drop_date = current_date;\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ndrop table if exists ${Database}.temp.NPP_EMMA_supps cascade;\ncreate table ${Database}.temp.NPP_EMMA_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id ='NPP08393';\n\ndrop table if exists ${Database}.temp.NPP_EMMA_e_supps cascade;\ncreate table ${Database}.temp.NPP_EMMA_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.NPP_EMMA_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\ndrop table if exists ${Database}.jobs.NPP08393_emma_welcome cascade;\ncreate table ${Database}.jobs.NPP08393_emma_welcome\nas\nselect a.name_urn,\n\t   a.forename,\n       email,\n\t   a.brand_preference,\n\t   a.brand_engagement,\n\t   a.brand_id,\n\t   a.npp_ecrm_pet_segment,\n\t   a.npp_ecrm_pdc,\n    case when npp_ecrm_pet_segment = 'Cat' then '1'\n        when npp_ecrm_pet_segment = 'Dog' then '2'\n        when npp_ecrm_pet_segment = 'Both' then '3'\n        when npp_ecrm_pet_segment = 'Unknown' then '4'\n        end as pack_id,\n\t'NPP08393|NPP08393|1|'||case when npp_ecrm_pet_segment = 'Cat' then '1'\n                                when npp_ecrm_pet_segment = 'Dog' then '2'\n                                when npp_ecrm_pet_segment = 'Both' then '3'\n                                when npp_ecrm_pet_segment = 'Unknown' then '4' end as kog_pack\nfrom (\n       \n\t\tselect cd.cid,\n\t\t\tcd.name_urn,\n\t\t\tcid.bbw_urn,\n\t\t\tcase \n\t\t\t\twhen length(cd.firstname) = 1 then ''\n\t\t\t\twhen substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n\t\t\t\telse cd.firstname\n\t\t\tend as forename,\n\t\t\tcb.brand_preference,\n\t\t\tcb.brand_engagement,\n\t\t\tcb.email_brand as email,\n\t\t\tcb.emailable,\n\t\t\tcb.brand_id,\n            case when cid.have_cat in ('Y') and cid.have_dog in ('Y') then 'Both'\n                 when cid.have_cat in ('Y') then 'Cat'\n                 when cid.have_dog in ('Y') then 'Dog'\n                 when cid.have_cat in ('N','IN','IO') or cid.have_dog in ('N','IN','IO') then 'Unknown'\n                 end as npp_ecrm_pet_segment,\n            case when cid.have_cat in ('N','IN','IO') and cid.have_dog in ('N','IN','IO') then 'type'\n                 when p.cid is not null and p.p_type > '' and p.p_name = '' then 'name'\n                 when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is null then 'age'\n                 when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') = '' then 'breed'\n                 when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender = '' then 'gender'\n                 when p.cid is not null and p.p_type > '' and p.p_name > '' and p.p_dob is not null and nvl(p.p_breed,'') > '' and p.p_gender > '' and nvl(p.p_colour,'') = '' then 'colour'\n                 else 'name'\n            end as npp_ecrm_pdc,\n\t\t\trow_number() over(partition by cb.email_brand order by case when trim(cd.firstname) = '' then 1 else 0 end) as em_run\n\t\tfrom \t${Database}.live.cid_details  \tcd\n\t\tjoin \t${Database}.live.cid \t\tcid on cid.cid = cd.cid \n\t\tjoin \t${Database}.live.cid_brand \tcb on cd.cid = cb.cid\n        left join (select distinct cid,\n                        first_value(pet_type) over (partition by cid order by case when pet_type = '' then 0 else 1 end asc) as p_type,\n                        first_value(pet_name) over (partition by cid order by case when pet_name = '' then 0 else 1 end asc) as p_name,\n                        first_value(pet_dob) over (partition by cid order by case when pet_dob is null then 0 else 1 end asc) as p_dob,\n                        first_value(pet_breed) over (partition by cid order by case when nvl(pet_breed,'') = '' then 0 else 1 end asc) as p_breed,\n                        first_value(pet_gender) over (partition by cid order by case when pet_gender = '' then 0 else 1 end asc, pet_data_date desc) as p_gender,\n                        first_value(pet_colour) over (partition by cid order by case when (pet_colour = '' or pet_colour is null) then 0 else 1 end asc) as p_colour,\n                        first_value(pet_name) over (partition by cid order by case when pet_name > '' and pet_gender = '' then 1 else 0 end desc, pet_data_date desc, pet_name asc) as no_gender_name\n                   from ${Database}.live.cid_pet\n                  )\tp on p.cid = cd.cid                                                   \n\t\tleft join  ${Database}.temp.NPP_EMMA_supps s    on cd.cid = s.cid\n\t\t\t\t\t\t\t\tand s.cell_id = '1'\n\t\tleft join  ${Database}.temp.NPP_EMMA_e_supps es on lower(cb.email_brand) = lower(es.email)\n\t\t\t\t\t\t\t\tand es.cell_id = '1'\n        join ${Database}.live.xref_name_urn xr on xr.cid = cd.cid\n        join  ${Database}.db.names dbn on dbn.name_urn = xr.name_urn\n\t\twhere \tcb.business_unit_id = 5\n             and cb.brand_id = (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'purina masterbrand')\n             and dbn.source = 'REG_EMMAS_DIARY' \n             and cb.emailable = 1\n             and (cb.brand_preference = 1 or (cb.brand_engagement = 1 and  cb.brand_preference <> 0))             \n            and s.cid is null \n            and es.email is null\n\t        and cb.first_date_brand >= current_date-5  \n            and cd.cid not in (\n                               select distinct cid \n                               from ${Database}.live.xref_name_urn xr\n                               join ${Database}.db.comms_hist ch on ch.name_urn = xr.name_urn\n                               join ${Database}.db.comms_hist_lookup chl on chl.campaign_id = ch.campaign_id and ch.promotion_id = chl.promotion_id and ch.cell_id = chl.cell_id\n                               where chl.campaign_description ilike '%better together welcome%'\n                                        --never had BT welcome\n                              )\n            and cd.cid not in (select cid \n                               from ${Database}.db.names dbn\n                               join ${Database}.live.xref_name_urn xr on xr.name_urn = dbn.name_urn\n                               where dbn.source_data_controller_id = 5\n                                 and dbn.source = 'NPP_PET_AVATAR_DAILY' \n                              )                  \n\t) a\n\twhere em_run = 1 \n ;\n\ndrop table if exists ${Database}.temp.NPP_EMMA_supps;\ndrop table if exists ${Database}.temp.NPP_EMMA_e_supps;\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP08393',\n    'NPP08393',\n    '1',\n    pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.jobs.NPP08393_emma_welcome;\n\n\n/******************************************************************************************\nBetter Together Christmas (Xmas) Welcome email\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NPP08649' and promotion_id in ('NPP08649_PRE','NPP08649_1','NPP08649_2','NPP08649_3') and cell_id in ('1') and drop_date = current_date;\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ndrop table if exists ${Database}.temp.NPP_xmas_supps cascade;\ncreate table ${Database}.temp.NPP_xmas_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.promotion_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id in ('NPP08649_PRE','NPP08649_1','NPP08649_2','NPP08649_3');\n\ndrop table if exists ${Database}.temp.NPP_xmas_e_supps cascade;\ncreate table ${Database}.temp.NPP_xmas_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.promotion_id,\n    su.drop_date\nfrom ${Database}.temp.NPP_xmas_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n--pet names\ndrop table if exists ${Database}.temp.NPP08649_xmas_cid_petnames;\ncreate table ${Database}.temp.NPP08649_xmas_cid_petnames\nas\nselect cid,\n        pet_1_name,\n        pet_2_name,\n        pet_3_name,    \n        pet_1_type,\n        pet_2_type,   \n        pet_3_type,\n        kit_1_name,\n        kit_2_name,\n        kit_3_name,\n        pup_1_name,\n        pup_2_name,\n        pup_3_name,\n        kit_1_dob,\n        kit_2_dob,\n        kit_3_dob,\n        pup_1_dob,\n        pup_2_dob,\n        pup_3_dob,\n     case when npp_ecrm_xmas_welcome = 'kc' then cat_incomplete\n            else nvl(pet_incomplete,'') end as pet_incomplete,\n        type_incomplete,\n     case when missing_dob          is null  then 2 else 0 end as missing_dob          ,--month + age\n     case when missing_breed        is null or missing_breed        = '' then 1 else 0 end as missing_breed        ,\n     case when missing_colour       is null or missing_colour       = '' then 1 else 0 end as missing_colour       ,\n     case when missing_indoor_outdoor   is null or missing_indoor_outdoor   = '' then 1 else 0 end as missing_indoor_outdoor   ,\n     case when missing_gender       is null or missing_gender       = '' then 1 else 0 end as missing_gender   ,\n     case when --nvl(kit_1_name,'') > '' and nvl(pup_1_name,'') > ''                                         --should we ensure the have only young pets AND a name?\n            npp_ecrm_xmas_welcome = 'kc' then   kit_1_name else pet_1_name end as  npp_ecrm_xmas,\n     npp_ecrm_xmas_welcome,\n     npp_ecrm_pdc,\n     pet_seg\nfrom (     \n        select distinct\n            cid,    \n            first_value(case when pet_order = 1 then pet_name end) over (partition by cid order by case when pet_order = 1 then 1 else 0 end desc) as pet_1_name,\n            first_value(case when pet_order = 2 then pet_name end) over (partition by cid order by case when pet_order = 2 then 1 else 0 end desc) as pet_2_name,\n            first_value(case when pet_order = 3 then pet_name end) over (partition by cid order by case when pet_order = 3 then 1 else 0 end desc) as pet_3_name,    \n            first_value(case when pet_order = 1 then pet_type end) over (partition by cid order by case when pet_order = 1 then 1 else 0 end desc) as pet_1_type,\n            first_value(case when pet_order = 2 then pet_type end) over (partition by cid order by case when pet_order = 2 then 1 else 0 end desc) as pet_2_type,   \n            first_value(case when pet_order = 3 then pet_type end) over (partition by cid order by case when pet_order = 3 then 1 else 0 end desc) as pet_3_type,\n            \n            first_value(case when pet_type = 'Cat' and pet_dob > current_date-365 and pet_order = 1 then pet_name end) over (partition by cid order by case when pet_order = 1 then 1 else 0 end desc) as kit_1_name,\n            first_value(case when pet_type = 'Cat' and pet_dob > current_date-365 and pet_order = 2 then pet_name end) over (partition by cid order by case when pet_order = 2 then 1 else 0 end desc) as kit_2_name,\n            first_value(case when pet_type = 'Cat' and pet_dob > current_date-365 and pet_order = 3 then pet_name end) over (partition by cid order by case when pet_order = 3 then 1 else 0 end desc) as kit_3_name,\n            first_value(case when pet_type = 'Dog' and pet_dob > current_date-365 and pet_order = 1 then pet_name end) over (partition by cid order by case when pet_order = 1 then 1 else 0 end desc) as pup_1_name,\n            first_value(case when pet_type = 'Dog' and pet_dob > current_date-365 and pet_order = 2 then pet_name end) over (partition by cid order by case when pet_order = 2 then 1 else 0 end desc) as pup_2_name,\n            first_value(case when pet_type = 'Dog' and pet_dob > current_date-365 and pet_order = 3 then pet_name end) over (partition by cid order by case when pet_order = 3 then 1 else 0 end desc) as pup_3_name,\n            \n            first_value(case when pet_type = 'Cat' and pet_dob > current_date-365 and pet_order = 1 then pet_dob end) over (partition by cid order by case when pet_order = 1 then 1 else 0 end desc) as kit_1_dob,\n            first_value(case when pet_type = 'Cat' and pet_dob > current_date-365 and pet_order = 2 then pet_dob end) over (partition by cid order by case when pet_order = 2 then 1 else 0 end desc) as kit_2_dob,\n            first_value(case when pet_type = 'Cat' and pet_dob > current_date-365 and pet_order = 3 then pet_dob end) over (partition by cid order by case when pet_order = 3 then 1 else 0 end desc) as kit_3_dob,\n            first_value(case when pet_type = 'Dog' and pet_dob > current_date-365 and pet_order = 1 then pet_dob end) over (partition by cid order by case when pet_order = 1 then 1 else 0 end desc) as pup_1_dob,\n            first_value(case when pet_type = 'Dog' and pet_dob > current_date-365 and pet_order = 2 then pet_dob end) over (partition by cid order by case when pet_order = 2 then 1 else 0 end desc) as pup_2_dob,\n            first_value(case when pet_type = 'Dog' and pet_dob > current_date-365 and pet_order = 3 then pet_dob end) over (partition by cid order by case when pet_order = 3 then 1 else 0 end desc) as pup_3_dob,\n        \n            first_value(case when incomplete_pet_details = 1 and pet_type = 'Cat' then pet_name end) over (partition by cid order by incomplete_pet_details desc, pet_data_date, pet_dob desc) as cat_incomplete, -- will be used where kitten name is to be used\n            first_value(case when incomplete_pet_details = 1 then pet_name end)                      over (partition by cid order by incomplete_pet_details desc, pet_data_date, pet_dob desc) as pet_incomplete,\n            first_value(case when incomplete_pet_details = 1 then pet_type end)                      over (partition by cid order by incomplete_pet_details desc, pet_data_date, pet_dob desc) as type_incomplete,\n            first_value(case when incomplete_pet_details = 1 then pet_dob  end)                      over (partition by cid order by incomplete_pet_details desc, pet_data_date, pet_dob desc) as missing_dob,\n            first_value(case when incomplete_pet_details = 1 then pet_breed end)                     over (partition by cid order by incomplete_pet_details desc, pet_data_date, pet_dob desc) as missing_breed,\n            first_value(case when incomplete_pet_details = 1 then pet_colour end)                    over (partition by cid order by incomplete_pet_details desc, pet_data_date, pet_dob desc) as missing_colour,\n            first_value(case when incomplete_pet_details = 1 then pet_indoor_outdoor end)            over (partition by cid order by incomplete_pet_details desc, pet_data_date, pet_dob desc) as missing_indoor_outdoor,\n            first_value(case when incomplete_pet_details = 1 then pet_gender end)                    over (partition by cid order by incomplete_pet_details desc, pet_data_date, pet_dob desc) as missing_gender,\n\n              case when pet_seg = 'Dog' and first_value(pet_type) over (partition by cid order by pet_type desc, pet_dob asc nulls last) = 'Dog' and first_value(pet_dob) over (partition by cid order by pet_type desc, pet_dob asc nulls last)> current_date-365 then 'gp'\n                 when pet_seg = 'Both' and (first_value(pet_type) over (partition by cid order by pet_type asc, pet_dob asc nulls last) = 'Cat' and  first_value(pet_dob) over (partition by cid order by pet_type asc, pet_dob asc nulls last)> current_date-365)\n                     and (first_value(pet_type) over (partition by cid order by pet_type desc, pet_dob asc nulls last) = 'Dog' and  first_value(pet_dob) over (partition by cid order by pet_type desc, pet_dob asc nulls last)> current_date-365) then 'kc'\n                 when pet_seg = 'Cat' and first_value(pet_type) over (partition by cid order by pet_type asc, pet_dob asc nulls last) = 'Cat' and  first_value(pet_dob) over (partition by cid order by pet_type asc, pet_dob asc nulls last)> current_date-365 then 'kc'\n                 when pet_seg = 'Both' then 'bt'\n                 when first_value(pet_type) over (partition by cid order by pet_type desc, pet_dob asc nulls last) = 'Dog' and first_value(pet_dob) over (partition by cid order by pet_type desc, pet_dob asc nulls last)> current_date-365 then 'gp'\n            else 'bt' end as npp_ecrm_xmas_welcome,\n            first_value(incomplete_pet_details) over (partition by cid order by incomplete_pet_details desc nulls last) as npp_ecrm_pdc,\n            pet_seg\n        from\n            (select distinct\n                cb.cid,\n                case when cp.pet_name in ('',' Years Old','Years Old','0Atis','0Liver','0Lly','0Pel','0Scar','0Z','1 Max. 2 Pippa','1 Poppy 2 Dottie','1. Vasska 2. Sherman','10 Years','12 Cats', --manually suppress bad names as per email from CR\n                                          '14 Others','15 Boy','1Sheba','2 Cats  Barry','2 Cats  Demi','2 Catsbrahma','2 Dogs','2 Dogs  Coco','2 Dogs Coco','2 Honey','2 Kerry','2 S','2 Siamese Cats Jasmin',\n                                          '2 X Dogs Star','3 Cats','3 Cats Eve','3 Cats Oldest Garfield','3 Jack','3 Moggie','3 Others','3 S','34C25','3D','3Hree','4 Cats','4 Cats Bingo','5 Cats','5 Kittens',\n                                          '6 Cats  Lucy','7Even','8 Cats Owned','9Yrs','''Bea', 'Bertha Simmering Light','Cant Name Them Yet','Cat 1','Cat 2','Cat 3','Cat 4','Cat A','Cat Name','Cat1',\n                                          'Cat1 Tom','Cat12','Cat13','Cat1Bentley','Cat2','Cat3','''Cea','''Cooper'' Magic Pulse','Do Not Have One','Dog 1','Dog 2','Dog 3','Dog 4','Dog 5','Dog1','Dog11','Dog2','Dog3',\n                                          'Dont Have Any','Dont Have Names Yet','Dont Have One','Don''t Know','Dont Know Yet','Don''t Know Yet','''Dre','Dunno','Dunno Yet','Éva','Gaylord','Have 5 Cats','Have 6 Cats',\n                                          'Have Not Named Them','Havent Chosen Yet','Havent Named Them','Havent Named Yet','I Have 11','I Have 2 Maisie','I Have 2 Micky','I Have 3 Cats','I Have 3 Twinkle',\n                                          'I Have 4 Cats','I Have 5','I Have 5 Cats','I Have 5 Cat''s','I Have Lots','I Have Six Molly','I Havent Got One','Ive Got 24 Cats','I''ve Got 4 Cats','Ive Got 6 Mia',\n                                          'Just Born','Just Born2','''Kc''','No Cat','No Idea','No Kittens','No More','No.1','No.2','No1 No2 No3 No','Not Given Yet','Not Got Adult',\n                                          'Not Keeping','Not Named','Not Named As Yet','Not Named Her Yet','Not Picked On Yet','Not Sure','Not Sure New Kitten','Not Sure Yet','Not Yet','Not Yet Chose One',\n                                          'Not Yey Named','Nothing Yet','''Olly','Only 1 Dog','Out Door Cat','Pup1','Pup2','Pup3','Puppies 10','Puppies X 10','Puppy 1','Puppy 2','Puppy 3','Puss 1','Puss 2',\n                                          'Still Thinking Of Name','Still To Name Them','\uD83C\uDF40 Clover',\n                                          '..Non Existent..','2 Being Sold','3 More','4 Babies','A Donthave A Cat','Zz','Zzz','Www','Ww') then null \n                      when cp.pet_name ilike any ('%cats%','%kitten%','%litter%','%months%','%weeks%','%years%','%mth%','%wks%','%yrs%','%total%','%aaa%','%xxx%','%vvv%','%yet to%','%dogs%','%puppies%') then null\n                                          else cp.pet_name end as pet_name,\n                cp.pet_type,\n                cp.pet_id,\n                cp.pet_data_date,\n                cp.pet_dob,\n                cp.pet_breed,\n                cp.pet_gender,\n                cp.pet_colour,\n                cp.pet_life_stage,\n                cp.pet_indoor_outdoor,\n                case when pet_type = 'Cat' and pet_dob > current_date-365 then 1 else 0 end as have_kit,\n                case when pet_type = 'Dog' and pet_dob > current_date-365 then 1 else 0 end as have_pup,\n                case when cp.pet_name > '' and (cp.pet_dob is null or nvl(cp.pet_breed,'') = '' or nvl(cp.pet_colour,'') = '' or (pet_type = 'Cat' and nvl(cp.pet_indoor_outdoor,'')= '') or nvl(cp.pet_gender,'') = '') \n                                           and cp.pet_name not in (' Years Old','Years Old','0Atis','0Liver','0Lly','0Pel','0Scar','0Z','1 Max. 2 Pippa','1 Poppy 2 Dottie','1. Vasska 2. Sherman','10 Years','12 Cats', --manually suppress bad names as per email from CR\n                                                                   '14 Others','15 Boy','1Sheba','2 Cats  Barry','2 Cats  Demi','2 Catsbrahma','2 Dogs','2 Dogs  Coco','2 Dogs Coco','2 Honey','2 Kerry','2 S','2 Siamese Cats Jasmin',\n                                                                   '2 X Dogs Star','3 Cats','3 Cats Eve','3 Cats Oldest Garfield','3 Jack','3 Moggie','3 Others','3 S','34C25','3D','3Hree','4 Cats','4 Cats Bingo','5 Cats','5 Kittens',\n                                                                   '6 Cats  Lucy','7Even','8 Cats Owned','9Yrs','''Bea', 'Bertha Simmering Light','Cant Name Them Yet','Cat 1','Cat 2','Cat 3','Cat 4','Cat A','Cat Name','Cat1',\n                                                                   'Cat1 Tom','Cat12','Cat13','Cat1Bentley','Cat2','Cat3','''Cea','''Cooper'' Magic Pulse','Do Not Have One','Dog 1','Dog 2','Dog 3','Dog 4','Dog 5','Dog1','Dog11','Dog2','Dog3',\n                                                                   'Dont Have Any','Dont Have Names Yet','Dont Have One','Don''t Know','Dont Know Yet','Don''t Know Yet','''Dre','Dunno','Dunno Yet','Éva','Gaylord','Have 5 Cats','Have 6 Cats',\n                                                                   'Have Not Named Them','Havent Chosen Yet','Havent Named Them','Havent Named Yet','I Have 11','I Have 2 Maisie','I Have 2 Micky','I Have 3 Cats','I Have 3 Twinkle',\n                                                                   'I Have 4 Cats','I Have 5','I Have 5 Cats','I Have 5 Cat''s','I Have Lots','I Have Six Molly','I Havent Got One','Ive Got 24 Cats','I''ve Got 4 Cats','Ive Got 6 Mia',\n                                                                   'Just Born','Just Born2','''Kc''','No Cat','No Idea','No Kittens','No More','No.1','No.2','No1 No2 No3 No','Not Given Yet','Not Got Adult',\n                                                                   'Not Keeping','Not Named','Not Named As Yet','Not Named Her Yet','Not Picked On Yet','Not Sure','Not Sure New Kitten','Not Sure Yet','Not Yet','Not Yet Chose One',\n                                                                   'Not Yey Named','Nothing Yet','''Olly','Only 1 Dog','Out Door Cat','Pup1','Pup2','Pup3','Puppies 10','Puppies X 10','Puppy 1','Puppy 2','Puppy 3','Puss 1','Puss 2',\n                                                                   'Still Thinking Of Name','Still To Name Them','\uD83C\uDF40 Clover')\n                                        then 1 else 0 end as incomplete_pet_details,\n                row_number() over (partition by cb.cid \n                                   order by case when cp.pet_name in ('',' Years Old','Years Old','0Atis','0Liver','0Lly','0Pel','0Scar','0Z','1 Max. 2 Pippa','1 Poppy 2 Dottie','1. Vasska 2. Sherman','10 Years','12 Cats', --manually suppress bad names as per email from CR\n                                                                      '14 Others','15 Boy','1Sheba','2 Cats  Barry','2 Cats  Demi','2 Catsbrahma','2 Dogs','2 Dogs  Coco','2 Dogs Coco','2 Honey','2 Kerry','2 S','2 Siamese Cats Jasmin',\n                                                                      '2 X Dogs Star','3 Cats','3 Cats Eve','3 Cats Oldest Garfield','3 Jack','3 Moggie','3 Others','3 S','34C25','3D','3Hree','4 Cats','4 Cats Bingo','5 Cats','5 Kittens',\n                                                                      '6 Cats  Lucy','7Even','8 Cats Owned','9Yrs','''Bea', 'Bertha Simmering Light','Cant Name Them Yet','Cat 1','Cat 2','Cat 3','Cat 4','Cat A','Cat Name','Cat1',\n                                                                      'Cat1 Tom','Cat12','Cat13','Cat1Bentley','Cat2','Cat3','''Cea','''Cooper'' Magic Pulse','Do Not Have One','Dog 1','Dog 2','Dog 3','Dog 4','Dog 5','Dog1','Dog11','Dog2','Dog3',\n                                                                      'Dont Have Any','Dont Have Names Yet','Dont Have One','Don''t Know','Dont Know Yet','Don''t Know Yet','''Dre','Dunno','Dunno Yet','Éva','Gaylord','Have 5 Cats','Have 6 Cats',\n                                                                      'Have Not Named Them','Havent Chosen Yet','Havent Named Them','Havent Named Yet','I Have 11','I Have 2 Maisie','I Have 2 Micky','I Have 3 Cats','I Have 3 Twinkle',\n                                                                      'I Have 4 Cats','I Have 5','I Have 5 Cats','I Have 5 Cat''s','I Have Lots','I Have Six Molly','I Havent Got One','Ive Got 24 Cats','I''ve Got 4 Cats','Ive Got 6 Mia',\n                                                                      'Just Born','Just Born2','''Kc''','No Cat','No Idea','No Kittens','No More','No.1','No.2','No1 No2 No3 No','Not Given Yet','Not Got Adult',\n                                                                      'Not Keeping','Not Named','Not Named As Yet','Not Named Her Yet','Not Picked On Yet','Not Sure','Not Sure New Kitten','Not Sure Yet','Not Yet','Not Yet Chose One',\n                                                                      'Not Yey Named','Nothing Yet','''Olly','Only 1 Dog','Out Door Cat','Pup1','Pup2','Pup3','Puppies 10','Puppies X 10','Puppy 1','Puppy 2','Puppy 3','Puss 1','Puss 2',\n                                                                      'Still Thinking Of Name','Still To Name Them','\uD83C\uDF40 Clover',\n                                                                      '..Non Existent..','2 Being Sold','3 More','4 Babies','A Donthave A Cat','Zz','Zzz','Www','Ww') then 9 \n                                                  when cp.pet_name ilike any ('%cats%','%kitten%','%litter%','%months%','%weeks%','%years%','%mth%','%wks%','%yrs%','%total%','%aaa%','%xxx%','%vvv%','%yet to%','%dogs%','%puppies%') then 9\n                                                                      else 1 end,\n                                                    case \n                                                        when (pet_life_stage in ('Kitten','Puppy') or pet_dob > add_months(current_date, -12)) then 1\n                                                            else 2 end,\n                                            pet_dob, pet_data_date desc) as pet_order,\n         case when cid.have_cat in ('Y','IN','IO') and cid.have_dog in ('Y','IN','IO') then 'Both'\n              when cid.have_cat in ('Y','IN','IO') then 'Cat'\n              when cid.have_dog in ('Y','IN','IO') then 'Dog'\n              when cid.have_cat = 'N' and cid.have_dog = 'N' then 'Unknown'\n           end as pet_seg\n            from ${Database}.live.cid cid \n            join ${Database}.live.cid_brand cb on cb.cid = cid.cid\n            join ${Database}.live.ref_brand rb on cb.brand_id = rb.brand_id\n            join ${Database}.live.cid_pet cp on cp.cid = cb.cid\n            where \n                cb.business_unit_id = 5 \n                and rb.brand ilike '%Purina Masterbrand%'\n                and cb.emailable = 1 \n                and cb.brand_campaignable=1\n             )\n  )\n;\n\ndrop table if exists ${Database}.temp.NPP08649_xmas_welcome cascade;\ncreate table ${Database}.temp.NPP08649_xmas_welcome\nas\nselect b.uniqueid as npp_ecrm_uniqueid,\n       b.name_urn,\n\t   b.forename,\n       email_brand as email,\n\t   b.brand_preference,\n\t   b.brand_engagement,\n\t   b.brand_id,\n\t   b.npp_ecrm_xmas_welcome,\n       b.npp_ecrm_pdc ,\n       b.npp_ecrm_subject_line, \n       b.npp_ecrm_preheader,\n  \t   b.npp_ecrm_salutation,\n  \t   b.npp_ecrm_hero_pet_name,\n       b.npp_ecrm_hero_pet_name_1,\n    npp_ecrm_xmas_date,\n    npp_ecrm_pdc_xmas,\n    npp_ecrm_hero_pdc_percent,\n    nvl(pet_seg, 'Unknown') as NPP_ECRM_PET_SEGMENT,\n    case when npp_ecrm_xmas_welcome = 'kc' then '1'\n         when npp_ecrm_xmas_welcome = 'gp' then '2'\n         else '3' end as pack_id,\n\t'NPP08649|NPP08649_'||npp_ecrm_xmas_date||'|1|'||case when npp_ecrm_xmas_welcome = 'kc' then '1'\n                                 when npp_ecrm_xmas_welcome = 'gp' then '2'\n                                    else '3' end as kog_pack\nfrom (\n       select * from \n        ( \n\t\tselect sha2(cid.bbw_urn,256) as uniqueid,\n            cd.cid,\n\t\t\tcd.name_urn,\n\t\t\tcid.bbw_urn,\n\t\t\tcd.forename,\n\t\t\tcb.brand_preference,\n\t\t\tcb.brand_engagement,\n\t\t\tcb.email_brand,\n\t\t\tcb.emailable,\n\t\t\tcb.brand_id,\n            pet_seg,\n            case when npp_ecrm_xmas_welcome is null then 'bt' else npp_ecrm_xmas_welcome end as npp_ecrm_xmas_welcome,\n            case when dbn.data_date between '2021-11-18' and '2021-11-30' then 'PRE'\n                 when dbn.data_date between '2021-12-01' and '2021-12-07' then '1'\n                 when dbn.data_date between '2021-12-08' and '2021-12-14' then '2'\n                 when dbn.data_date between '2021-12-15' and '2021-12-21' then '3'\n               end as npp_ecrm_xmas_date,\n            case when npp_ecrm_pdc =  1 then 'Y' else '' end as npp_ecrm_pdc ,\n             case when  nvl(pet_1_name,'') = '' then 'All aboard Purina’s Christmas Countdown! \uD83C\uDF85'\n                 when pet_3_name > '' then 'All aboard Purina’s Christmas Countdown! \uD83C\uDF85'\n                 when pet_2_name > '' then 'All aboard Purina''s Christmas Countdown, '||pet_1_name||' and '||pet_2_name||'! \uD83C\uDF85'\n                 when pet_1_name > '' then 'All aboard Purina’s Christmas Countdown, '||pet_1_name||'! \uD83C\uDF85'\n                    else 'All aboard Purina’s Christmas Countdown! \uD83C\uDF85' end as npp_ecrm_subject_line, \n             case when forename > '' and NPP_ECRM_XMAS_WELCOME = 'bt' then 'Welcome to Better Together, '||forename||'! \uD83D\uDC3E'\n                  when forename > '' and NPP_ECRM_XMAS_WELCOME = 'kc' then 'Welcome to The Kitten Code, '||forename||'! \uD83D\uDC3E'\n                  when forename > '' and NPP_ECRM_XMAS_WELCOME = 'gp' then 'Welcome to Growing Pup, '||forename||'! \uD83D\uDC3E'\n                  when NPP_ECRM_XMAS_WELCOME = 'bt' then 'Welcome to Better Together! \uD83D\uDC3E'\n                  when NPP_ECRM_XMAS_WELCOME = 'kc' then 'Welcome to The Kitten Code! \uD83D\uDC3E'\n                  when NPP_ECRM_XMAS_WELCOME = 'gp' then 'Welcome to Growing Pup! \uD83D\uDC3E'\n                   else 'Welcome to Better Together! \uD83D\uDC3E' end as npp_ecrm_preheader,\n  \t        case   when forename = '' then 'Hi Pet Lover'\n                   when forename > '' and nvl(pet_1_name,'') = '' then 'Hi '||forename\n                   when forename > '' and pet_3_name > '' then 'Hi '||forename||' and furry friends'\n                   when forename > '' and pet_2_name > '' then 'Hi '||forename||', '||pet_1_name||' and '||pet_2_name\n                   when forename > '' and pet_1_name > '' then 'Hi '||forename||' and '||pet_1_name\n                    else 'Hi Pet Lover' end as npp_ecrm_salutation,\n  \t        case when nvl(pet_1_name,'') = '' then 'you and your pet'\n                 when pet_3_name > '' then 'you and your pet'\n                 when pet_2_name > '' then 'you, '||pet_1_name||' and '||pet_2_name\n                 when pet_1_name > '' then 'you and '||pet_1_name\n                    else 'you and your pet' end as npp_ecrm_hero_pet_name,\n            case when NPP_ECRM_XMAS_WELCOME = 'kc' and (kit_1_name = '' or kit_1_name is null) then 'your kitten''s'\n                when NPP_ECRM_XMAS_WELCOME = 'kc' and kit_3_name > '' and kit_1_dob = kit_2_dob and kit_1_dob = kit_3_dob then 'your kitten''s'\n                when NPP_ECRM_XMAS_WELCOME = 'kc' and kit_2_name > '' and kit_1_dob = kit_2_dob then kit_1_name||' and '||kit_2_name||case when right(kit_2_name,1) = 's' then '''' else '''s' end\n                when NPP_ECRM_XMAS_WELCOME = 'kc' and kit_1_name > '' then kit_1_name||case when right(kit_1_name,1) = 's' then '''' else '''s' end          \n                when NPP_ECRM_XMAS_WELCOME = 'gp' and (pup_1_name = '' or pup_1_name is null) then 'your puppys''s'\n                when NPP_ECRM_XMAS_WELCOME = 'gp' and pet_3_name > '' and pup_1_dob = pup_2_dob and pup_1_dob = pup_3_dob then 'your puppys''s'\n                when NPP_ECRM_XMAS_WELCOME = 'gp' and pup_2_name > '' and pup_1_dob = pup_2_dob then pup_1_name||' and '||pup_2_name||case when right(pup_2_name,1) = 's' then '''' else '''s' end\n                when NPP_ECRM_XMAS_WELCOME = 'gp' and pup_1_name > '' then pup_1_name||case when right(pup_1_name,1) = 's' then '''' else '''s' end             \n                when NPP_ECRM_XMAS_WELCOME = 'bt' then ''\n                    else '' end as npp_ecrm_hero_pet_name_1,\n            pet_incomplete as npp_ecrm_pdc_xmas, --named\n            case when type_incomplete = 'Cat' and (missing_dob+missing_breed+missing_colour+missing_indoor_outdoor+missing_gender) = 5 then '15%' \n                 when type_incomplete = 'Cat' and (missing_dob+missing_breed+missing_colour+missing_indoor_outdoor+missing_gender) = 4 then '33%' \n                 when type_incomplete = 'Cat' and (missing_dob+missing_breed+missing_colour+missing_indoor_outdoor+missing_gender) = 3 then '50%' \n                 when type_incomplete = 'Cat' and (missing_dob+missing_breed+missing_colour+missing_indoor_outdoor+missing_gender) = 2 then '66%' \n                 when type_incomplete = 'Cat' and (missing_dob+missing_breed+missing_colour+missing_indoor_outdoor+missing_gender) = 1 then '85%' \n                 when type_incomplete = 'Dog' and (missing_dob+missing_breed+missing_colour+missing_gender) = 4 then '20%' \n                 when type_incomplete = 'Dog' and (missing_dob+missing_breed+missing_colour+missing_gender) = 3 then '40%' \n                 when type_incomplete = 'Dog' and (missing_dob+missing_breed+missing_colour+missing_gender) = 2 then '60%' \n                 when type_incomplete = 'Dog' and (missing_dob+missing_breed+missing_colour+missing_gender) = 1 then '80%'\n               else '' end as npp_ecrm_hero_pdc_percent,\n\t\t\trow_number() over(partition by cb.email_brand order by case when trim(cd.firstname) = '' then 1 else 0 end,dbn.data_date asc) as em_run\n\t\tfrom \t(select *,\n                 case \n\t\t\t\t    when length(firstname) = 1 then ''\n\t\t\t\t    when substring(firstname,2,1) = ' ' and length(firstname) < 4 then ''\n\t\t\t\t    else firstname\n\t\t\t    end as forename\n                 from ${Database}.live.cid_details)  \tcd\n\t\tjoin \t${Database}.live.cid \t\tcid on cid.cid = cd.cid \n\t\tjoin \t${Database}.live.cid_brand \tcb on cd.cid = cb.cid\n        left join ${Database}.temp.NPP08649_xmas_cid_petnames\tp on p.cid = cd.cid                                                   \n\t\t\n        join ${Database}.live.xref_name_urn xr on xr.cid = cd.cid\n        join  ${Database}.db.names dbn on dbn.name_urn = xr.name_urn\n\t\twhere \tcb.business_unit_id = 5\n             and cb.brand_id = (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'purina masterbrand')\n             and dbn.name_urn ilike '%better together christmas%' \n             and cb.emailable = 1\n             and brand_campaignable = 1             \n            \n  \t\t\tand current_date >= '2021-11-18'\n\t\t\tand current_date <= '2021-12-21'\n            and cd.cid not in  (\n                                select distinct cid\n                                from ${Database}.db.names ne\n                                join ${Database}.live.xref_name_urn xe on xe.name_urn = ne.name_urn\n                                 where ne.source = 'REG_EMMAS_DIARY' \n                               )\n           and cd.cid not in  (\n                               select distinct cid\n                               from ${Database}.db.names np\n                               join ${Database}.live.xref_name_urn xp on xp.name_urn = np.name_urn\n                                where np.source = 'NPP_PET_AVATAR_DAILY' \n                                )\n            and cd.cid not in (\n                               select distinct cid \n                               from ${Database}.live.xref_name_urn xr\n                               join ${Database}.db.comms_hist ch on ch.name_urn = xr.name_urn\n                               join ${Database}.db.comms_hist_lookup chl on chl.campaign_id = ch.campaign_id and ch.promotion_id = chl.promotion_id and ch.cell_id = chl.cell_id\n                                where chl.campaign_description ilike '%better together welcome%'\n                              )\n            and cd.cid not in (\n                               select distinct cid \n                               from ${Database}.live.xref_name_urn xr\n                               join ${Database}.db.comms_hist ch on ch.name_urn = xr.name_urn\n                               join ${Database}.db.comms_hist_lookup chl on chl.campaign_id = ch.campaign_id and ch.promotion_id = chl.promotion_id and ch.cell_id = chl.cell_id\n                                where chl.campaign_description ilike '%better together%'\n                                  and  chl.campaign_id <> 'NPP07746'    ---welcome\n                                  and drop_date >= add_months(current_date,-6)\n                              )\n        ) a\n      left join  ${Database}.temp.NPP_xmas_supps s    on a.cid = s.cid\n\t\t\t\t\t\t\t\tand s.cell_id = '1'\n      left join  ${Database}.temp.NPP_xmas_e_supps es on lower(a.email_brand) = lower(es.email)\n\t\t\t\t\t\t\t\tand es.cell_id = '1'    \n      where s.cid is null \n       and es.email is null\n       and em_run = 1 \n\t) b\n ;\n\n\n\n/******************************************************************************************\n   Create extract tables\n******************************************************************************************/\n\ndrop table ${Database}.jobs.NPP08649_xmas_welcome_pre;\ncreate table ${Database}.jobs.NPP08649_xmas_welcome_pre\nas\nselect name_urn,\n       npp_ecrm_uniqueid,\n\t   forename,\n       email,\n\t   npp_ecrm_subject_line,\n       npp_ecrm_preheader,\n  \t   npp_ecrm_salutation,\n       npp_ecrm_pdc_xmas,\n       npp_ecrm_hero_pet_name_1,\n  \t   npp_ecrm_hero_pet_name,\n       npp_ecrm_hero_pdc_percent,\n       npp_ecrm_xmas_welcome,\n       npp_ecrm_xmas_date,\n       npp_ecrm_pdc, \n       NPP_ECRM_PET_SEGMENT,\n       kog_pack\nfrom ${Database}.temp.NPP08649_xmas_welcome       \nwhere npp_ecrm_xmas_date = 'PRE'\n;\n\ndrop table ${Database}.jobs.NPP08649_xmas_welcome_w1;\ncreate table ${Database}.jobs.NPP08649_xmas_welcome_w1\nas\nselect name_urn,\n       npp_ecrm_uniqueid,\n\t   forename,\n       email,\n\t   npp_ecrm_subject_line,\n       npp_ecrm_preheader,\n  \t   npp_ecrm_salutation,\n       npp_ecrm_pdc_xmas,\n       npp_ecrm_hero_pet_name_1,\n  \t   npp_ecrm_hero_pet_name,\n       npp_ecrm_hero_pdc_percent,\n       npp_ecrm_xmas_welcome,\n       npp_ecrm_xmas_date,\n       npp_ecrm_pdc, \n       NPP_ECRM_PET_SEGMENT,\n       kog_pack\nfrom ${Database}.temp.NPP08649_xmas_welcome       \nwhere npp_ecrm_xmas_date = '1'\n;\n\ndrop table ${Database}.jobs.NPP08649_xmas_welcome_w2;\ncreate table ${Database}.jobs.NPP08649_xmas_welcome_w2\nas\nselect name_urn,\n       npp_ecrm_uniqueid,\n\t   forename,\n       email,\n\t   npp_ecrm_subject_line,\n       npp_ecrm_preheader,\n  \t   npp_ecrm_salutation,\n       npp_ecrm_pdc_xmas,\n       npp_ecrm_hero_pet_name_1,\n  \t   npp_ecrm_hero_pet_name,\n       npp_ecrm_hero_pdc_percent,\n       npp_ecrm_xmas_welcome,\n       npp_ecrm_xmas_date,\n       npp_ecrm_pdc, \n       NPP_ECRM_PET_SEGMENT,\n       kog_pack\nfrom ${Database}.temp.NPP08649_xmas_welcome       \nwhere npp_ecrm_xmas_date = '2'\n;\n\ndrop table ${Database}.jobs.NPP08649_xmas_welcome_w3;\ncreate table ${Database}.jobs.NPP08649_xmas_welcome_w3\nas\nselect name_urn,\n       npp_ecrm_uniqueid,\n\t   forename,\n       email,\n\t   npp_ecrm_subject_line,\n       npp_ecrm_preheader,\n  \t   npp_ecrm_salutation,\n       npp_ecrm_pdc_xmas,\n       npp_ecrm_hero_pet_name_1,\n  \t   npp_ecrm_hero_pet_name,\n       npp_ecrm_hero_pdc_percent,\n       npp_ecrm_xmas_welcome,\n       npp_ecrm_xmas_date,\n       npp_ecrm_pdc, \n       NPP_ECRM_PET_SEGMENT,\n       kog_pack\nfrom ${Database}.temp.NPP08649_xmas_welcome       \nwhere npp_ecrm_xmas_date = '3'\n;\n\ndrop table if exists ${Database}.temp.NPP_xmas_supps;\ndrop table if exists ${Database}.temp.NPP_xmas_e_supps;\ndrop table if exists ${Database}.temp.NPP08649_xmas_cid_petnames;\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP08649',\n    'NPP08649_'||npp_ecrm_xmas_date,\n    '1',\n    pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NPP08649_xmas_welcome\n;\n\n/******************************************************************************************\nPurina Re-engagement emails\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NPP09176' and promotion_id in ('NPP09176_1','NPP09176_2','NPP09176_3') and drop_date = current_date;\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ndrop table if exists ${Database}.temp.NPP09176_supps cascade;\ncreate table ${Database}.temp.NPP09176_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.promotion_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id in ('NPP09176_1','NPP09176_2','NPP09176_3');\n\ndrop table if exists ${Database}.temp.NPP09176_e_supps cascade;\ncreate table ${Database}.temp.NPP09176_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.promotion_id,\n    su.drop_date\nfrom ${Database}.temp.NPP09176_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n--pet names\ndrop table if exists ${Database}.temp.NPP09176_cid_petnames;\ncreate table ${Database}.temp.NPP09176_cid_petnames\nas\nselect distinct\n    cid,    \n    first_value(case when pet_order = 1 then pet_name end) over (partition by cid order by case when pet_order = 1 then 1 else 0 end desc) as pet_1_name,\n    first_value(case when pet_order = 2 then pet_name end) over (partition by cid order by case when pet_order = 2 then 1 else 0 end desc) as pet_2_name,\n    first_value(case when pet_order = 3 then pet_name end) over (partition by cid order by case when pet_order = 3 then 1 else 0 end desc) as pet_3_name\nfrom\n    (select distinct\n        cb.cid,\n        cp.pet_name,\n        cp.pet_type,\n        cp.pet_data_date,\n        row_number() over (partition by cb.cid order by pet_data_date desc, pet_name asc) as pet_order\n    from ${Database}.live.cid_brand cb\n    join ${Database}.live.ref_brand rb on cb.brand_id = rb.brand_id\n    join ${Database}.live.cid_pet cp on cp.cid = cb.cid\n    where \n        cb.business_unit_id = 5 \n        and rb.brand ilike '%Purina Masterbrand%'\n        and cb.emailable = 1\n    and case when cp.pet_name in (' Years Old','Years Old','0Atis','0Liver','0Lly','0Pel','0Scar','0Z','1 Max. 2 Pippa','1 Poppy 2 Dottie','1. Vasska 2. Sherman','10 Years','12 Cats', --manually suppress bad names as per email from CR\n                                  '14 Others','15 Boy','1Sheba','2 Cats  Barry','2 Cats  Demi','2 Catsbrahma','2 Dogs','2 Dogs  Coco','2 Dogs Coco','2 Honey','2 Kerry','2 S','2 Siamese Cats Jasmin',\n                                  '2 X Dogs Star','3 Cats','3 Cats Eve','3 Cats Oldest Garfield','3 Jack','3 Moggie','3 Others','3 S','34C25','3D','3Hree','4 Cats','4 Cats Bingo','5 Cats','5 Kittens',\n                                  '6 Cats  Lucy','7Even','8 Cats Owned','9Yrs','''Bea', 'Bertha Simmering Light','Cant Name Them Yet','Cat 1','Cat 2','Cat 3','Cat 4','Cat A','Cat Name','Cat1',\n                                  'Cat1 Tom','Cat12','Cat13','Cat1Bentley','Cat2','Cat3','''Cea','''Cooper'' Magic Pulse','Do Not Have One','Dog 1','Dog 2','Dog 3','Dog 4','Dog 5','Dog1','Dog11','Dog2','Dog3',\n                                  'Dont Have Any','Dont Have Names Yet','Dont Have One','Don''t Know','Dont Know Yet','Don''t Know Yet','''Dre','Dunno','Dunno Yet','Éva','Gaylord','Have 5 Cats','Have 6 Cats',\n                                  'Have Not Named Them','Havent Chosen Yet','Havent Named Them','Havent Named Yet','I Have 11','I Have 2 Maisie','I Have 2 Micky','I Have 3 Cats','I Have 3 Twinkle',\n                                  'I Have 4 Cats','I Have 5','I Have 5 Cats','I Have 5 Cat''s','I Have Lots','I Have Six Molly','I Havent Got One','Ive Got 24 Cats','I''ve Got 4 Cats','Ive Got 6 Mia',\n                                  'Just Born','Just Born2','''Kc''','No Cat','No Idea','No Kittens','No More','No.1','No.2','No1 No2 No3 No','Not Given Yet','Not Got Adult',\n                                  'Not Keeping','Not Named','Not Named As Yet','Not Named Her Yet','Not Picked On Yet','Not Sure','Not Sure New Kitten','Not Sure Yet','Not Yet','Not Yet Chose One',\n                                  'Not Yey Named','Nothing Yet','''Olly','Only 1 Dog','Out Door Cat','Pup1','Pup2','Pup3','Puppies 10','Puppies X 10','Puppy 1','Puppy 2','Puppy 3','Puss 1','Puss 2',\n                                  'Still Thinking Of Name','Still To Name Them','\uD83C\uDF40 Clover',\n                                  '..Non Existent..','2 Being Sold','3 More','4 Babies','A Donthave A Cat','Zz','Zzz','Www','Ww') then '' \n              when cp.pet_name ilike any ('%cats%','%kitten%','%litter%','%months%','%weeks%','%years%','%mth%','%wks%','%yrs%','%total%','%aaa%','%xxx%','%vvv%','%yet to%','%dogs%','%puppies%') then ''\n                                  else cp.pet_name end <> ''  \n     )\n;\n\n\ndrop table if exists ${Database}.temp.NPP09176_re_engagement cascade;\ncreate table ${Database}.temp.NPP09176_re_engagement\nas\nselect *\n,    'E543438A-77B8-14E6-8396-'||replace(to_char(bbw_urn,'XXXXXXXXXXXX'),' ','0') as uniqueid_guid\n,    case when forename = '' then 'Hi pet lover'\n         when forename > '' and pet_1_name is null then 'Hi '||forename\n         when pet_3_name is not null then 'Hi '||forename||' and furry friends'\n         when forename > '' and pet_2_name > '' then 'Hi '||forename||', '||pet_1_name||' and '||pet_2_name\n         when forename > '' and pet_1_name > '' then 'Hi '||forename||' and '||pet_1_name         \n             else ''\n        end as npp_ecrm_salutation \n,    case when (pet_3_name is not null or pet_1_name is null) and NPP_ECRM_PET_SEGMENT = 'cat' then 'your precious puss is'\n         when (pet_3_name is not null or pet_1_name is null)  and NPP_ECRM_PET_SEGMENT = 'dog' then 'your best friend is'\n         when  pet_3_name is not null or pet_1_name is null                      then 'your precious pet is'\n         when pet_2_name > ''                                                    then pet_1_name||' and '||pet_2_name||' are'\n         when pet_1_name > ''                                                    then pet_1_name||' is'         \n             else ''\n        end as npp_ecrm_hero_pet_name\n,  \tcase when (pet_3_name is not null or pet_1_name is null) and NPP_ECRM_PET_SEGMENT = 'cat' then 'your cat'\n         when (pet_3_name is not null or pet_1_name is null) and NPP_ECRM_PET_SEGMENT = 'dog' then 'your dog'\n         when  pet_3_name is not null or pet_1_name is null                      then 'your pet'\n         when pet_2_name > ''                                                    then pet_1_name||' and '||pet_2_name\n         when pet_1_name > ''                                                    then pet_1_name         \n             else ''\n        end as npp_ecrm_hero_pet_name_2\n,  \tcase when (pet_3_name is not null or pet_1_name is null) and NPP_ECRM_PET_SEGMENT = 'cat' then 'your cat''s long and happy life'\n         when (pet_3_name is not null or pet_1_name is null) and NPP_ECRM_PET_SEGMENT = 'dog' then 'your dog''s long and happy life'\n         when  pet_3_name is not null or pet_1_name is null                      then 'your pet''s long and happy life'\n         when pet_2_name > ''                                                    then pet_1_name||' and '||case when right(pet_2_name, 1) = 's' then  pet_2_name||''' long and happy life' else pet_2_name||'''s long and happy life' end\n         when pet_1_name > ''                                                    then case when right(pet_1_name, 1) = 's' then  pet_1_name||''' long and happy life' else pet_1_name||'''s long and happy life' end        \n             else ''\n        end as npp_ecrm_hero_pet_name_3\n,  \tcase when (pet_3_name is not null or pet_1_name is null) and NPP_ECRM_PET_SEGMENT = 'cat' then 'your fabulous feline looks'\n         when (pet_3_name is not null or pet_1_name is null) and NPP_ECRM_PET_SEGMENT = 'dog' then 'your perfect pooch looks'\n         when  pet_3_name is not null or pet_1_name is null                      then 'your furry friends look'\n         when pet_2_name > ''                                                    then pet_1_name||' and '||pet_2_name||' look'\n         when pet_1_name > ''                                                    then pet_1_name||' looks'         \n             else ''\n        end as npp_ecrm_hero_pet_name_4 \n,    case when forename > '' and (pet_1_name is null or pet_3_name is not null) then forename||', discover just how old your furry friends REALLY are'\n         when forename > '' and pet_2_name > '' then forename||', discover just how old '||pet_1_name||' and '||pet_2_name||' REALLY are'\n         when forename > '' and pet_1_name > '' then forename||', discover how old '||pet_1_name||' REALLY is'     \n         when forename = '' and (pet_1_name is null or pet_3_name is not null) then 'Discover just how old your furry friends REALLY are'\n         when forename = '' and pet_2_name > '' then 'Discover just how old '||pet_1_name||' and '||pet_2_name||' REALLY are'\n         when forename = '' and pet_1_name > '' then 'Discover how old '||pet_1_name||' REALLY is'     \n             else 'Discover just how old your furry friends REALLY are'\n        end as npp_ecrm_subject_line\n,  \tcase when  pet_3_name is not null or pet_1_name is null                      then ''\n         when pet_2_name > ''                                                    then pet_1_name||' and '||pet_2_name\n         when pet_1_name > ''                                                    then pet_1_name         \n             else ''\n        end as npp_ecrm_subject_line_2        \n,  \tcase when  pet_3_name is not null or pet_1_name is null                      then 'Create your very own avatars of your furry friends'\n         when pet_2_name > ''                                                    then 'Create your very own avatars of '||pet_1_name||' and '||pet_2_name\n         when pet_1_name > ''                                                    then 'Create your very own avatar of '||pet_1_name         \n             else 'Create your very own avatars of your furry friends'\n        end as npp_ecrm_subject_line_3\t\t\t\t\t\t\t\t\t  \n,       'NPP09176|'||current_email||'|'||cell_id||'|'||pack_id as kog_pack\nfrom (\n    select \n        sha2(bbw_urn,256) as hash_bbw_urn\n    ,   cast(bbw_urn as int) as bbw_urn\n    ,   name_urn\n    ,   forename\n    , \tsurname\t\n    ,   a.email\n    ,   pet_1_name\n    ,   pet_2_name\n    ,   pet_3_name\n    ,   lower(pet_seg) as NPP_ECRM_PET_SEGMENT\n    ,   LAPSE_RISK_SEGMENT\n    ,   current_email\n    ,   brand_id\n    ,   brand_preference\n    ,   brand_engagement\n    ,   case when pet_seg = 'cat' then '1'\n           when pet_seg = 'dog' then '2'\n           when pet_seg = 'both' then '3'\n           when pet_seg = 'unknown' then '4'\n        end as cell_id\n    ,   case when LAPSE_RISK_SEGMENT ilike '%very%' then '1'\n           else '2'\n        end as pack_id \n    ,       row_number() over(partition by a.cid order by case when trim(forename) = '' then 1 else 0 end, case when pet_1_name is not null then 0 else 1 end) as cd_run\n    from (            \n            select  \n                split_part(cb.cid_brand_urn,'-','0') as bbw_urn \n            ,   cd.cid\n            ,   cd.name_urn\n            ,   case when length(firstname) < 2 then ''\n                    when length(firstname) < 4 and substring(firstname,2,1) = ' ' then ''\n                    when length(firstname) > 20 then ''\n                    else firstname\n                end as forename\n\t\t\t, \tlastname as surname\t\n            ,   cb.brand_preference\n            ,   cb.brand_engagement\n            ,   cb.email_brand as email\n            ,   cb.brand_id\n            ,   case when c.have_cat in ('Y','IN','IO') and c.have_dog in ('Y','IN','IO') then 'both'\n                    when c.have_cat in ('Y','IN','IO') then 'cat'\n                    when c.have_dog in ('Y','IN','IO') then 'dog'\n                    when c.have_cat = 'N' and c.have_dog = 'N' then 'unknown'\n                    end as pet_seg\n            ,    pn.pet_1_name\n            ,    pn.pet_2_name\n            ,    pn.pet_3_name\t    \n            ,    case when purina_lapse_risk_segment = 'Very High Risk' then 'very high'\n                      when purina_lapse_risk_segment = 'High Risk' then 'high' \n                 end as lapse_risk_segment \n            ,    case when em.cid is null then 'NPP09176_1'\n                      when em.promotion_id = 'NPP09176_1' and em.drop_date <= current_date-28 and em.drop_date >= current_date-33 then 'NPP09176_2'\n                      when em.promotion_id = 'NPP09176_2' and em.drop_date <= current_date-28 and em.drop_date >= current_date-33 then 'NPP09176_3'\n                 end as current_email\n            ,    row_number() over(partition by cb.email_brand order by case when trim(firstname) = '' then 1 else 0 end, case when pet_1_name is not null then 0 else 1 end, cb.first_date_brand desc nulls last) as em_run        \n            from      ${Database}.live.cid_details cd\n            join      ${Database}.live.cid         c   on cd.cid = c.cid\n            join      ${Database}.live.cid_brand   cb  on cd.cid = cb.cid and cb.brand_campaignable = 1\n            join      ${Database}.live.ref_brand   rb  on rb.brand_id = cb.brand_id\n            left join ${Database}.temp.NPP09176_cid_petnames pn  on pn.cid = cd.cid\n            left join (select cid, \n                              promotion_id, \n                              drop_date\n                       from ${Database}.db.comms_hist ch\n                       join ${Database}.live.xref_name_urn x on x.name_urn = ch.name_urn\n                       where campaign_id = 'NPP09176'\n                      ) em on em.cid = cd.cid\n            where     cb.business_unit_id = 5 -- purina\n            and       rb.brand ilike '%Purina Masterbrand%'\n            and       cb.emailable = 1\n            and         c.purina_lapse_risk_segment in ('Very High Risk','High Risk')                            \n            and       cb.cid not in (\n                                select distinct cid\n                                from ${Database}.live.cid_pet cp\n                                where cp.pet_life_stage='Kitten'\n                                and cid in (select cid from ${Database}.live.cid_pet where pet_life_stage='Kitten' group by 1 having count(distinct pet_name)=1)   \n                                and cid not in (select distinct cid from ${Database}.live.cid_pet cp1 where cp1.pet_life_stage not in ('Kitten') or (cp1.pet_life_stage='Unknown' and cp1.pet_dob<=add_months(current_date,-12)))\n                                ) --one kitten only!\n            and       cb.cid not in (\n                                select distinct cid\n                                from ${Database}.live.cid_pet cp\n                                where cp.pet_life_stage='Puppy'\n                                and cid in (select cid from ${Database}.live.cid_pet where pet_life_stage='Puppy' group by 1 having count(distinct pet_name)=1)   \n                                and cid not in (select distinct cid from ${Database}.live.cid_pet cp1 where cp1.pet_life_stage not in ('Puppy') or (cp1.pet_life_stage='Unknown' and cp1.pet_dob<=add_months(current_date,-12)))\n                                ) --one Puppy only!\n            and cd.cid not in (\n                               select distinct cid \n                               from ${Database}.live.xref_name_urn xr\n                               join ${Database}.db.comms_hist ch on ch.name_urn = xr.name_urn\n                               join ${Database}.db.comms_hist_lookup chl on chl.campaign_id = ch.campaign_id and ch.promotion_id = chl.promotion_id and ch.cell_id = chl.cell_id\n                                where chl.campaign_description ilike '%better together%'\n                                  and drop_date >= current_date-2\n                              )\n            and cd.cid not in (select cid from ${Database}.live.adestra_events where adestra_campaign_id in ('26975','26302'))\n            and (dob > add_months(current_date(), -216) or dob is null)        \n                    ) a\n            left join  ${Database}.temp.NPP09176_supps s    on a.cid = s.cid\n            \t\t\t\t\t\tand s.promotion_id = a.current_email\n            left join  ${Database}.temp.NPP09176_e_supps es on lower(a.email) = lower(es.email)\n            \t\t\t\t\t\tand es.promotion_id = a.current_email\n            where s.cid is null \n             and es.email is null\n             and em_run = 1\n             ) b\n             where cd_run = 1\n ;\n\n/******************************************************************************************\n   Create extract tables\n******************************************************************************************/\n\ndrop table if exists ${Database}.jobs.NPP09176_1_re_engagement_pet_age;\ncreate table ${Database}.jobs.NPP09176_1_re_engagement_pet_age\nas\nselect   \n     uniqueid_guid as uniqueid\n,    NAME_URN\n,    FORENAME\n,    EMAIL\n,    NPP_ECRM_SALUTATION\n,    NPP_ECRM_PET_SEGMENT\n,    NPP_ECRM_HERO_PET_NAME\n,    NPP_ECRM_HERO_PET_NAME_2 \n,    NPP_ECRM_HERO_PET_NAME_3 \n,    NPP_ECRM_HERO_PET_NAME_4\n,    npp_ecrm_subject_line\n,    npp_ecrm_subject_line_2\n,    npp_ecrm_subject_line_3\t\t\t\t\t\t\t\n,    LAPSE_RISK_SEGMENT\n,    KOG_PACK \nfrom ${Database}.temp.NPP09176_re_engagement\nwhere current_email = 'NPP09176_1'\n;\n\ndrop table if exists ${Database}.jobs.NPP09176_2_re_engagement_pet_calc;\ncreate table ${Database}.jobs.NPP09176_2_re_engagement_pet_calc\nas\nselect   \n     uniqueid_guid as uniqueid\n,    NAME_URN\n,    FORENAME\n,    EMAIL\n,    NPP_ECRM_SALUTATION\n,    NPP_ECRM_PET_SEGMENT\n,    NPP_ECRM_HERO_PET_NAME\n,    NPP_ECRM_HERO_PET_NAME_2 \n,    NPP_ECRM_HERO_PET_NAME_3 \n,    NPP_ECRM_HERO_PET_NAME_4\n,    npp_ecrm_subject_line\n,    npp_ecrm_subject_line_2\n,    npp_ecrm_subject_line_3\t\t\t\t\t\t\t\n,    LAPSE_RISK_SEGMENT\n,    KOG_PACK \nfrom ${Database}.temp.NPP09176_re_engagement\nwhere current_email = 'NPP09176_2'\n;\n\ndrop table if exists ${Database}.jobs.NPP09176_3_re_engagement_pet_avatar;\ncreate table ${Database}.jobs.NPP09176_3_re_engagement_pet_avatar\nas\nselect   \n     uniqueid_guid as uniqueid\n,    NAME_URN\n,    FORENAME\n,    EMAIL\n,    NPP_ECRM_SALUTATION\n,    NPP_ECRM_PET_SEGMENT\n,    NPP_ECRM_HERO_PET_NAME\n,    NPP_ECRM_HERO_PET_NAME_2 \n,    NPP_ECRM_HERO_PET_NAME_3 \n,    NPP_ECRM_HERO_PET_NAME_4\n,    npp_ecrm_subject_line\n,    npp_ecrm_subject_line_2\n,    npp_ecrm_subject_line_3\t\t\t\t\t\t\t\n,    LAPSE_RISK_SEGMENT\n,    KOG_PACK \nfrom ${Database}.temp.NPP09176_re_engagement\nwhere current_email = 'NPP09176_3'\n;\n\ndrop table if exists ${Database}.jobs.NPP09176_pet_avatar_guids;\ncreate table ${Database}.jobs.NPP09176_pet_avatar_guids\nas\nselect   \n    NAME_URN\n,    FORENAME\n,    SURNAME\n,    EMAIL\n,    uniqueid_guid as LINKID\nfrom ${Database}.temp.NPP09176_re_engagement\nwhere current_email = 'NPP09176_3'\n;\n\n--extra merge to SF db table?\nmerge into ${Database}.db.npp_pet_avatar_existing_consumers   a\nusing (\n       select LINKID as uniqueid,\n              email,\n              forename as firstname,\n              surname as lastname\n       from  ${Database}.jobs.NPP09176_pet_avatar_guids\n      ) b on a.USER_GUID = b.uniqueid\nwhen matched then update \nset       a.firstname = b.firstname,\n\t\t  a.lastname = b.lastname,\n\t\t  a.email = b.email\nwhen not matched then insert\n(\n    USER_GUID,\n    EMAIL,\n    FIRSTNAME,\n    LASTNAME\n)\nvalues\n(\n    b.uniqueid,\n    b.email,\n    b.firstname,\n    b.lastname\n)\n;\n\ndrop table if exists ${Database}.temp.NPP09176_supps;\ndrop table if exists ${Database}.temp.NPP09176_e_supps;\ndrop table if exists ${Database}.temp.NPP09176_cid_petnames;\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP09176',\n    current_email,\n    cell_id,\n    pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NPP09176_re_engagement\nwhere current_email is not null;\n\n/******************************************************************************************\n   NUK Cereals welcome\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NUK07197' and cell_id = '1' and drop_date = current_date();\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_cereals_welcome_supps\nas\nselect distinct\n    xr.cid,\n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id ='NUK07197';\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_cereals_welcome_e_supps\nas\nselect distinct\n    xr.email,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.nuk_cereals_welcome_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n-- Welcome Email\n-- Audience: registered to nestle cereals. Eligible if:\n--                      -came in via Qualifio Feed\n--                     -is opted in\n\n-- Timings: 1 day after sign-up\n\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.NUK07197_Cereals_Welcome\nas\nselect\n    name_urn,\n    email,\n    forename,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    cell_id,\n    pack_id,\n    kog_pack\nfrom (\n         select\n             nm.name_urn,\n             nm.email,\n             case\n                 when nm.firstname is null then ''\n                 when length(nm.firstname) <= 1 then ''\n                 when substring(nm.firstname,2,1) = ' ' and length(nm.firstname) < 4 then ''\n                 else nm.firstname\n             end as forename,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             '1' as cell_id,\n             '1' as pack_id,\n             'E|NUK07197|NUK07197|1|1' as KOG_PACK,\n             row_number() over(partition by nm.email order by case when trim(nm.firstname) = '' then 1 else 0 end, cb.first_date_brand nulls last) as em_run\n         from ${Database}.live.names nm\n         inner join ${Database}.live.cid_brand cb on nm.cid = cb.cid\n         left join  ${Database}.temp.nuk_cereals_welcome_supps s    on nm.cid = s.cid\n         left join  ${Database}.temp.nuk_cereals_welcome_e_supps es on lower(cb.email_brand) = lower(es.email)\n         left join\n                  (\n                    select distinct x.name_urn\n                    from ${Database}.live.xref_name_urn x\n                    inner join ${Database}.live.adestra_events ae on x.cid = ae.cid\n                    where ae.adestra_campaign_name in ('nuk07189_cereals_may_2020_A','nuk07189_cereals_may_2020_B','nuk07189_cereals_may_2020_C','nuk07190_cereals_june_2020_A','nuk07190_cereals_june_2020_B')\n                    and ae.event_name = 'sent_campaign'\n                    and x.name_urn not in (select name_urn\n                                           from ${Database}.db.adestra_events\n                                           where campaign_name in ('nuk07189_cereals_may_2020_A','nuk07189_cereals_may_2020_B','nuk07189_cereals_may_2020_C','nuk07190_cereals_june_2020_A','nuk07190_cereals_june_2020_B')\n                                           and event_name in ('inbound_flame','known_bounce','suppressed_global')\n                                           )\n                    ) nl on nm.name_urn = nl.name_urn\n         where cb.brand_id in (select brand_id from ${Database}.live.ref_business_unit_brand where lower(business_unit) regexp '.*cereal.*')\n             and (lower(nm.name_urn) regexp '.*reg_cereal_bpa.*' or lower(nm.name_urn) regexp '.*reg_cereal_cheerios_bees.*' or lower(nm.name_urn) regexp '.*reg_cereal_jurassic_world.*' )\n             and nm.source_date <= current_date\n             and nm.source_date >= current_date-7\n             and cb.emailable = 1\n             and (cb.brand_preference = 1 or (cb.brand_engagement = 1 and cb.brand_preference <> 0))\n             and s.cid is null\n             and es.email is null\n             and nl.name_urn is null\n     ) em\nwhere em.em_run = 1;\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NUK07197',\n    'NUK07197',\n     cell_id,\n     pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NUK07197_Cereals_Welcome\n;\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.nuk07197_cereals_welcome as select name_urn, forename, email, kog_pack from ${Database}.temp.NUK07197_Cereals_Welcome;\n\n\n/******************************************************************************************\n   CEREALS INTERESTS\n******************************************************************************************/\n\nCREATE OR REPLACE TABLE ${Database}.temp.NUK07032_Cereals_int\nas\nselect\n    distinct\n    q2.name_urn,\n    q2.email,\n    q2.AMF_ID,\n    q2.campaign_id,\n    q2.campaign_name,\n    q2.event_name,\n    q2.timestamp_,\n    q2.kog_pack,\n    q2.form_builder_id,\n    q2.form_builder_name,\n    first_value(brand_shreddies) over(partition by email order by brand_shreddies nulls last) as brand_shreddies,\n    first_value(brand_cheerios) over(partition by email order by brand_cheerios nulls last) as brand_cheerios,\n    first_value(brand_shreddedwheat) over(partition by email order by brand_shreddedwheat nulls last) as brand_shreddedwheat,\n    first_value(brand_gofree) over(partition by email order by brand_gofree nulls last) as brand_gofree,\n    first_value(brand_goodbelly) over(partition by email order by brand_goodbelly nulls last) as brand_goodbelly,\n    first_value(brand_curiously) over(partition by email order by brand_curiously nulls last) as brand_curiously,\n    first_value(brand_nesquik) over(partition by email order by brand_nesquik nulls last) as brand_nesquik\nfrom (\n        select distinct\n        q.name_urn,\n        q.email,\n        q.AMF_ID,\n        q.campaign_id,\n        q.campaign_name,\n        q.event_name,\n        q.timestamp_,\n        q.kog_pack,\n        q.form_builder_id,\n        q.form_builder_name,\n        case when question = 'Are you interested in the brand shreddies?' and answer is not null then lower(answer)\n            when lower(answer) regexp '.*shreddies.*' and answer is not null then  'y'             end as brand_shreddies,\n        case when question = 'Are you interested in the brand cheerios?' and answer is not null then  lower(answer)\n              when lower(answer) regexp '.*cheerios.*' and answer is not null then  'y'         end as brand_cheerios,\n        case when question = 'Are you interested in the brand shreddedwheat?' and answer is not null then  lower(answer)\n              when lower(answer) regexp '.*shredded wheat.*'    and answer is not null then  'y'         end as brand_shreddedwheat,\n        case when question = 'Are you interested in the brand gofree?' and answer is not null then  lower(answer)\n              when lower(answer) regexp '.*go free.*' and answer is not null then  'y'        end as brand_gofree,\n        case when question = 'Are you interested in the brand goodbelly?' and answer is not null then  lower(answer)\n              when lower(answer) regexp '.*goodbelly.*' and answer is not null then  'y'        end as brand_goodbelly,\n        case when question = 'Are you interested in the brand curiously?' and answer is not null then  lower(answer)\n              when lower(answer) regexp '.*curiously.*' and answer is not null then  'y'        end as brand_curiously,\n        case when question = 'Are you interested in the brand nesquik?' and answer is not null then  lower(answer)\n              when lower(answer) regexp '.*nesquik.*' and answer is not null then  'y'        end as brand_nesquik\n    from(\n            select distinct\n                nm.cid,\n                nm.name_urn,\n                nm.email,\n                rqu.question,\n            coalesce(AMF_ID,'') as AMF_ID,\n            coalesce(campaign_id,'') as campaign_id,\n            coalesce(campaign_name,'') as campaign_name,\n            coalesce(event_name,'') as event_name,\n            coalesce(timestamp_,cast (null as timestamp)) as timestamp_,\n            coalesce(kog_pack,'') as kog_pack,\n            coalesce(form_builder_id,'') as form_builder_id,\n            coalesce(form_builder_name,'') as form_builder_name,\n                first_value(lower(qu.answer)) over\n                    (\n                        partition by nm.cid, qu.question_id\n                        order by\n                            qu.data_date desc nulls last,\n                            qu.source_date desc nulls last\n                    ) as answer,\n                first_value(qu.data_date) over\n                    (\n                        partition by nm.cid, qu.question_id\n                        order by\n                            qu.data_date desc nulls last,\n                            qu.source_date desc nulls last\n                    ) as answer_data_date,\n            row_number() over(\n                                partition by nm.email, qu.question_id\n                                order by\n                                    qu.data_date desc nulls last,\n                                    qu.source_date desc nulls last,\n                                    case when ade.email is not null then 1 else 0 end  desc\n                              ) as rn2\n\n            from ${Database}.live.names nm\n            inner join ${Database}.db.question qu on nm.name_urn = qu.name_urn\n            inner join ${Database}.db.ref_question rqu on qu.question_id = rqu.question_id\n            left join (\n                        select\n                            urn as name_urn,\n                            email,\n                            AMF_ID,\n                            campaign_id,\n                            campaign_name,\n                            event_name,\n                            timestamp_,\n                            kog_pack,\n                            form_builder_id,\n                            form_builder_name\n                            --row_number() over(partition by aci.email order by timestamp_ desc) as rn1\n                       from ${Database}.db.nuk_ade_cereals_interests aci\n                        where event_name = 'form_builder_submit'\n                       )ade on ade.name_urn = nm.name_urn and ade.email = nm.email\n                where rqu.question in(\n                                    'Are you interested in the brand shreddies?',\n                                    'Are you interested in the brand cheerios?',\n                                    'Are you interested in the brand shreddedwheat?',\n                                    'Are you interested in the brand gofree?',\n                                    'Are you interested in the brand goodbelly?',\n                                    'Are you interested in the brand curiously?',\n                                    'Are you interested in the brand nesquik?',\n                                    'Preferred Cereal Brand'\n                                   )\n             )q where q.rn2 = 1\n     )q2\n;\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.NUK07032_Cereals_interences as select name_urn, email, AMF_ID, campaign_id, campaign_name, event_name, timestamp_, kog_pack, form_builder_id, form_builder_name, brand_shreddedwheat, brand_gofree,brand_goodbelly, brand_curiously, brand_nesquik from ${Database}.temp.NUK07032_Cereals_int;\n\n\n/******************************************************************************************\n   NUK Cereals re-engagement\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NUK07198' and drop_date = current_date();\n\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_cereals_re_engagement_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id ='NUK07198';\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_cereals_re_engagement_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.nuk_cereals_re_engagement_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\nCREATE OR REPLACE TABLE ${Database}.temp.NUK07198_cereals_re_engagement\nas\n\nselect\n    name_urn,\n    main.email,\n    forename,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n             email_version as cell_id,\n             '1' as pack_id,\n             email_version as batch,\n             'E|NUK07198|NUK07198|'||email_version||'|1' as KOG_PACK\nfrom (\n         select\n             cd.cid,\n             cd.name_urn,\n             cb.email_brand as email,\n             case\n                 when cd.firstname is null then ''\n                 when length(cd.firstname) <= 1 then ''\n                 when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                 else cd.firstname\n             end as forename,\n             first_date_business_unit,\n             cl.last_email_click_date,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             case when first_date_business_unit <= add_months(current_date,-12) and first_date_business_unit > add_months(current_date,-14)\n                     and last_email_sent_date >= add_months(current_date,-12)\n                     and (cl.last_email_click_date < add_months(current_date,-12) or cl.last_email_click_date is null) then '1'\n                 when first_date_business_unit <= add_months(current_date,-14) and first_date_business_unit > add_months(current_date,-16)\n                     and em.last_email_sent_date >= add_months(current_date,-14)\n                     and (cl.last_email_click_date < add_months(current_date,-14) or cl.last_email_click_date is null) then '2'\n                 when first_date_business_unit <= add_months(current_date,-16)\n                     and first_date_business_unit > add_months(current_date,-16)-4\n                     and em.last_email_sent_date >= add_months(current_date,-16)\n                     and (cl.last_email_click_date < add_months(current_date,-16) or cl.last_email_click_date is null) then '3'\n              end as email_version,\n             row_number() over(partition by cb.email_brand order by case when trim(cd.firstname) = '' then 1 else 0 end, cb.first_date_brand nulls last) as em_run\n         from ${Database}.live.cid_details cd\n         inner join ${Database}.live.cid_brand cb on cd.cid = cb.cid\n         inner join ${Database}.live.cid_business_unit cbu on cd.cid = cbu.cid\n         left join\n                  (\n                    select xr.cid,\n                           max(drop_date) as last_email_sent_date\n                    from ${Database}.db.comms_hist_lookup chl\n                    join ${Database}.db.comms_hist ch on ch.campaign_id = chl.campaign_id\n                                                    and ch.promotion_id = chl.promotion_id\n                                                    and ch.cell_id = chl.cell_id\n                                                    and ch.pack_id = chl.pack_id\n                    join ${Database}.live.xref_name_urn xr on xr.name_urn = ch.name_urn\n                    where data_controller_id = 7\n                    --where data_controller_id = 7 and (brand_id is null or brand_id <> 141)\n                    and ch.programme_id = 'E'\n                    group by 1\n                    ) em on cd.cid = em.cid\n         left join (\n                       select\n                           cid,\n                           max(cast(event_timestamp as date)) as last_email_click_date\n                       from ${Database}.live.adestra_events\n                       where lower(event_name) regexp '.*click.*'\n                           and campaign_id in (\n                                                  select distinct\n                                                      campaign_id\n                                                  from ${Database}.db.comms_hist_lookup\n                                                  where data_controller_id = 7\n                                                      and programme_id = 'E'\n                                              )\n                       group by 1\n                   ) cl on cl.cid = cd.cid\n         where cb.brand_id in (select brand_id from ${Database}.live.ref_business_unit_brand where lower(business_unit) regexp '.*cereal.*')\n             --and cb.brand_id not in (select brand_id from ${Database}.live.ref_brand where lower(brand) regexp '.*goodbelly.*')  --not excluding goodbelly for now\n             and cbu.first_date_business_unit <= add_months(current_date,-12)\n             and cb.emailable = 1\n             and (cb.brand_preference = 1 or (cb.brand_engagement = 1 and cb.brand_preference <> 0))\n             and em.cid is not null\n     ) main\nleft join  ${Database}.temp.nuk_cereals_re_engagement_supps s    on main.cid = s.cid and s.cell_id = email_version --allow people to get more than one version of email\nleft join  ${Database}.temp.nuk_cereals_re_engagement_e_supps es on lower(main.email) = lower(es.email) and es.cell_id = email_version\nwhere main.em_run = 1\nand email_version is not null\n             and s.cid is null\n             and es.email is null;\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NUK07198',\n    'NUK07198',\n     cell_id,\n     pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NUK07198_cereals_re_engagement\nwhere batch in ('1','2','3')\n;\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.NUK07198_cereals_re_engagement_1 as select name_urn, forename, email, cell_id, batch, kog_pack from ${Database}.temp.NUK07198_cereals_re_engagement where batch = '1';\ncreate or replace table ${Database}.jobs.NUK07198_cereals_re_engagement_2 as select name_urn, forename, email, cell_id, batch, kog_pack from ${Database}.temp.NUK07198_cereals_re_engagement where batch = '2';\ncreate or replace table ${Database}.jobs.NUK07198_cereals_re_engagement_3 as select name_urn, forename, email, cell_id, batch, kog_pack from ${Database}.temp.NUK07198_cereals_re_engagement where batch = '3';\n\n\n/******************************************************************************************\n   NUK Nescafe CIAM welcome\n******************************************************************************************/\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\n\ndelete from ${Database}.db.comms_hist where campaign_id = 'NUK07206' and cell_id = '1' and drop_date = current_date();\n\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_nescafe_welcome_supps\nas\nselect distinct\n    xr.cid,\n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id ='NUK07206';\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_nescafe_welcome_e_supps\nas\nselect distinct\n    xr.email,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.nuk_nescafe_welcome_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.NUK07206_NESCAFE_welcome\nas\nselect\n       name_urn,\n       title,\n       forename,\n       lastname,\n       brand_preference,\n       brand_engagement,\n       email_brand as email,\n       emailable,\n       brand,\n       brand_id,\n       cell,\n       '1' as cell_id,\n       '1' as pack_id,\n       'E|NUK07206|NUK07206|1|1' as kog_pack\nfrom (\n        select cd.cid,\n               na.name_urn,\n               cd.title,\n               case\n                    when length(cd.firstname) = 1 then ''\n                    when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                    else cd.firstname\n               end as forename,\n               cd.lastname,\n               cb.brand_preference,\n               cb.brand_engagement,\n               cb.email_brand,\n               cb.emailable,\n               rb.brand,\n               rb.brand_id,\n               'Nescafe CIAM Registrants' as cell,\n               row_number() over(partition by cb.email_brand order by case when trim(cd.firstname) = '' then 1 else 0 end, cb.first_date_brand nulls last) as em_run\n        from     ${Database}.live.cid_details      cd\n        join     ${Database}.live.cid_brand     cb on cd.cid = cb.cid\n        join     ${Database}.live.ref_brand     rb on rb.brand_id = cb.brand_id\n        join     ${Database}.live.xref_name_urn xr on xr.cid = cd.cid\n        join     ${Database}.db.names na on na.bbw_urn = cast(tbw.db.strchop(cb.cid_brand_urn,'-',1,1) as int)\n        left join  ${Database}.temp.nuk_nescafe_welcome_supps s    on cd.cid = s.cid\n        left join  ${Database}.temp.nuk_nescafe_welcome_e_supps es on lower(cb.email_brand) = lower(es.email)\n        where     cb.business_unit_id = 1\n        and cb.brand_id in (\n                            select brand_id from ${Database}.db.ref_brand\n                            where brand in ('Nescafe Original',\n                                            'Nescafe Gold',\n                                            'Nescafe Azera',\n                                            'Nescafe')\n                         )\n        and na.source_brand_id in (\n                            select brand_id from ${Database}.db.ref_brand\n                            where brand in ('Nescafe Original',\n                                            'Nescafe Gold',\n                                            'Nescafe Azera',\n                                            'Nescafe')\n                                   )\n        and (brand_preference = 1 or (brand_engagement = 1 and  brand_preference <> 0))\n        and     cb.emailable = 1\n        and     na.data_date >= current_date-10\n        and s.cid is null\n        and es.email is null\n     ) a\nwhere em_run = 1\n ;\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\n-- Insert into comms_hist\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id, pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n )\n select\n     'E',\n     'NUK07206',\n     'NUK07206' ,\n     cell_id,\n     pack_id,\n     0,\n     name_urn,\n     current_date(),\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date(),\n     brand_id\nfrom      ${Database}.temp.NUK07206_NESCAFE_welcome\n;\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.NUK07206_NESCAFE_welcome as select name_urn, forename, email, cell_id, kog_pack from ${Database}.temp.NUK07206_NESCAFE_welcome;\n\n\n/******************************************************************************************\n   NUK Nescafe 3rd Party welcome\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NUK08222' and drop_date = current_date;\n\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_nescafe_third_party_welcome_supps\nas\nselect distinct\n    xr.cid,\n    ch.pack_id,\n    ch.cell_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id ='NUK08222';\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_nescafe_third_party_welcome_e_supps\nas\nselect distinct\n    xr.email,\n    su.pack_id,\n    su.cell_id,\n    su.drop_date\nfrom ${Database}.temp.nuk_nescafe_third_party_welcome_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\nCREATE OR REPLACE TABLE ${Database}.temp.NUK08222_NESCAFE_3RDPARTY_welcome\nas\nselect\n       name_urn,\n       forename,\n       brand_preference,\n       brand_engagement,\n       email_brand as email,\n       emailable,\n       brand,\n       brand_id,\n      case when  ciam_acc = 1 then 'Y'\n                else 'N' end as nescafe_ciam_account_holder,\n      case when  profiler = 1 then 'Y'\n                else 'N' end as nescafe_ciam_profiler,\n      case when  existing_nescafe = 1 then 'Y'\n                else 'N' end as existing_nescafe_consumer,\n\n               case when lower(registration_campaign) regexp '.*perky blinders & grindsmith craft coffee.*' then 'our NESCAFÉ AZERA Craft Coffee cashback offer'\n                         when trim(registration_campaign) = 'Nescafe Azera' then 'the NESCAFÉ AZERA Craft Coffee cashback offer'\n                         when trim(registration_campaign) = 'Nescafe Gold Blend Roastery Collection Dark Roast Instant Coffee' then 'the NESCAFÉ GOLD BLEND Roastery cashback offer'\n                         when trim(registration_campaign) = 'Nescafe Azera My Way Latte Chance' then 'the NESCAFÉ AZERA My Way Latte 1 In 5 wins cashback offer'\n                         when lower(registration_campaign) regexp '.*nescafe azera my way latte.*' then 'the NESCAFÉ AZERA My Way Latte try for £1 cashback offer' \n                         end as nescafe_source,\n\n                case when lower(registration_campaign) regexp '.*perky blinders & grindsmith craft coffee.*' then ''\n                         when trim(registration_campaign) = 'Nescafe Azera' then 'NESCAFÉ AZERA Craft Coffee'\n                         when trim(registration_campaign) = 'Nescafe Gold Blend Roastery Collection Dark Roast Instant Coffee' then 'NESCAFÉ GOLD BLEND Roastery'\n                         when trim(registration_campaign) = 'Nescafe Azera My Way Latte Chance' then 'NESCAFÉ AZERA My Way Latte'\n                         when lower(registration_campaign) regexp '.*nescafe azera my way latte.*' then 'NESCAFÉ AZERA My Way Latte' \n                         end as nescafe_rr_product,\n\n                case when lower(registration_campaign) regexp '.*perky blinders & grindsmith craft coffee.*' then 'N'\n                         when trim(registration_campaign) = 'Nescafe Azera' then 'Y'\n                         when trim(registration_campaign) = 'Nescafe Gold Blend Roastery Collection Dark Roast Instant Coffee' then 'Y'\n                         when trim(registration_campaign) = 'Nescafe Azera My Way Latte Chance' then 'Y'\n                         when lower(registration_campaign) regexp '.*nescafe azera my way latte.*' then 'Y' \n                         end as nescafe_rr,\n\n                 case when lower(registration_campaign) regexp '.*perky blinders & grindsmith craft coffee.*' then ''\n                         when trim(registration_campaign) = 'Nescafe Azera' then 'display.ugc.bazaarvoice.com/static/nescafe/main_site/en_GB/container.htm?bvaction=rr_submit_review&bvproductId=7613287172488&bvcampaignId=ht_pre_welcome_craft_email'\n                         when trim(registration_campaign) = 'Nescafe Gold Blend Roastery Collection Dark Roast Instant Coffee' then 'display.ugc.bazaarvoice.com/static/nescafe/main_site/en_GB/container.htm?bvaction=rr_submit_review&bvproductId=7613287220455&bvcampaignId=ht_pre_welcome_roastery_email'\n                         when trim(registration_campaign) = 'Nescafe Azera My Way Latte Chance' then 'display.ugc.bazaarvoice.com/static/nescafe/main_site/en_GB/container.htm?bvaction=rr_submit_review&bvproductId=7613287190123&bvcampaignId=ht_pre_welcome_my_way_email'\n                         when lower(registration_campaign) regexp '.*nescafe azera my way latte.*' then 'display.ugc.bazaarvoice.com/static/nescafe/main_site/en_GB/container.htm?bvaction=rr_submit_review&bvproductId=7613287190123&bvcampaignId=ht_pre_welcome_my_way_email' \n                         end as nescafe_rr_link,\n\n                case when lower(registration_campaign) regexp '.*perky blinders & grindsmith craft coffee.*' then '5'\n                         when trim(registration_campaign) = 'Nescafe Azera' then '1'\n                         when trim(registration_campaign) = 'Nescafe Gold Blend Roastery Collection Dark Roast Instant Coffee' then '2'\n                         when trim(registration_campaign) = 'Nescafe Azera My Way Latte Chance' then '3'\n                         when lower(registration_campaign) regexp '.*nescafe azera my way latte.*' then '4' \n                         end as cell_id,\n\n       case when ciam_acc = 1 then '1'\n                 when ciam_acc = 0 and existing_nescafe = 1 then '2'\n                 when ciam_acc = 0 and existing_nescafe = 0 then '3' end as pack_id,\n       ('E|NUK08222|NUK08222|'||\n             case when lower(registration_campaign) regexp '.*perky blinders & grindsmith craft coffee.*' then '5'\n                         when trim(registration_campaign) = 'Nescafe Azera' then '1'\n                         when trim(registration_campaign) = 'Nescafe Gold Blend Roastery Collection Dark Roast Instant Coffee' then '2'\n                         when trim(registration_campaign) = 'Nescafe Azera My Way Latte Chance' then '3'\n                         when lower(registration_campaign) regexp '.*nescafe azera my way latte.*' then '4' end\n             ||'|'||case when ciam_acc = 1 then '1'\n                 when ciam_acc = 0 and existing_nescafe = 1 then '2'\n                 when ciam_acc = 0 and existing_nescafe = 0 then '3' end) as kog_pack\nfrom (\n        select cd.cid,\n               nm.name_urn,\n               cd.title,\n               case\n                    when length(cd.firstname) = 1 then ''\n                    when substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n                    else cd.firstname\n               end as forename,\n               cd.lastname,\n               cb.brand_preference,\n               cb.brand_engagement,\n               cb.email_brand,\n               cb.emailable,\n               rb.brand,\n               rb.brand_id,\n               case when ciam.ciam_source ='REG_GIG' then 1 else 0 end as ciam_acc,\n               case when pr.cid is not null then 1 else 0 end as profiler,\n               case when (nm.source = 'REG_HASHTING' and ciam.first_source_date < nm.data_date) then 1 else 0 end as existing_nescafe,\n               na.registration_campaign,\n               row_number() over(partition by cb.email_brand order by case when trim(cd.firstname) = '' then 1 else 0 end, cb.first_date_brand nulls last) as em_run\nfrom ${Database}.live.names nm\ninner join ${Database}.live.cid_details cd on cd.cid = nm.cid\ninner join ${Database}.live.cid_brand cb on cb.cid = nm.cid\n                                   and cb.brand_id = nm.source_brand_id\ninner join ${Database}.live.ref_brand rb on rb.brand_id = cb.brand_id\ninner join ${Database}.db.names_attributes na on na.name_urn = nm.name_urn\nleft join (\n              select distinct\n                  xr.cid,\n                  first_value(nm.data_date) over (partition by xr.cid order by nm.data_date asc) as first_source_date,\n                  first_value(nm.source) over (partition by xr.cid order by case when trim(nm.source) ='REG_GIG' then 1 else 0 end desc) as ciam_source\n              from ${Database}.db.names nm\n              inner join ${Database}.live.xref_name_urn xr on xr.name_urn = nm.name_urn\n              where nm.source_brand_id in (select brand_id from ${Database}.live.ref_brand where brand ilike '%nescafe%' and trim(division) = 'Beverage')\n          ) ciam on ciam.cid = nm.cid\nleft join (\n              select distinct\n                  cid\n              from (\n                       select\n                           cid\n                       from ${Database}.live.cid_brand_question\n                       where question_id = (select question_id from ${Database}.db.ref_question where question = 'How do you like your coffee')\n                       union all\n                       select\n                           cid\n                       from ${Database}.live.cid_brand_question\n                       where question_id = (select question_id from ${Database}.db.ref_question where question = 'What intensity do you prefer')\n                       union all\n                       select\n                           cid\n                       from ${Database}.live.cid_brand_question\n                       where question_id = (select question_id from ${Database}.db.ref_question where question = 'In what way do you require/want a coffee')\n                       union all\n                       select\n                           cid\n                       from ${Database}.live.cid_brand_question\n                       where question_id = (select question_id from ${Database}.db.ref_question where question = 'What time of day do you drink your coffee')\n                   ) q\n          ) pr on pr.cid = nm.cid\nleft join (\n              select distinct\n                  xr.cid,\n                  ch.email\n              from ${Database}.db.comms_hist ch\n              inner join ${Database}.live.xref_name_urn xr on xr.name_urn = ch.name_urn\n              where ch.promotion_id = 'NUK07206'\n                  and ch.drop_date = current_date\n          ) ch on ch.cid = nm.cid\n               or lower(ch.email) = lower(cb.email_brand)\nleft join ${Database}.temp.nuk_nescafe_third_party_welcome_supps s on s.cid = cd.cid\n                                                   and (\n                                                                     s.drop_date >= add_months(current_date,-3)\n                                                                  or\n                                                                     s.cell_id = case\n                                                                                     when lower(registration_campaign) regexp '.*perky blinders & grindsmith craft coffee.*' then '5'\n                                                                                     when trim(na.registration_campaign) = 'Nescafe Azera' then '1'\n                                                                                     when trim(na.registration_campaign) = 'Nescafe Gold Blend Roastery Collection Dark Roast Instant Coffee' then '2'\n                                                                                     when trim(na.registration_campaign) = 'Nescafe Azera My Way Latte Chance' then '3'\n                                                                                     when lower(na.registration_campaign) regexp '.*nescafe azera my way latte.*' then '4'\n                                                                                 end\n                                                                 )\nleft join ${Database}.temp.nuk_nescafe_third_party_welcome_e_supps es on lower(es.email) = lower(cb.email_brand)\n                                                       and (\n                                                                         es.drop_date >= add_months(current_date,-3)\n                                                                      or\n                                                                         es.cell_id = case\n                                                                                          when lower(registration_campaign) regexp '.*perky blinders & grindsmith craft coffee.*' then '5'\n                                                                                          when trim(na.registration_campaign) = 'Nescafe Azera' then '1'\n                                                                                          when trim(na.registration_campaign) = 'Nescafe Gold Blend Roastery Collection Dark Roast Instant Coffee' then '2'\n                                                                                          when trim(na.registration_campaign) = 'Nescafe Azera My Way Latte Chance' then '3'\n                                                                                          when lower(na.registration_campaign) regexp '.*nescafe azera my way latte.*' then '4'\n                                                                                      end\n                                                                     )\nwhere trim(nm.source) = 'REG_HASHTING'\n    and nm.reg_date >= current_date - 5\n    and nm.source_brand_id  in (select brand_id from ${Database}.live.ref_brand where brand ilike '%nescafe%' and trim(division) = 'Beverage')\n    and (cb.brand_preference = 1 or (cb.brand_engagement = 1 and cb.brand_preference <> 0))\n    and cb.emailable = 1\n    and ch.cid is null\n    and s.cid is null\n    and es.email is null\n     ) a\nwhere em_run = 1\n ;\n  \n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\n-- Insert into comms_hist\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id, pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n )\n select\n     'E',\n     'NUK08222',\n     'NUK08222' ,\n     cell_id,\n     pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom      ${Database}.temp.NUK08222_NESCAFE_3RDPARTY_welcome\n;\n  \n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.NUK08222_Nescafe_ThirdParty_Welcome_CIAM as select name_urn, forename, email, nescafe_source, nescafe_rr, nescafe_rr_link, nescafe_rr_product, nescafe_ciam_profiler, cell_id, pack_id as batch, kog_pack from ${Database}.temp.nuk08222_nescafe_3rdparty_welcome where pack_id = '1';\ncreate or replace table ${Database}.jobs.NUK08222_Nescafe_ThirdParty_Welcome_non_CIAM as select name_urn, forename, email, nescafe_source, nescafe_rr, nescafe_rr_link, nescafe_rr_product, cell_id, pack_id as batch, kog_pack from ${Database}.temp.nuk08222_nescafe_3rdparty_welcome where pack_id = '2';\ncreate or replace table ${Database}.jobs.NUK08222_Nescafe_ThirdParty_Welcome_not_in_DB as select name_urn, forename, email, nescafe_source, nescafe_rr, nescafe_rr_link, nescafe_rr_product, cell_id, pack_id as batch, kog_pack from ${Database}.temp.nuk08222_nescafe_3rdparty_welcome where pack_id = '3';\n\n\n/******************************************************************************************\n  CERELAC ECRM PROGRAMME\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'SMA07448' and drop_date = current_date;\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ncreate or replace table ${Database}.temp.sma_cerelac_welcome_supps\nas\nselect distinct\n    xr.cid,\n    ch.pack_id,\n    ch.cell_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id ='SMA07448';\n\n\ncreate or replace table ${Database}.temp.sma_cerelac_ecrm_e_supps\nas\nselect distinct\n    xr.email,\n    su.pack_id,\n    su.cell_id,\n    su.drop_date\nfrom ${Database}.temp.sma_cerelac_welcome_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\ncreate or replace table ${Database}.temp.cerelac_ecrm_programme_base\nas\nselect\n    *,\n    'E|SMA07448|SMA07448|'||cell_id||'|1' as kog_pack,\n    row_number() over(partition by email order by cast(cell_id as int)) as rn\nfrom (\n         select\n             cd.cid,\n             cer.bbw_urn,\n             cds.firstname,\n             cer.email_brand as email,\n             dep.name_urn,\n             case\n                 when cer.first_date_brand > current_date-3 then 'Welcome'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -6) then '6 months'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -6)-14 then '6.5 months'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -7) then '7 months'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -7)-14 then '7.5 months'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -8) then '8 months'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -9) then '9 months'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -10) then '10 months'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -11) then '11 months'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -12) then '12 months'\n                 else ''\n             end as comms_programme,\n             case\n                 when cer.first_date_brand > current_date-3 then '1'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -6) then '2'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -6)-14 then '3'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -7) then '4'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -7)-14 then '5'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -8) then '6'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -9) then '7'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -10) then '8'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -11) then '9'\n                 when dep.cid is not null and dep.child_dob = add_months(current_date, -12) then '10'\n                 else '99'\n             end as cell_id\n         from ${Database}.live.cid cd\n         join ${Database}.live.cid_details cds on cd.cid = cds.cid\n         join (\n                  select distinct\n                      a.cid,\n                      cast(split_part(cid_brand_urn,'-',1) as int) as bbw_urn,\n                      a.email_brand,\n                      first_date_brand\n                  from ${Database}.live.cid_brand a\n                  join ${Database}.db.ref_brand b on a.brand_id = b.brand_id and b.brand ilike '%cerelac%'\n                  where emailable = 1\n                      and brand_campaignable = 1\n              ) cer on cer.cid = cd.cid\n         left join (\n                       select distinct\n                           cid,\n                           first_value(name_urn) over (partition by cid order by dob desc) as name_urn,\n                           first_value(dob) over (partition by cid order by dob desc) as child_dob\n                       from ${Database}.live.dependant\n                   ) dep on dep.cid = cd.cid\n         left join (\n                       select distinct\n                           cid\n                       from ${Database}.live.dependant\n                       where dob > current_date - 189\n                   ) dep2 on dep2.cid = cd.cid\n         where dep.cid is not null\n             and dep2.cid is null\n             and cd.country in ('United Kingdom','UK','')\n     ) a;\n\n\ncreate or replace table ${Database}.temp.cerelac_ecrm_programme_output\nas\nselect distinct\n    bbw_urn,\n    name_urn,\n    firstname,\n    e.email,\n    subject as cerelac_ecrm_subject,\n    preheader as cerelac_ecrm_preheader,\n    intro_text as cerelac_ecrm_intro_text,\n    hero_image as cerelac_ecrm_hero_image,\n    hero_header as cerelac_ecrm_hero_header,\n    replace(hero_copy_seg1,'puree','purée') as cerelac_ecrm_hero_copy_seg1,\n    replace(hero_copy_seg2,'Nestle','Nestlé') as cerelac_ecrm_hero_copy_seg2,\n    replace(hero_copy_seg3,'Nestle','Nestlé') as cerelac_ecrm_hero_copy_seg3,\n    hero_copy_seg4 as cerelac_ecrm_hero_copy_seg4,\n    hero_cta as cerelac_ecrm_hero_cta,\n    hero_link_image as cerelac_ecrm_hero_link_image,\n    hero_link_button as cerelac_ecrm_hero_link_button,\n    hero_link_label as cerelac_ecrm_hero_link_label,\n    art_1_image as cerelac_ecrm_art_1_image,\n    art_1_header as cerelac_ecrm_art_1_header,\n    replace(art_1_copy_seg1,'CERELAC','CERELAC®') as cerelac_ecrm_art_1_copy_seg1,\n    art_1_copy_seg2 as cerelac_ecrm_art_1_copy_seg2,\n    art_1_copy_seg3 as cerelac_ecrm_art_1_copy_seg3,\n    art_1_copy_seg4 as cerelac_ecrm_art_1_copy_seg4,\n    art_1_cta as cerelac_ecrm_art_1_cta,\n    art_1_link_image as cerelac_ecrm_art_1_link_image,\n    art_1_link_button as cerelac_ecrm_art_1_link_button,\n    art_1_link_label as cerelac_ecrm_art_1_link_label,\n    prod_1_image1 as cerelac_ecrm_prod_1_image1,\n    prod_1_image2 as cerelac_ecrm_prod_1_image2,\n    prod_1_image3 as cerelac_ecrm_prod_1_image3,\n    prod_1_image4 as cerelac_ecrm_prod_1_image4,\n    prod_1_header as cerelac_ecrm_prod_1_header,\n    replace(replace(replace(replace(replace(replace(prod_1_copy1_seg1,'CERELAC Baby Rice','CERELAC® Baby Rice'),'CERELAC Rice','CERELAC® Rice'),'CERELAC Wheat','CERELAC® Wheat'),'CERELAC Mixed Fruits','CERELAC® Mixed Fruits'),'CERELAC Mixed Vegetables','CERELAC® Mixed Vegetables'),'CERELAC Honey','CERELAC® Honey') as cerelac_ecrm_prod_1_copy1_seg1,\n    replace(replace(prod_1_copy1_seg2,'CERELAC 5','CERELAC® 5'),'CERELAC Honey','CERELAC® Honey') as cerelac_ecrm_prod_1_copy1_seg2,\n    prod_1_copy1_seg3 as cerelac_ecrm_prod_1_copy1_seg3,\n    prod_1_copy1_seg4 as cerelac_ecrm_prod_1_copy1_seg4,\n    prod_1_bullet1 as cerelac_ecrm_prod_1_bullet1,\n    prod_1_bullet2 as cerelac_ecrm_prod_1_bullet2,\n    prod_1_bullet3 as cerelac_ecrm_prod_1_bullet3,\n    prod_1_bullet4 as cerelac_ecrm_prod_1_bullet4,\n    prod_1_bullet5 as cerelac_ecrm_prod_1_bullet5,\n    prod_1_copy2_seg1 as cerelac_ecrm_prod_1_copy2_seg1,\n    prod_1_copy2_seg2 as cerelac_ecrm_prod_1_copy2_seg2,\n    prod_1_copy2_seg3 as cerelac_ecrm_prod_1_copy2_seg3,\n    prod_1_copy2_seg4 as cerelac_ecrm_prod_1_copy2_seg4,\n    prod_1_cta1 as cerelac_ecrm_prod_1_cta1,\n    prod_1_link_image1 as cerelac_ecrm_prod_1_link_image1,\n    prod_1_link_button1 as cerelac_ecrm_prod_1_link_button1,\n    prod_1_cta2 as cerelac_ecrm_prod_1_cta2,\n    prod_1_link_image2 as cerelac_ecrm_prod_1_link_image2,\n    prod_1_link_button2 as cerelac_ecrm_prod_1_link_button2,\n    prod_1_cta3 as cerelac_ecrm_prod_1_cta3,\n    prod_1_link_image3 as cerelac_ecrm_prod_1_link_image3,\n    prod_1_link_button3 as cerelac_ecrm_prod_1_link_button3,\n    prod_1_link_label as cerelac_ecrm_prod_1_link_label,\n    prod_2_image1 as cerelac_ecrm_prod_2_image1,\n    prod_2_image2 as cerelac_ecrm_prod_2_image2,\n    prod_2_image3 as cerelac_ecrm_prod_2_image3,\n    prod_2_copy1_seg1 as cerelac_ecrm_prod_2_copy1_seg1,\n    prod_2_copy1_seg2 as cerelac_ecrm_prod_2_copy1_seg2,\n    prod_2_copy1_seg3 as cerelac_ecrm_prod_2_copy1_seg3,\n    prod_2_copy1_seg4 as cerelac_ecrm_prod_2_copy1_seg4,\n    prod_2_bullet1 as cerelac_ecrm_prod_2_bullet1,\n    prod_2_bullet2 as cerelac_ecrm_prod_2_bullet2,\n    prod_2_bullet3 as cerelac_ecrm_prod_2_bullet3,\n    prod_2_bullet4 as cerelac_ecrm_prod_2_bullet4,\n    prod_2_bullet5 as cerelac_ecrm_prod_2_bullet5,\n    prod_2_bullet6 as cerelac_ecrm_prod_2_bullet6,\n    prod_2_cta as cerelac_ecrm_prod_2_cta,\n    prod_2_link_image as cerelac_ecrm_prod_2_link_image,\n    prod_2_link_button as cerelac_ecrm_prod_2_link_button,\n    prod_2_link_label as cerelac_ecrm_prod_2_link_label,\n    art_2_image as cerelac_ecrm_art_2_image,\n    art_2_header as cerelac_ecrm_art_2_header,\n    art_2_copy_seg1 as cerelac_ecrm_art_2_copy_seg1,\n    art_2_copy_seg2 as cerelac_ecrm_art_2_copy_seg2,\n    art_2_copy_seg3 as cerelac_ecrm_art_2_copy_seg3,\n    art_2_copy_seg4 as cerelac_ecrm_art_2_copy_seg4,\n    art_2_cta as cerelac_ecrm_art_2_cta,\n    art_2_link_image as cerelac_ecrm_art_2_link_image,\n    art_2_link_button as cerelac_ecrm_art_2_link_button,\n    art_2_link_label as cerelac_ecrm_art_2_link_label,\n    important_copy_seg1 as cerelac_ecrm_important_copy_seg1,\n    important_copy_seg2 as cerelac_ecrm_important_copy_seg2,\n    important_copy_seg3 as cerelac_ecrm_important_copy_seg3,\n    important_copy_seg4 as cerelac_ecrm_important_copy_seg4,\n    cerm_code_uk as cerelac_ecrm_cerm_code,\n    comms_programme_description as cerelac_ecrm_programme_description,\n    kog_pack,\n    e.cell_id\nfrom ${Database}.temp.cerelac_ecrm_programme_base e\njoin ${Database}.db.cerelac_ecrm_content_matrix ecrm on ecrm.comms_programme_description = e.comms_programme\nleft join ${Database}.temp.sma_cerelac_ecrm_supps cs on cs.cid = e.cid\n                                               and cs.cell_id = e.cell_id\n                                               and (cs.cell_id = '1' or cs.drop_date >= add_months(current_date,-6))\nleft join ${Database}.temp.sma_cerelac_ecrm_e_supps es on lower(es.email) = lower(e.email)\n                                                 and es.cell_id = e.cell_id\n                                                 and (es.cell_id = '1' or es.drop_date >= add_months(current_date,-6))\nwhere e.comms_programme > ''\n    and e.rn = 1\n    and cs.cid is null\n    and es.email is null;\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id, pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'SMA07448',\n    'SMA07448' ,\n    cell_id,\n    1 as pack_id,\n    0,\n    name_urn,\n    current_date,\n    email,\n    0 as brand_preference,\n    0 as brand_engagement,\n    current_date,\n    31 as brand_id\nfrom ${Database}.temp.cerelac_ecrm_programme_output;\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.cerelac_ecrm_programme_output as select bbw_urn as name_urn,firstname,email,cerelac_ecrm_subject,cerelac_ecrm_preheader,cerelac_ecrm_intro_text,cerelac_ecrm_hero_image,cerelac_ecrm_hero_header,cerelac_ecrm_hero_copy_seg1,cerelac_ecrm_hero_copy_seg2,cerelac_ecrm_hero_copy_seg3,cerelac_ecrm_hero_copy_seg4,cerelac_ecrm_hero_cta,cerelac_ecrm_hero_link_image,cerelac_ecrm_hero_link_button,cerelac_ecrm_hero_link_label,cerelac_ecrm_art_1_image,cerelac_ecrm_art_1_header,cerelac_ecrm_art_1_copy_seg1,cerelac_ecrm_art_1_copy_seg2,cerelac_ecrm_art_1_copy_seg3,cerelac_ecrm_art_1_copy_seg4,cerelac_ecrm_art_1_cta,cerelac_ecrm_art_1_link_image,cerelac_ecrm_art_1_link_button,cerelac_ecrm_art_1_link_label,cerelac_ecrm_prod_1_image1,cerelac_ecrm_prod_1_image2,cerelac_ecrm_prod_1_image3,cerelac_ecrm_prod_1_image4,cerelac_ecrm_prod_1_header,cerelac_ecrm_prod_1_copy1_seg1,cerelac_ecrm_prod_1_copy1_seg2,cerelac_ecrm_prod_1_copy1_seg3,cerelac_ecrm_prod_1_copy1_seg4,cerelac_ecrm_prod_1_bullet1,cerelac_ecrm_prod_1_bullet2,cerelac_ecrm_prod_1_bullet3,cerelac_ecrm_prod_1_bullet4,cerelac_ecrm_prod_1_bullet5,cerelac_ecrm_prod_1_copy2_seg1,cerelac_ecrm_prod_1_copy2_seg2,cerelac_ecrm_prod_1_copy2_seg3,cerelac_ecrm_prod_1_copy2_seg4,cerelac_ecrm_prod_1_cta1,cerelac_ecrm_prod_1_link_image1,cerelac_ecrm_prod_1_link_button1,cerelac_ecrm_prod_1_cta2,cerelac_ecrm_prod_1_link_image2,cerelac_ecrm_prod_1_link_button2,cerelac_ecrm_prod_1_cta3,cerelac_ecrm_prod_1_link_image3,cerelac_ecrm_prod_1_link_button3,cerelac_ecrm_prod_1_link_label,cerelac_ecrm_prod_2_image1,cerelac_ecrm_prod_2_image2,cerelac_ecrm_prod_2_image3,cerelac_ecrm_prod_2_copy1_seg1,cerelac_ecrm_prod_2_copy1_seg2,cerelac_ecrm_prod_2_copy1_seg3,cerelac_ecrm_prod_2_copy1_seg4,cerelac_ecrm_prod_2_bullet1,cerelac_ecrm_prod_2_bullet2,cerelac_ecrm_prod_2_bullet3,cerelac_ecrm_prod_2_bullet4,cerelac_ecrm_prod_2_bullet5,cerelac_ecrm_prod_2_bullet6,cerelac_ecrm_prod_2_cta,cerelac_ecrm_prod_2_link_image,cerelac_ecrm_prod_2_link_button,cerelac_ecrm_prod_2_link_label,cerelac_ecrm_art_2_image,cerelac_ecrm_art_2_header,cerelac_ecrm_art_2_copy_seg1,cerelac_ecrm_art_2_copy_seg2,cerelac_ecrm_art_2_copy_seg3,cerelac_ecrm_art_2_copy_seg4,cerelac_ecrm_art_2_cta,cerelac_ecrm_art_2_link_image,cerelac_ecrm_art_2_link_button,cerelac_ecrm_art_2_link_label,cerelac_ecrm_important_copy_seg1,cerelac_ecrm_important_copy_seg2,cerelac_ecrm_important_copy_seg3,cerelac_ecrm_important_copy_seg4,cerelac_ecrm_cerm_code,cerelac_ecrm_programme_description,kog_pack,cell_id from ${Database}.temp.cerelac_ecrm_programme_output;\n\n\n/******************************************************************************************\n   San Pell Taste Club - Turning off 20/12/2021 as being replaced by festive trigger.  will be turned back on in 2022 sometime\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\n/*\ndelete from ${Database}.db.comms_hist where campaign_id = 'NUK08515' and promotion_id ='NUK08515_T' and cell_id = '1' and drop_date = current_date();\n*/\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\n/*\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_SanPell_TasteClub_supps\nas\nselect distinct\n    xr.cid,\n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id ='NUK08515_T';\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_SanPell_TasteClub_e_supps\nas\nselect distinct\n    xr.email,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.nuk_SanPell_TasteClub_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n*/\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n-- SanPell Taste Club\n-- Audience: consumers have taken up a cashback offer - based on flavour\n-- Timings: \n\n\n/*\nCREATE OR REPLACE TABLE ${Database}.temp.NUK08515_SanPell_TasteClub\nas\nselect\n    name_urn,\n    email,\n    forename,\n    sanpell_flavour,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    cell_id,\n    pack_id,\n    kog_pack\nfrom (\n         select\n             nm.name_urn,\n             nm.email,\n             case\n                 when nm.firstname is null then ''\n                 when length(nm.firstname) <= 1 then ''\n                 when substring(nm.firstname,2,1) = ' ' and length(nm.firstname) < 4 then ''\n                 else nm.firstname\n             end as forename,\n             sanpell_flavour,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             '1' as cell_id,\n             '1' as pack_id,\n             'E|NUK08515|NUK08515_T|1|1' as KOG_PACK,\n             row_number() over(partition by nm.email order by case when trim(nm.firstname) = '' then 1 else 0 end, cb.first_date_brand nulls last) as em_run\n        --select distinct na.channel \n         from ${Database}.db.names nm\n         inner join ${Database}.live.xref_name_urn xn on nm.name_urn = xn.name_urn\n         inner join ${Database}.live.cid c on xn.cid = c.cid\n         inner join ${Database}.live.cid_brand cb on c.cid = cb.cid\n         inner join\n                  (\n                    select distinct \n                        name_urn,\n                        first_value(answer) over (partition by name_urn order by source_date desc, answer) as sanpell_flavour\n                    from ${Database}.db.question\n                    where\n                        question_id = (select question_id from ${Database}.db.ref_question where question = 'Which Brand SKU did you buy?')\n                        and answer in ('Blood Orange','Grapefruit','Lemon','Lemon & Mint','Orange','Pomegranate & Orange')  --just in case new flavours are added in the future\n                   ) q on q.name_urn = nm.name_urn\n         --inner join ${Database}.db.names_attributes na on nm.name_urn = na.name_urn   --channel is only 'Sanpellegrino Facebook post','Sanpellegrino Influencer activity' and 'Refer a friend activity'\n         left join  ${Database}.temp.nuk_SanPell_TasteClub_supps s    on xn.cid = s.cid\n         left join  ${Database}.temp.nuk_SanPell_TasteClub_e_supps es on lower(cb.email_brand) = lower(es.email)\n         where cb.brand_id in (select brand_id from ${Database}.live.ref_business_unit_brand where brand = 'San Pellegrino ISD')\n             and lower(nm.name_urn) regexp '.*reg_hashting.*'  \n             and nm.reg_date <= current_date\n             and nm.reg_date >= current_date-7 \n             and cb.emailable = 1\n             and (cb.brand_preference = 1 or (cb.brand_engagement = 1 and cb.brand_preference <> 0))\n             and s.cid is null\n             and es.email is null\n             and c.country in ('United Kingdom','') \n     ) em\nwhere em.em_run = 1;\n*/\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n/*\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NUK08515',\n    'NUK08515_T',\n     cell_id,\n     pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NUK08515_SanPell_TasteClub\n;\n*/\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n/*\ncreate or replace table ${Database}.jobs.NUK08515_SanPell_TasteClub as select name_urn, sanpell_flavour, forename, email, kog_pack from ${Database}.temp.NUK08515_SanPell_TasteClub;\n*/\n\n/******************************************************************************************\n   NORDIC CEREALS XBOX CAMPAIGN\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NUK08711' and drop_date = current_date;\n\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ncreate or replace table ${Database}.temp.nuk08711_nordic_cereals_xbox_supps\nas\nselect\n    cell_id,\n    max(drop_date) as last_send\nfrom ${Database}.db.comms_hist\nwhere campaign_id = 'NUK08711'\ngroup by 1;\n\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n-- Create Email Selection\ncreate or replace table ${Database}.temp.nuk08711_nordic_cereals_xbox\nas\nselect\n    em.*\nfrom (\n         select\n             name_urn,\n             case \n                 when length(first_name) = 1 then ''\n                 when substring(first_name,2,1) = ' ' and length(first_name) < 4 then ''\n                 else initcap(first_name)\n             end as forename,\n             lower(email) as email,\n             game_pass_id,\n             source_date,\n             country,\n             case\n                 when country = 'Denmark' then '1'\n                 when country = 'Norway' then '2'\n                 when country = 'Finland' then '3'\n                 when country = 'Sweden' then '4'\n             end as cell_id,\n             'E|NUK08711|NUK08711|'||case\n                                         when country = 'Denmark' then '1'\n                                         when country = 'Norway' then '2'\n                                         when country = 'Finland' then '3'\n                                         when country = 'Sweden' then '4'\n                                     end||'|1' as kog_pack,\n             row_number() over(partition by lower(email), country order by source_date desc nulls last, cast(replace(name_urn,'REG_NORDIC_CEREALS_XBOX|','') as int) asc nulls last) as email_rn\n         from (\n                  select\n                      name_urn,\n                      first_name,\n                      email,\n                      game_pass_id,\n                      country,\n                      source_date,\n                      row_number() over(partition by country, game_pass_id order by source_date asc nulls last, cast(replace(name_urn,'REG_NORDIC_CEREALS_XBOX|','') as int) asc nulls last) as pass_rn\n                  from ${Database}.db.nuk_nordic_cereals_xbox_consumers\n              ) a\n         where pass_rn = 1\n     ) em\nleft join ${Database}.temp.nuk08711_nordic_cereals_xbox_supps su on trim(su.cell_id) = trim(em.cell_id)\nwhere em.email_rn = 1\n    and em.source_date > coalesce(su.last_send,cast('1900-01-01' as date));\n\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NUK08711',\n    'NUK08711',\n    cell_id,\n    '1',\n    0,\n    name_urn,\n    current_date,\n    email,\n    1,\n    1,\n    current_date,\n    cast(null as int)\nfrom ${Database}.temp.nuk08711_nordic_cereals_xbox;\n\n\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.nuk08711_nordic_cereals_xbox_denmark as select name_urn, forename, email, game_pass_id, kog_pack from ${Database}.temp.nuk08711_nordic_cereals_xbox where country = 'Denmark';\ncreate or replace table ${Database}.jobs.nuk08711_nordic_cereals_xbox_norway as select name_urn, forename, email, game_pass_id, kog_pack from ${Database}.temp.nuk08711_nordic_cereals_xbox where country = 'Norway';\ncreate or replace table ${Database}.jobs.nuk08711_nordic_cereals_xbox_finland as select name_urn, forename, email, game_pass_id, kog_pack from ${Database}.temp.nuk08711_nordic_cereals_xbox where country = 'Finland';\ncreate or replace table ${Database}.jobs.nuk08711_nordic_cereals_xbox_sweden as select name_urn, forename, email, game_pass_id, kog_pack from ${Database}.temp.nuk08711_nordic_cereals_xbox where country = 'Sweden';\n\n/******************************************************************************************\nGourmet Qualifio Welcome email\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NPP08578' and cell_id in ('1') and drop_date = current_date;\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ndrop table if exists ${Database}.temp.NPP_gourmet_qualifio_supps cascade;\ncreate table ${Database}.temp.NPP_gourmet_qualifio_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id ='NPP08578';\n\ndrop table if exists ${Database}.temp.NPP_gourmet_qualifio_e_supps cascade;\ncreate table ${Database}.temp.NPP_gourmet_qualifio_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.NPP_gourmet_qualifio_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n-- Create pets table\ndrop table if exists ${Database}.temp.NPP08578_pets;\n\ncreate table ${Database}.temp.NPP08578_pets\nas \nselect\n    cid,\n    max(case when pet_run = 1 then pet_name else '' end) as pet_1_name,\n    max(case when pet_run = 2 then pet_name else '' end) as pet_2_name,\n    max(case when pet_run = 3 then pet_name else '' end) as pet_3_name\nfrom (\n      select\n          cid,\n          pet_name,\n          row_number() over(partition by cid order by case when pet_name > '' then 1 else 0 end desc, pet_data_date desc, pet_dob nulls last) as pet_run\n      from (\n            select distinct\n                p.cid,\n                p.pet_dob,\n                p.pet_name, \n                p.pet_data_date\n            from ${Database}.live.cid_pet p\n            where lower(p.pet_type) = 'cat'\n           ) a\n     ) b\ngroup by 1\n;\n\ndrop table if exists ${Database}.temp.NPP08578_gourmet_qualifio cascade;\n\ncreate table ${Database}.temp.NPP08578_gourmet_qualifio\nas\nselect \n       a.cid,\n       a.name_urn,\n\t   a.forename,\n       a.email,\n       a.npp_ecrm_pet_name,\n\t   a.brand_preference,\n\t   a.brand_engagement,\n\t   a.brand_id,\n       a.npp_ecrm_brand,\n    case when npp_ecrm_brand = 'Kitten Code' then '1'\n        else '2' end as pack_id,\n\t'E|NPP08578|NPP08578|1|'||case when npp_ecrm_brand = 'Kitten Code' then '1'\n                                else '2' end as kog_pack\nfrom (\n\t\tselect cd.cid,\n\t\t\tcd.name_urn,\n\t\t\tcid.bbw_urn,\n\t\t\tcase \n\t\t\t\twhen length(cd.firstname) = 1 then ''\n\t\t\t\twhen substring(cd.firstname,2,1) = ' ' and length(cd.firstname) < 4 then ''\n\t\t\t\telse cd.firstname\n\t\t\tend as forename,\n\t\t\tcb.brand_preference,\n\t\t\tcb.brand_engagement,\n\t\t\tcb.email_brand as email,\n\t\t\tcb.emailable,\n\t\t\tcb.brand_id,\n          \tcase\n               when  pn.pet_3_name > '' then 'Your feline foodie''s'\n               when (pn.pet_1_name = '' or pn.pet_1_name is null) then 'Your feline foodie''s'\n               when  pn.pet_2_name > '' then pn.pet_1_name||' and '||case when right(pn.pet_2_name,1) <> 's' then pn.pet_2_name||'''s'\n                                                                         else pn.pet_2_name||'''' end\n               when  pn.pet_1_name > '' then case when right(pn.pet_1_name,1) <> 's' then pn.pet_1_name||'''s'\n                                                 else pn.pet_1_name||'''' end\n              else ''\n             end as npp_ecrm_pet_name,\n           case when cat.cid is not null  and cat.oldest_pet_dob > add_months(current_date,-12) then 'Kitten Code'\n              else 'Better Together'\n             end as npp_ecrm_brand,\n\t\t   row_number() over(partition by cb.email_brand order by case when trim(cd.firstname) = '' then 1 else 0 end) as em_run\n\t\tfrom \t${Database}.live.cid_details  \tcd\n\t\tjoin \t${Database}.live.cid \t\tcid on cid.cid = cd.cid \n\t\tjoin \t${Database}.live.cid_brand \tcb on cd.cid = cb.cid\n        join ${Database}.live.xref_name_urn xr on xr.cid = cd.cid\n        join  ${Database}.db.names_attributes na on na.name_urn = xr.name_urn\n        left join (select\n                        cid,\n                        min(pet_dob) as oldest_pet_dob\n                   from ${Database}.live.cid_pet\n                   where pet_type = 'Cat'\n                   and pet_dob is not null\n                   group by 1\n                  )\tcat on cat.cid = cd.cid\n        left join ${Database}.temp.NPP08578_pets pn on pn.cid = cd.cid          \n\t\tleft join  ${Database}.temp.NPP_gourmet_qualifio_supps s    on cd.cid = s.cid\n\t\t\t\t\t\t\t\tand s.cell_id = '1'\n\t\tleft join  ${Database}.temp.NPP_gourmet_qualifio_e_supps es on lower(cb.email_brand) = lower(es.email)\n\t\t\t\t\t\t\t\tand es.cell_id = '1'\n\t\twhere \tcb.business_unit_id = 5\n             and cb.brand_id in (select brand_id from ${Database}.db.ref_brand where lower(brand) in ('purina masterbrand','kitten code'))\n             and na.registration_campaign in ('Qualifio Gourmet Personality Quiz','Personality Test – Perfect Food') \n             and cb.emailable = 1\n             and cb.brand_campaignable = 1\n             and s.cid is null \n             and es.email is null\n\t) a\n where em_run = 1 \n ;\n\ndrop table if exists ${Database}.jobs.NPP08578_gourmet_qualifio_final_output cascade;\n\ncreate table ${Database}.jobs.NPP08578_gourmet_qualifio_final_output\nas\nselect \n       name_urn,\n\t   forename,\n       email,\n       npp_ecrm_pet_name,\n       npp_ecrm_brand,\n       kog_pack\nfrom ${Database}.temp.NPP08578_gourmet_qualifio\n;\n\ndrop table if exists ${Database}.temp.NPP_gourmet_qualifio_supps;\ndrop table if exists ${Database}.temp.NPP_gourmet_qualifio_e_supps;\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP08578',\n    'NPP08578',\n    '1',\n    pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NPP08578_gourmet_qualifio;\n\n\n/******************************************************************************************\n   San Pell Taste Club (festive) -- Turned off 10/01/2022\n******************************************************************************************/\n/*\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NUK09144' and promotion_id in ('NUK09144_T','NUK09144_FO') and drop_date = current_date();\n*/\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n/*\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_SanPell_NUK09144_supps\nas\nselect distinct\n    xr.cid,\n    ch.promotion_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id in ('NUK09144_T','NUK09144_FO');\n\t\n\t\n-- Exclude previous campaigns \n\t\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_SanPell_NUK09144_excl_supps\nas\nselect distinct\n    xr.cid,\n    'previous' as promotion_id,\n    cast(min(event_timestamp) as date) as drop_date\nfrom ${Database}.db.adestra_events ae \ninner join ${Database}.live.xref_name_urn xr on ae.name_urn = xr.name_urn\nwhere campaign_id in ('28829','28610','27961','28887') and event_name = 'sent_campaign'\ngroup by 1,2;\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_SanPell_TasteClub_e_NUK09144_supps\nas\nselect distinct\n    xr.email,\n    su.promotion_id,\n    su.drop_date\nfrom ${Database}.temp.nuk_SanPell_NUK09144_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\ninsert  into ${Database}.temp.nuk_SanPell_TasteClub_e_NUK09144_supps --(emails)\nselect distinct\n    xr.email,\n    promotion_id,\n    drop_date\nfrom ${Database}.temp.nuk_SanPell_NUK09144_excl_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n*/\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n/*\n-- SanPell Taste Club\n-- Audience: consumers have taken up a cashback offer - based on flavour & store\n-- Timings: \n\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.NUK09144_SanPell_Recipe\nas\nselect\n    name_urn,\n    email,\n    forename,\n    sanpell_flavour,\n\tsanpell_purchase,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    cell_id,\n    pack_id,\n    'E|NUK09144|NUK09144_T|'||cell_id||'|'||pack_id as KOG_PACK\nfrom (\n         select\n             nm.name_urn,\n             nm.email,\n             case\n                 when nm.firstname is null then ''\n                 when length(nm.firstname) <= 1 then ''\n                 when substring(nm.firstname,2,1) = ' ' and length(nm.firstname) < 4 then ''\n                 else nm.firstname\n             end as forename,\n             sanpell_flavour,\n\t\t\t url.url as sanpell_purchase,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             case when sanpell_flavour  = 'Blood Orange'\t\t then '1'\n                  when sanpell_flavour  = 'Grapefruit'\t\t     then '2'\n                  when sanpell_flavour  = 'Lemon'\t\t         then '3'\n                  when sanpell_flavour  = 'Lemon & Mint'\t\t then '4'\n                  when sanpell_flavour  = 'Orange'\t\t         then '5'\n                  when sanpell_flavour  = 'Pomegranate & Orange' then '6'\n             end as cell_id,\n             case when sanpell_shop  = 'ASDA'\t\t then '1'\n                  when sanpell_shop  = 'Morrisons'\t then '2'\n                  when sanpell_shop  = 'Ocado'\t\t then '3'\n                  when sanpell_shop  = 'Other'\t\t then '4'\n                  when sanpell_shop  = 'Sainbury''s' then '5'\n                  when sanpell_shop  = 'Tesco'       then '6'\n                  when sanpell_shop  = 'Waitrose'    then '7' \n             end as pack_id,\n             row_number() over(partition by nm.email order by case when trim(nm.firstname) = '' then 1 else 0 end, cb.first_date_brand desc nulls last) as em_run\n         from ${Database}.db.names nm\n         inner join ${Database}.live.xref_name_urn xn on nm.name_urn = xn.name_urn\n         inner join ${Database}.live.cid c on xn.cid = c.cid\n         inner join ${Database}.live.cid_brand cb on c.cid = cb.cid\n         inner join\n                  (\n                    select distinct \n                        name_urn,\n                        first_value(case when answer  ilike '%Blood Orange%'\t\t then 'Blood Orange'\t\t \n                                         when answer  ilike '%Grapefruit%'\t\t     then 'Grapefruit'\t\t     \n                                         when answer  ilike '%Lemon & Mint%'\t\t then 'Lemon & Mint'\t\t \n                                         when answer  ilike '%Lemon%'\t\t         then 'Lemon'\t\t         \n                                         when answer  ilike '%Pomegranate & Orange%' then 'Pomegranate & Orange' \n                                         when answer  ilike '%Orange%'\t\t         then 'Orange'\t\t         \n                                     end) over (partition by name_urn order by source_date desc, answer) as sanpell_flavour\n                    from ${Database}.db.question\n                    where\n                        question_id = (select question_id from ${Database}.db.ref_question where question = 'Which Brand SKU did you buy?')\n                        and answer ilike any ('%Blood Orange%','%Grapefruit%','%Lemon%','%Lemon & Mint%','%Orange%','%Pomegranate & Orange%')  --just in case new flavours are added in the future\n                   ) q on q.name_urn = nm.name_urn\n\t\t inner join\n                 (\n                   select distinct \n                       name_urn,\n                       first_value(answer) over (partition by name_urn order by source_date desc, answer) as sanpell_shop\n                   from ${Database}.db.question\n                   where\n                       question_id = (select question_id from ${Database}.db.ref_question where question = 'Where did you buy your drinks?')\n                       and answer in ('ASDA','Morrisons','Ocado','Other','Sainbury''s','Tesco','Waitrose')\n                  ) q2 on q2.name_urn = nm.name_urn\t \n  \n        left join (select case when product  ilike '%Blood Orange%'\t\t then 'Blood Orange'\t\t \n                         when product  ilike '%Grapefruit%'\t\t     then 'Grapefruit'\t\t     \n                         when product  ilike '%Lemon & Mint%'\t\t then 'Lemon & Mint'\t\t \n                         when product  ilike '%Lemon%'\t\t         then 'Lemon'\t\t         \n                         when product  ilike '%Pomegranate & Orange%' then 'Pomegranate & Orange' \n                         when product  ilike '%Orange%'\t\t         then 'Orange'\t\t         \n                    end as flavour,\n                    case when product ilike '%ASDA'        then 'ASDA'       \n                        when product ilike '%Morrisons'   then 'Morrisons'  \n                        when product ilike '%Ocado'       then 'Ocado'      \n                        when product ilike '%Other'       THEN 'Other'      \n                        when product ilike '%Sainbury''s' then 'Sainbury''s'\n                        when product ilike '%Tesco'       then 'Tesco'      \n                        when product ilike '%Waitrose'    then 'Waitrose'  \n                    end as shop,\n                    url\n             from ${Database}.db.NUK09144_San_pell_triggered_url_lookup) url on url.flavour = q.sanpell_flavour and url.shop = q2.sanpell_shop \n  \n         left join  ${Database}.temp.nuk_SanPell_NUK09144_supps s    on xn.cid = s.cid and s.promotion_id in ('NUK09144_T','previous')\n         left join  ${Database}.temp.nuk_SanPell_TasteClub_e_NUK09144_supps es on lower(cb.email_brand) = lower(es.email) and es.promotion_id in ('NUK09144_T','previous')\n         where cb.brand_id in (select brand_id from ${Database}.live.ref_business_unit_brand where brand = 'San Pellegrino ISD')\n             and lower(nm.name_urn) regexp '.*reg_hashting.*'  \n             and nm.reg_date <= current_date\n             and nm.reg_date >= current_date-7 \n             and cb.emailable = 1\n\t\t\t and cb.brand_campaignable = 1\n             and s.cid is null\n             and es.email is null\n\t\t\t and c.cid not in (select cid from ${Database}.live.cid where c.dob > add_months(current_date(),-216))\n             and c.country in ('United Kingdom','') \n\t\t\t and left(c.postcode,2) not in ('GY','JE','IM')\n     ) em\nwhere em.em_run = 1;\n\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.NUK09144_SanPell_Recipe_follow_up\nas\nselect\n    name_urn,\n    email,\n    forename,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    cell_id,\n    pack_id,\n    'E|NUK09144|NUK09144_FO|1|1' as KOG_PACK\nfrom (\n         select\n             nm.name_urn,\n             nm.email,\n             case\n                 when nm.firstname is null then ''\n                 when length(nm.firstname) <= 1 then ''\n                 when substring(nm.firstname,2,1) = ' ' and length(nm.firstname) < 4 then ''\n                 else nm.firstname\n             end as forename,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             '1' as cell_id,\n             '1' as pack_id,\n             row_number() over(partition by nm.email order by case when trim(nm.firstname) = '' then 1 else 0 end, cb.first_date_brand nulls last) as em_run\n         from ${Database}.db.names nm\n         inner join ${Database}.live.xref_name_urn xn on nm.name_urn = xn.name_urn\n         inner join ${Database}.live.cid c on xn.cid = c.cid\n         inner join ${Database}.live.cid_brand cb on c.cid = cb.cid\n         inner join (select distinct cid, drop_date\n                     from ${Database}.db.comms_hist t\n                    join ${Database}.live.xref_name_urn xt on t.name_urn = xt.name_urn\n                    where promotion_id = 'NUK09144_T') tr on tr.cid = xn.cid\n         left join  ${Database}.temp.nuk_SanPell_NUK09144_supps s    on xn.cid = s.cid and s.promotion_id in ('NUK09144_FO','previous')\n         left join  ${Database}.temp.nuk_SanPell_TasteClub_e_NUK09144_supps es on lower(cb.email_brand) = lower(es.email) and s.promotion_id in ('NUK09144_FO','previous')\n         where cb.brand_id in (select brand_id from ${Database}.live.ref_business_unit_brand where brand = 'San Pellegrino ISD')\n             and lower(nm.name_urn) regexp '.*reg_hashting.*'  \n             and tr.drop_date <= current_date-14\n             and tr.drop_date >= current_date-21 \n             and cb.emailable = 1\n\t\t\t and cb.brand_campaignable = 1\n             and s.cid is null\n             and es.email is null\n\t\t\t and c.cid not in (select cid from ${Database}.live.cid where c.dob > add_months(current_date(),-216))\n             and c.country in ('United Kingdom','') \n\t\t\t and left(c.postcode,2) not in ('GY','JE','IM')\n     ) em\nwhere em.em_run = 1;\n\n*/\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n/*\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NUK09144',\n    'NUK09144_T',\n     cell_id,\n     pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NUK09144_SanPell_Recipe\n;\n\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NUK09144',\n    'NUK09144_FO',\n     '1' as cell_id,\n     '1' as pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NUK09144_SanPell_Recipe_follow_up\n;\n*/\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n/*\ncreate or replace table ${Database}.jobs.NUK09144_SanPell_Recipe as select name_urn, sanpell_flavour, sanpell_purchase, forename, email, kog_pack from ${Database}.temp.NUK09144_SanPell_Recipe;\ncreate or replace table ${Database}.jobs.NUK09144_SanPell_Recipe_follow_up as select name_urn, forename, email, kog_pack from ${Database}.temp.NUK09144_SanPell_Recipe_follow_up;\n\ndrop table if exists ${Database}.temp.nuk_SanPell_NUK09144_supps;\ndrop table if exists ${Database}.temp.nuk_SanPell_NUK09144_excl_supps;\ndrop table if exists ${Database}.temp.nuk_SanPell_TasteClub_e_NUK09144_supps;\n*/\n\n/******************************************************************************************\n   NUK Buxton welcome - turned off 21/02/2022\n******************************************************************************************/\n/*\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NUK09184' and cell_id = '1' and drop_date = current_date();\n\n*/\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n/*\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_buxton_welcome_supps\nas\nselect distinct\n    xr.cid,\n    ch.pack_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id ='NUK09184';\n\n\nCREATE OR REPLACE TABLE ${Database}.temp.nuk_buxton_welcome_e_supps\nas\nselect distinct\n    xr.email,\n    su.pack_id,\n    su.drop_date\nfrom ${Database}.temp.nuk_buxton_welcome_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n*/\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n/*\n\nCREATE OR REPLACE TABLE ${Database}.temp.NUK09184_Buxton_Welcome\nas\nselect\n    name_urn,\n    email,\n    forename,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n    cell_id,\n    pack_id,\n    kog_pack\nfrom (\n         select distinct \n             nm.name_urn,\n             nm.email,\n             case\n                 when nm.firstname is null then ''\n                 when length(nm.firstname) <= 1 then ''\n                 when substring(nm.firstname,2,1) = ' ' and length(nm.firstname) < 4 then ''\n                 else nm.firstname\n             end as forename,\n             cb.brand_id,\n             cb.brand_preference,\n             cb.brand_engagement,\n             '1' as cell_id,\n             '1' as pack_id,\n             'E|NUK09184|NUK09184|1|1' as KOG_PACK,\n             row_number() over(partition by nm.email order by case when trim(nm.firstname) = '' then 1 else 0 end, cb.first_date_brand nulls last) as em_run\n         from ${Database}.live.names nm\n         inner join ${Database}.live.cid_brand cb on nm.cid = cb.cid\n         left join  ${Database}.temp.nuk_buxton_welcome_supps s    on nm.cid = s.cid\n         left join  ${Database}.temp.nuk_buxton_welcome_e_supps es on lower(cb.email_brand) = lower(es.email)\n\n         where cb.brand_id in (select brand_id from ${Database}.db.ref_brand where lower(brand) = 'buxton')\n             and lower(nm.name_urn) regexp '.*reg_gig.*'\n             and nm.source_date <= current_date\n             and nm.source_date >= '2021-12-13'\n             and cb.emailable = 1\n             and cb.brand_campaignable = 1\n            and left(lower(postcode),2) not in ('gy','je','im')\n             and s.cid is null\n             and es.email is null\n     ) em\nwhere em.em_run = 1;\n*/\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n/*\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NUK09184',\n    'NUK09184',\n     cell_id,\n     pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NUK09184_Buxton_Welcome\n;\n\n*/\n/******************************************************************************************\n   CREATE TABLES FOR OUTPUTS FILES\n******************************************************************************************/\n/*\ncreate or replace table ${Database}.jobs.nuk09184_buxton_welcome as select name_urn, forename, email, kog_pack from ${Database}.temp.NUK09184_Buxton_Welcome;\n*/\n/******************************************************************************************\n   Buxton welcome end\n******************************************************************************************/\n/******************************************************************************************\n   GROWING PUP - ZIGZAG TRAINING\n   Audience: Targets emailable and opted in consumers who have signed up to Growing Pup,\n   or have come in via another source with a puppy under 12 month, \n   and whose puppy DOB = 9 weeks 3 days old\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where promotion_id in ('NPP09060') and drop_date = current_date;\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\n--Have not been sent a KennelClub/Growing Pup email today\ncreate or replace table ${Database}.temp.NPP09060_kc_gp_today_supps\nas\nselect distinct\n    xr.cid,\n    trim(ch.cell_id) as cell_id,\n    trim(ch.pack_id) as pack_id,\n    trim(promotion_id) as promotion_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on trim(ch.name_urn) = xr.name_urn\nwhere trim(programme_id) = 'E'\n    and trim(promotion_id) in ('NPP04398_C','NPP07290')\n    and drop_date = current_date;\n\n\ncreate or replace table ${Database}.temp.NPP09060_kc_gp_today_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.promotion_id,\n    su.drop_date\nfrom ${Database}.temp.NPP09060_kc_gp_today_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n--Not received in the last 6 months\ncreate or replace table ${Database}.temp.NPP09060_zigzag_supps\nas\nselect distinct\n    xr.cid,\n    trim(ch.cell_id) as cell_id,\n    trim(ch.pack_id) as pack_id,\n    trim(promotion_id) as promotion_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on trim(ch.name_urn) = xr.name_urn\nwhere trim(programme_id) = 'E'\n    and trim(promotion_id) in ('NPP09060')\n    and drop_date >= add_months(current_date,-6);\n\n\ncreate or replace table ${Database}.temp.NPP09060_zigzag_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.promotion_id,\n    su.drop_date\nfrom ${Database}.temp.NPP09060_zigzag_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n--select current_date - 72, current_date - 70;\n\n-- Create pets table : between 9 weeks 3 days (70 days) and 9 week 5 days (72 days)\ncreate or replace table ${Database}.temp.NPP09060_GP_zigzag_pets\nas\nselect *\nfrom\n(select distinct\n    cid,    \n    first_value(case when pet_order = 1 then pet_name end) over (partition by cid order by case when pet_order = 1 then 1 else 0 end desc) as pet_1_name,\n    first_value(case when pet_order = 2 then pet_name end) over (partition by cid order by case when pet_order = 2 then 1 else 0 end desc) as pet_2_name,\n    first_value(case when pet_order = 3 then pet_name end) over (partition by cid order by case when pet_order = 3 then 1 else 0 end desc) as pet_3_name,\n    first_value(case when pet_order = 1 then pet_dob end) over (partition by cid order by case when pet_order = 1 then 1 else 0 end desc) as pet_1_dob,\n    first_value(case when pet_order = 2 then pet_dob end) over (partition by cid order by case when pet_order = 2 then 1 else 0 end desc) as pet_2_dob,\n    first_value(case when pet_order = 3 then pet_dob end) over (partition by cid order by case when pet_order = 3 then 1 else 0 end desc) as pet_3_dob\nfrom\n    (select distinct\n        cb.cid,\n        cp.pet_name,\n        cp.pet_type,\n        cp.pet_dob,\n        cp.pet_data_date,\n        row_number() over (partition by cb.cid order by case when pet_dob>=current_date-72 and pet_dob<=current_date-70 then 0 else 1 end, pet_data_date desc, pet_name asc) as pet_order\n    from ${Database}.live.cid_brand cb\n    join ${Database}.live.ref_brand rb on cb.brand_id = rb.brand_id\n    join ${Database}.live.cid_pet cp on cp.cid = cb.cid\n    where \n        cb.business_unit_id = 5 -- purina\n        and rb.brand ilike '%growing pup%'\n        and cb.emailable = 1\n    and case when cp.pet_name in (' Years Old','Years Old','0Atis','0Liver','0Lly','0Pel','0Scar','0Z','1 Max. 2 Pippa','1 Poppy 2 Dottie','1. Vasska 2. Sherman','10 Years','12 Cats', --manually suppress bad names as per email from CR\n                                  '14 Others','15 Boy','1Sheba','2 Cats  Barry','2 Cats  Demi','2 Catsbrahma','2 Dogs','2 Dogs  Coco','2 Dogs Coco','2 Honey','2 Kerry','2 S','2 Siamese Cats Jasmin',\n                                  '2 X Dogs Star','3 Cats','3 Cats Eve','3 Cats Oldest Garfield','3 Jack','3 Moggie','3 Others','3 S','34C25','3D','3Hree','4 Cats','4 Cats Bingo','5 Cats','5 Kittens',\n                                  '6 Cats  Lucy','7Even','8 Cats Owned','9Yrs','''Bea', 'Bertha Simmering Light','Cant Name Them Yet','Cat 1','Cat 2','Cat 3','Cat 4','Cat A','Cat Name','Cat1',\n                                  'Cat1 Tom','Cat12','Cat13','Cat1Bentley','Cat2','Cat3','''Cea','''Cooper'' Magic Pulse','Do Not Have One','Dog 1','Dog 2','Dog 3','Dog 4','Dog 5','Dog1','Dog11','Dog2','Dog3',\n                                  'Dont Have Any','Dont Have Names Yet','Dont Have One','Don''t Know','Dont Know Yet','Don''t Know Yet','''Dre','Dunno','Dunno Yet','Éva','Gaylord','Have 5 Cats','Have 6 Cats',\n                                  'Have Not Named Them','Havent Chosen Yet','Havent Named Them','Havent Named Yet','I Have 11','I Have 2 Maisie','I Have 2 Micky','I Have 3 Cats','I Have 3 Twinkle',\n                                  'I Have 4 Cats','I Have 5','I Have 5 Cats','I Have 5 Cat''s','I Have Lots','I Have Six Molly','I Havent Got One','Ive Got 24 Cats','I''ve Got 4 Cats','Ive Got 6 Mia',\n                                  'Just Born','Just Born2','''Kc''','No Cat','No Idea','No Kittens','No More','No.1','No.2','No1 No2 No3 No','Not Given Yet','Not Got Adult',\n                                  'Not Keeping','Not Named','Not Named As Yet','Not Named Her Yet','Not Picked On Yet','Not Sure','Not Sure New Kitten','Not Sure Yet','Not Yet','Not Yet Chose One',\n                                  'Not Yey Named','Nothing Yet','''Olly','Only 1 Dog','Out Door Cat','Pup1','Pup2','Pup3','Puppies 10','Puppies X 10','Puppy 1','Puppy 2','Puppy 3','Puss 1','Puss 2',\n                                  'Still Thinking Of Name','Still To Name Them','\uD83C\uDF40 Clover',\n                                  '..Non Existent..','2 Being Sold','3 More','4 Babies','A Donthave A Cat','Zz','Zzz','Www','Ww') then '' \n              when cp.pet_name ilike any ('%cats%','%kitten%','%litter%','%months%','%weeks%','%years%','%mth%','%wks%','%yrs%','%total%','%aaa%','%xxx%','%vvv%','%yet to%','%dogs%','%puppies%') then ''\n                                  else cp.pet_name end <> ''  --exclude unknown and dodgy names     \n      and cp.pet_dob>add_months(current_date,-12) and cp.pet_dob<current_date\n      and pet_type = 'Dog'\n     )\n )\n where pet_1_dob>=current_date-72 and pet_1_dob<=current_date-70\n;\n\n--Main selection\ndrop table if exists ${Database}.temp.NPP09060_GP_zigzag cascade;\ncreate table ${Database}.temp.NPP09060_GP_zigzag\nas\nselect *\n,   case when pet_3_name is not null or pet_1_name is null   then 'Your little pup is'\n         when pet_2_name > ''                                then pet_1_name||' and '||pet_2_name||' are'\n         when pet_1_name > ''                                then pet_1_name||' is'         \n             else ''\n        end as pet_name\n,  \tcase when pet_3_name is not null or pet_1_name is null   then 'your pooch'\n         when pet_2_name > ''                                then pet_1_name||' and '||pet_2_name\n         when pet_1_name > ''                                then pet_1_name         \n             else ''\n        end as pet_name_1\n,       'NPP09060|NPP09060|'||cell_id||'|'||pack_id as kog_pack\nfrom (\n    select \n        sha2(bbw_urn,256) as npp_ecrm_uniqueid\n\t,   name_urn\n    ,   forename\n    ,   a.email\n    ,   pet_1_name\n    ,   pet_2_name\n    ,   pet_3_name\n    ,   pet_1_dob\n    ,   pet_2_dob\n    ,   pet_3_dob\n    ,   brand_id\n    ,   brand_preference\n    ,   brand_engagement\n    ,   case when pet_seg = 'cat' then '1'\n           when pet_seg = 'dog' then '2'\n           when pet_seg = 'both' then '3'\n           when pet_seg = 'unknown' then '4'\n        end as cell_id\n    ,   '1' as pack_id \n    ,       row_number() over(partition by a.cid order by case when trim(forename) = '' then 1 else 0 end, case when pet_1_name is not null then 0 else 1 end) as cd_run\n    from (            \n            select  \n                bbw_urn \n            ,   cd.cid\n            ,   cd.name_urn\n            ,   case when length(firstname) < 2 then ''\n                    when length(firstname) < 4 and substring(firstname,2,1) = ' ' then ''\n                    when length(firstname) > 20 then ''\n                    else firstname\n                end as forename\n            ,   cb.brand_preference\n            ,   cb.brand_engagement\n            ,   cb.email_brand as email\n            ,   cb.brand_id\n            ,   case when c.have_cat in ('Y','IN','IO') and c.have_dog in ('Y','IN','IO') then 'both'\n                    when c.have_cat in ('Y','IN','IO') then 'cat'\n                    when c.have_dog in ('Y','IN','IO') then 'dog'\n                    when c.have_cat = 'N' and c.have_dog = 'N' then 'unknown'\n                    end as pet_seg\n            ,    pn.pet_1_name\n            ,    pn.pet_2_name\n            ,    pn.pet_3_name\t   \n            ,    pn.pet_1_dob\n            ,    pn.pet_2_dob\n            ,    pn.pet_3_dob\t     \n            ,    row_number() over(partition by cb.email_brand order by case when trim(firstname) = '' then 1 else 0 end, case when pet_1_name is not null then 0 else 1 end, cb.first_date_brand desc nulls last) as em_run        \n            from ${Database}.live.cid_details cd\n            join ${Database}.live.cid         c   on cd.cid = c.cid\n            join ${Database}.live.cid_brand   cb  on cd.cid = cb.cid and cb.brand_campaignable = 1\n            join ${Database}.live.ref_brand   rb  on rb.brand_id = cb.brand_id\n            join ${Database}.temp.NPP09060_GP_zigzag_pets pn  on pn.cid = cd.cid\n        \n            where     cb.business_unit_id = 5 -- purina\n            and       rb.brand ilike '%Growing Pup%'\n            and       cb.emailable = 1     \n            and (dob > add_months(current_date(), -216) or dob is null)          \n                    ) a\n            left join ${Database}.temp.NPP09060_kc_gp_today_supps s on a.cid=s.cid\n            left join ${Database}.temp.NPP09060_kc_gp_today_e_supps es on a.email = es.email\n            left join ${Database}.temp.NPP09060_zigzag_supps zs  on a.cid=zs.cid\n            left join ${Database}.temp.NPP09060_zigzag_e_supps zes on a.email = zes.email\n            where s.cid is null \n             and es.email is null\n             and zs.cid is null \n             and zes.email is null\n             and em_run = 1\n             ) b\n             where cd_run = 1\n ;\n\n\n/******************************************************************************************\n   Create extract tables\n******************************************************************************************/\n\n\ndrop table if exists ${Database}.jobs.NPP09060_GP_zigzag;\ncreate table ${Database}.jobs.NPP09060_GP_zigzag\nas\nselect   \n     npp_ecrm_uniqueid\n,    NAME_URN\n,    FORENAME\n,    EMAIL\n,    PET_NAME_1 \n,    PET_NAME\n,    KOG_PACK \nfrom ${Database}.temp.NPP09060_GP_zigzag\n;\n\n\n\ndrop table if exists ${Database}.temp.NPP09060_kc_gp_today_supps;\ndrop table if exists ${Database}.temp.NPP09060_kc_gp_today_e_supps;\ndrop table if exists ${Database}.temp.NPP09060_zigzag_supps;\ndrop table if exists ${Database}.temp.NPP09060_zigzag_e_supps;\ndrop table if exists ${Database}.temp.NPP09060_GP_zigzag_pets;\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP09060',\n    'NPP09060',\n    cell_id,\n    pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NPP09060_GP_zigzag\n;\n\n/******************************************************************************************\nFelix D2C March email\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NPP09622' and drop_date = current_date;\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ndrop table if exists ${Database}.temp.NPP09622_supps cascade;\ncreate table ${Database}.temp.NPP09622_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.promotion_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and campaign_id in ('NPP09622');\n\ndrop table if exists ${Database}.temp.NPP09622_e_supps cascade;\ncreate table ${Database}.temp.NPP09622_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.promotion_id,\n    su.drop_date\nfrom ${Database}.temp.NPP09622_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n--pet names\ndrop table if exists ${Database}.temp.NPP09622_cid_petnames;\ncreate table ${Database}.temp.NPP09622_cid_petnames\nas\nselect distinct\n    cid,    \n    first_value(case when pet_order = 1 then pet_name end) over (partition by cid order by case when pet_order = 1 then 1 else 0 end desc) as pet_1_name,\n    first_value(case when pet_order = 2 then pet_name end) over (partition by cid order by case when pet_order = 2 then 1 else 0 end desc) as pet_2_name\nfrom\n    (select distinct\n        cb.cid,\n        cp.pet_name,\n        cp.pet_type,\n        cp.pet_data_date,\n        row_number() over (partition by cb.cid order by pet_data_date desc, pet_name asc) as pet_order\n    from ${Database}.live.cid_brand cb\n    join ${Database}.live.ref_brand rb on cb.brand_id = rb.brand_id\n    join ${Database}.live.cid_pet cp on cp.cid = cb.cid\n    where \n        cb.business_unit_id = 5 \n        and rb.brand ilike '%Purina Masterbrand%'\n        and cb.emailable = 1\n        and pet_type = 'Cat'\n\t\tand (pet_dob < current_date-365 or pet_life_stage <> 'Kitten')\n    and case when cp.pet_name in (' Years Old','Years Old','0Atis','0Liver','0Lly','0Pel','0Scar','0Z','1 Max. 2 Pippa','1 Poppy 2 Dottie','1. Vasska 2. Sherman','10 Years','12 Cats', --manually suppress bad names as per email from CR\n                                  '14 Others','15 Boy','1Sheba','2 Cats  Barry','2 Cats  Demi','2 Catsbrahma','2 Dogs','2 Dogs  Coco','2 Dogs Coco','2 Honey','2 Kerry','2 S','2 Siamese Cats Jasmin',\n                                  '2 X Dogs Star','3 Cats','3 Cats Eve','3 Cats Oldest Garfield','3 Jack','3 Moggie','3 Others','3 S','34C25','3D','3Hree','4 Cats','4 Cats Bingo','5 Cats','5 Kittens',\n                                  '6 Cats  Lucy','7Even','8 Cats Owned','9Yrs','''Bea', 'Bertha Simmering Light','Cant Name Them Yet','Cat 1','Cat 2','Cat 3','Cat 4','Cat A','Cat Name','Cat1',\n                                  'Cat1 Tom','Cat12','Cat13','Cat1Bentley','Cat2','Cat3','''Cea','''Cooper'' Magic Pulse','Do Not Have One','Dog 1','Dog 2','Dog 3','Dog 4','Dog 5','Dog1','Dog11','Dog2','Dog3',\n                                  'Dont Have Any','Dont Have Names Yet','Dont Have One','Don''t Know','Dont Know Yet','Don''t Know Yet','''Dre','Dunno','Dunno Yet','Éva','Gaylord','Have 5 Cats','Have 6 Cats',\n                                  'Have Not Named Them','Havent Chosen Yet','Havent Named Them','Havent Named Yet','I Have 11','I Have 2 Maisie','I Have 2 Micky','I Have 3 Cats','I Have 3 Twinkle',\n                                  'I Have 4 Cats','I Have 5','I Have 5 Cats','I Have 5 Cat''s','I Have Lots','I Have Six Molly','I Havent Got One','Ive Got 24 Cats','I''ve Got 4 Cats','Ive Got 6 Mia',\n                                  'Just Born','Just Born2','''Kc''','No Cat','No Idea','No Kittens','No More','No.1','No.2','No1 No2 No3 No','Not Given Yet','Not Got Adult',\n                                  'Not Keeping','Not Named','Not Named As Yet','Not Named Her Yet','Not Picked On Yet','Not Sure','Not Sure New Kitten','Not Sure Yet','Not Yet','Not Yet Chose One',\n                                  'Not Yey Named','Nothing Yet','''Olly','Only 1 Dog','Out Door Cat','Pup1','Pup2','Pup3','Puppies 10','Puppies X 10','Puppy 1','Puppy 2','Puppy 3','Puss 1','Puss 2',\n                                  'Still Thinking Of Name','Still To Name Them','\uD83C\uDF40 Clover',\n                                  '..Non Existent..','2 Being Sold','3 More','4 Babies','A Donthave A Cat','Zz','Zzz','Www','Ww') then '' \n              when cp.pet_name ilike any ('%cats%','%kitten%','%litter%','%months%','%weeks%','%years%','%mth%','%wks%','%yrs%','%total%','%aaa%','%xxx%','%vvv%','%yet to%','%dogs%','%puppies%') then ''\n                                  else cp.pet_name end <> ''  \n     )\n;\n\ndrop table if exists ${Database}.temp.NPP09622_felix_d2c_march cascade;\ncreate table ${Database}.temp.NPP09622_felix_d2c_march\nas\nselect  npp_ecrm_uniqueid\n    ,   name_urn\n    ,   forename\n    ,   email\n    ,   felix_segment  \n    ,   bt_segment\n    ,   pet_name\n    ,   brand_id\n    ,   brand_preference\n    ,   brand_engagement\n    ,   cell_id\n    , \tpack_id\n,       'NPP09622|NPP09622|'||cell_id||'|'||pack_id as kog_pack\nfrom (\n    select \n        bbw_urn as npp_ecrm_uniqueid\n    ,   name_urn\n    ,   forename\n    ,   a.email\n    ,   felix_segment  \n    ,   bt_segment\n    ,   pet_name\n    ,   brand_id\n    ,   brand_preference\n    ,   brand_engagement\n    ,   case when felix_segment = 'notregistered' then '1'\n             when felix_segment = 'notshopped' then '2'\n             when felix_segment = '1' then '3'\n             when felix_segment = '2' then '4'\n             when felix_segment = 'lapsed' then '5'\n        end as cell_id\n   ,   case when bt_segment = 'clicked' then '1'\n          else '2'\n        end as pack_id\n    ,       row_number() over(partition by a.cid order by case when trim(forename) = '' then 1 else 0 end, case when pet_name is not null then 0 else 1 end) as cd_run\n    from (            \n            select  \n                sha2(c.bbw_urn,256) as bbw_urn \n            ,   cd.cid\n            ,   cd.name_urn\n            ,   case when length(firstname) < 2 then ''\n                    when length(firstname) < 4 and substring(firstname,2,1) = ' ' then ''\n                    when length(firstname) > 20 then ''\n                    else firstname\n                end as forename\n            ,   cb.brand_preference\n            ,   cb.brand_engagement\n            ,   cb.email_brand as email\n            ,   cb.brand_id\n            ,   case\n                     when  thg.cid is null then 'notregistered'\n                     when  thg.cid is not null and ord.cid is null and lp.cid is null then 'notshopped'\n                     when  thg.cid is not null and ord.cid is not null and orders = 1 then '1'\n                     when  thg.cid is not null and ord.cid is not null and orders > 1 then '2'\n                     when  thg.cid is not null and ord.cid is null and lp.cid is not null then 'lapsed'\n                     when  thg.cid is null and ord.cid is null and lp.cid is not null then 'lapsed'\n                end as felix_segment  \n            , case when ae.event_name ilike '%click%' then 'clicked'\n                   else 'opened' end as bt_segment\n            ,    case when nvl(pn.pet_1_name,'') > '' and nvl(pn.pet_2_name,'') = '' then pet_1_name else 'your feline friend' end as pet_name\n            ,    row_number() over(partition by cb.email_brand order by case when trim(firstname) = '' then 1 else 0 end, case when pet_name is not null then 0 else 1 end, cb.first_date_brand desc nulls last) as em_run        \n            from      ${Database}.live.cid_details cd\n            join      ${Database}.live.cid         c   on cd.cid = c.cid\n            join      ${Database}.live.cid_brand   cb  on cd.cid = cb.cid and cb.brand_campaignable = 1\n            join      ${Database}.live.ref_brand   rb  on rb.brand_id = cb.brand_id\n            left join ${Database}.temp.NPP09622_cid_petnames pn  on pn.cid = cd.cid\n            join (select cid, \n                                    event_name, \n                                    min(cast(event_timestamp as date)) as event_date \n                           from ${Database}.live.adestra_events \n                           where adestra_campaign_id in ('31044','31045','31046')\n                           and event_name ilike any ('%read%','%click%')\n\t\t\t\t\t\t   group by 1,2\n                      ) ae on ae.cid = cd.cid\n            left join (select distinct \n                                 cid\n                        from ${Database}.live.xref_name_urn \n                        where name_urn ilike 'REG_THG%' \n                       ) thg on thg.cid = cd.cid\n            left join (select distinct \n                                 cid, \n                                 count(distinct order_number) as orders \n                        from ${Database}.live.xref_name_urn x\n                        join (select distinct customer_id,\n                                            order_number\n                                from  ${Database}.db.npp_thg_trans t\n                                join ${Database}.db.ref_product p on left(p.product_name,8) = to_char(t.ORDERED_PRODUCT_ID)\n                                where order_status ilike '%despatched%'\n                                and order_created >= add_months(current_date, -6)\n                                and p.create_user = 'REG_THG'\n                                and p.brand_id = 42\n                               ) tr on 'REG_THG|'||tr.customer_id = x.name_urn\n                        where x.name_urn ilike 'REG_THG%'\n                        group by 1\n                       ) ord on ord.cid = cd.cid\n            left join (select distinct \n                                 cid, \n                                 max(order_created) as max_order_date\n                        from ${Database}.live.xref_name_urn x\n                        join ${Database}.db.npp_thg_trans t\n                        join ${Database}.db.ref_product p on left(p.product_name,8) = to_char(t.ORDERED_PRODUCT_ID)\n                        where order_status ilike '%despatched%'\n                        and p.create_user = 'REG_THG'\n                        and p.brand_id = 42\n                        group by 1\n                        ) lp on lp.cid = cd.cid \n            where     cb.business_unit_id = 5 -- purina\n            and       rb.brand ilike '%Purina Masterbrand%'\n            and       cb.emailable = 1\n            and ae.event_date >= current_date-3\n            and (dob > add_months(current_date(), -216) or dob is null)   \n            and cd.cid not in (select \n                                    distinct cid \n                               from ${Database}.db.ref_product r_pr\n                               join ${Database}.db.product pr on pr.product_id = r_pr.product_id\n                               join ${Database}.live.xref_name_urn xr on xr.name_urn = pr.name_urn\n                               where left(product_name, 8) in  ('12857253',\n                                                                '13168878',\n                                                                '13168879',\n                                                                '13168880',\n                                                                '13168881',\n                                                                '13168882')\n                              ) \n         ) a\n    left join  ${Database}.temp.NPP09622_supps s    on a.cid = s.cid\n    left join  ${Database}.temp.NPP09622_e_supps es on lower(a.email) = lower(es.email)\n    where s.cid is null \n     and es.email is null\n     and em_run = 1\n ) b\n where cd_run = 1\n and current_date >= '2022-03-17'\n and current_date <= '2022-03-29';\n\n/******************************************************************************************\n   Create extract tables\n******************************************************************************************/\n\ndrop table if exists ${Database}.jobs.NPP09622_felix_d2c_march;\ncreate table ${Database}.jobs.NPP09622_felix_d2c_march\nas\nselect   \n     npp_ecrm_uniqueid\n    ,   name_urn\n    ,   forename\n    ,   email\n    ,   felix_segment as segment  \n    ,   bt_segment\n    ,   pet_name\n    ,   brand_id\n    ,   brand_preference\n    ,   brand_engagement\n    ,   kog_pack \nfrom ${Database}.temp.NPP09622_felix_d2c_march\n;\n\ndrop table if exists ${Database}.temp.NPP09622_supps;\ndrop table if exists ${Database}.temp.NPP09622_e_supps;\ndrop table if exists ${Database}.temp.NPP09622_cid_petnames;\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP09622',\n    'NPP09622',\n    cell_id,\n    pack_id,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NPP09622_felix_d2c_march\n;\n\n/******************************************************************************************\nNPP09654 Go-Cat Senior R&R Follow up - triggered email\n******************************************************************************************/\n\n--if we are running the build again for any reason then remove the campaigns so they can be run again....\ndelete from ${Database}.db.comms_hist where campaign_id = 'NPP09654' and promotion_id in ('NPP09654_FUP') and drop_date = current_date;\n\n/******************************************************************************************\n   SUPPRESSIONS\n******************************************************************************************/\n\ndrop table if exists ${Database}.temp.NPP09654_supps cascade;\ncreate table ${Database}.temp.NPP09654_supps\nas\nselect distinct\n    xr.cid,\n    ch.cell_id,\n    ch.pack_id,\n    ch.promotion_id,\n    ch.drop_date\nfrom ${Database}.db.comms_hist ch --using db incase live has not re-built for some reason and we have just deleted today's stuff from db...\ninner join ${Database}.live.xref_name_urn xr on ch.name_urn = xr.name_urn\nwhere programme_id = 'E'\n    and promotion_id in ('NPP09654_FUP');\n\ndrop table if exists ${Database}.temp.NPP09654_e_supps cascade;\ncreate table ${Database}.temp.NPP09654_e_supps\nas\nselect distinct\n    xr.email,\n    su.cell_id,\n    su.pack_id,\n    su.promotion_id,\n    su.drop_date\nfrom ${Database}.temp.NPP09654_supps su\ninner join ${Database}.live.xref_email xr on su.cid = xr.cid;\n\n/******************************************************************************************\n   EMAIL SELECTIONS\n******************************************************************************************/\n\n--pet names\ndrop table if exists ${Database}.temp.NPP09654_cid_pet_names;\ncreate table ${Database}.temp.NPP09654_cid_pet_names\nas\nselect\n    cid,\n    max(case when pet_run = 1 then pet_name else '' end) as pet_name_1,\n    max(case when pet_run = 2 then pet_name else '' end) as pet_name_2,\n    max(case when pet_run = 3 then pet_name else '' end) as pet_name_3,\n    max(case when pet_run = 1 then pet_dob end) as pet_dob_1,\n    max(case when pet_run = 2 then pet_dob end) as pet_dob_2,\n    max(case when pet_run = 3 then pet_dob end) as pet_dob_3,\n    sum(case when pet_name > '' then 1 else 0 end) as num_pets,\n    min(pet_data_date) as pet_data_date\nfrom (\n         select\n             cid,\n             pet_dob,\n             pet_name,\n             pet_data_date,\n             row_number() over(partition by cid order by case when pet_name > '' then 1 else 0 end desc, pet_data_date, pet_dob nulls last) as pet_run --only same age cats\n         from (\n                  select distinct\n                      cb.cid,\n                      cp.pet_dob,\n                      cp.pet_name, \n                      cp.pet_data_date\n                  from ${Database}.live.cid_brand cb\n                  left join ${Database}.live.ref_brand rb on cb.brand_id = rb.brand_id\n                  left join ${Database}.live.cid_pet cp on cb.cid = cp.cid\n                  where   cb.business_unit_id = 5 -- purina\n                        and rb.brand ilike any ('go cat','felix')\n                        and cb.emailable=1\n                        and cb.brand_campaignable=1\n                        and (( lower(cp.pet_type) = 'cat' and NOT(contains(lower(cp.source),'reg_wun') and contains(lower(cp.name_urn),'kitten code'))       --kitten code registered\n                                    and cp.pet_dob < add_months(current_date,-12) --older than 12 months old (not a kitten)\n                                )\n                             or cp.cid is null) -- no pets but left in as they are brand campaignable/emailable\n              ) a\n     ) b\ngroup by 1\n;\n\ndrop table if exists ${Database}.temp.NPP09654_follow_up;\ncreate table ${Database}.temp.NPP09654_follow_up\nas\nselect b.cid,\n    name_urn,\n    forename,\n    email,\n        case when (nvl(pet_name_1,'') = '' or pet_name_3 > '') then 'your cat'\n             when pet_name_2 > ''   then pet_name_1||' and '||pet_name_2\n             when pet_name_1 > ''   then pet_name_1\n                else 'error' \n        end as pet_name,\n    brand_id,\n    brand_preference,\n    brand_engagement,\n        case when left(cell,2) = '01' then '1'\n         when left(cell,2) = '02' then '2'\n         when left(cell,2) = '03' then '3'\n         when left(cell,2) = '04' then '4'\n         else '99' end as cell,\n      to_char(recency) as pack,\n    'NPP09654|NPP09654_FUP|'||case when left(cell,2) = '01' then '1'\n                                when left(cell,2) = '02' then '2'\n                                when left(cell,2) = '03' then '3'\n                                when left(cell,2) = '04' then '4'\n                                else '99' end||'|'||to_char(recency) as kog_pack\nfrom (\n    select a.*\n    ,       row_number() over(partition by a.cid order by case when trim(forename) = '' then 1 else 0 end, case when pet_name_1 is not null then 0 else 1 end) as cd_run\n    from (            \n            select  \n                bbw_urn  \n        ,       cd.cid\n        ,       cd.name_urn\n        ,       cd.title\n            ,   case when length(cd.firstname) < 2 then ''\n                    when length(cd.firstname) < 4 and substring(cd.firstname,2,1) = ' ' then ''\n                    when length(cd.firstname) > 20 then ''\n                    else firstname\n                end as forename\n        ,       cb.brand_preference\n        ,       cb.brand_engagement\n        ,       cd.postcode\n        ,       cb.email_brand as email\n        ,       cb.emailable\n        ,       rb.brand\n        ,       c.have_cat\n        ,       case when cb.brand_id = '47' and cb.brand_preference = 1          then '01 Go Cat Registrants'\n                     when cb.brand_id = '47' and cb.brand_engagement = 1          then '02 Interacted with Go Cat'\n                     when cb.brand_id = '42' and cb.brand_preference = 1          then '03 Felix Registrants'\n                     when cb.brand_id = '42' and cb.brand_engagement = 1          then '04 Interacted with Felix'\n                     else '05 Other'\n                end as cell\n        ,       cb.brand_id\n        ,       cb.last_date_brand\n        ,       c.updated_date\n        ,       cb.customer_retention_date_brand as engaged_date\n        ,       cb.last_email_open_date_brand\n        ,       case\n                    when cb.customer_retention_date_brand >= add_months(current_date,-6)                                                        then 1\n                    when cb.customer_retention_date_brand >= add_months(current_date,-12)and cb.customer_retention_date_brand < add_months(current_date,-6)  then 2\n                    when cb.customer_retention_date_brand >= add_months(current_date,-18)and cb.customer_retention_date_brand < add_months(current_date,-12) then 3\n                    when cb.customer_retention_date_brand >= add_months(current_date,-24)and cb.customer_retention_date_brand < add_months(current_date,-18) then 4\n                    else 5\n                end as recency\n        ,       pn.pet_name_1 \t\t\t\n        ,       pn.pet_name_2 \t\t\t\n        ,       pn.pet_name_3 \t\t\t\n        ,    row_number() over(partition by cb.email_brand order by case when trim(firstname) = '' then 1 else 0 end, case when pet_name_1 is not null then 0 else 1 end, cb.first_date_brand desc nulls last) as em_run        \n            from      ${Database}.live.cid_details cd\n            join      ${Database}.live.cid         c   on cd.cid = c.cid\n            join      ${Database}.live.cid_brand   cb  on cd.cid = cb.cid and cb.brand_campaignable = 1\n            join      ${Database}.live.ref_brand   rb  on rb.brand_id = cb.brand_id\n            join ${Database}.temp.NPP09654_cid_pet_names pn  on pn.cid = cd.cid\n            join ( select \n                        ae.cid , min(cast(event_timestamp as date)) as event_date\n                         from ${Database}.live.adestra_events ae\n                           where adestra_campaign_id in ('31802')   -- email not set up yet\n                           and event_name ilike any ('%click%')\n                           group by ae.cid\n                 ) ae on ae.cid = cd.cid\n            where   cb.business_unit_id = 5 -- purina\n                and rb.brand ilike any ('go cat','felix')\n                and cb.emailable = 1 \n                and cb.brand_campaignable = 1\n                and current_date >= ae.event_date+14  --14 days after click is captured\n                and c.have_cat in ('Y','IN','IO') --assume they need to have either a known cat or inferred??\n                and cb.cid not in (select dp.cid\n                    from (\n                          select distinct   -- excluding these as some issues with the opts on these campaigns\n                              xr.cid, \n                              first_value(dp.name_urn) over (partition by xr.cid order by dp.dp_date desc) as most_recent_source\n                          from ${Database}.db.names_dp dp\n                          left join ${Database}.live.xref_name_urn  xr on dp.name_urn = xr.name_urn\n                          ) dp\n                    where (most_recent_source ilike '%felix try now%' or most_recent_source ilike '%beta instant win%')  --not mentioned in brief but might be wroth having in at least the felix one?\n                    )\n                and cb.cid not in (\n                    select distinct --exclude ces contacts within last 3 months\n                        xr.cid\n                    from ${Database}.live.xref_name_urn xr\n                    where name_urn in  (\n                                          select\n                                              name_urn\n                                          from ${Database}.db.npp_ces_contacts\n                                          where cast(contact_date as date) > add_months(current_date,-3)\n                                          union all\n                                          select\n                                              name_urn\n                                          from ${Database}.db.npp_ces_contacts_and_surveys\n                                          where cast(contact_date as date) > add_months(current_date,-3)\n                                      )\n                                 )\n                  and cb.cid not in (select cid\n                                   from ${Database}.live.cid_brand  \n                                   where brand_preference = 0 and brand_id in (42,47)  --excluding brand preferences not positive\n                                   )\n                  and cb.cid not in (select cid \n                                   from (select distinct cid,                          --excluding brand preferences not positive\n                                               first_value(pref_emailable)over (partition by xr.cid order by np.data_date desc) as dp\n                                          from ${Database}.db.NAMES_PREFERENCE np\n                                          join ${Database}.live.xref_name_urn xr on xr.name_urn = np.name_urn\n                                         where brand_id in (42,47)\n                                        )\n                                where dp = 0 \n                                      ) \n                       ) a\n            left join  ${Database}.temp.NPP09654_supps s    on a.cid = s.cid\n            left join  ${Database}.temp.NPP09654_e_supps es on lower(a.email) = lower(es.email)\n            where s.cid is null \n             and es.email is null\n             and em_run = 1\n             ) b\n             where cd_run = 1\n      and current_date >= '2022-05-06' --start date\n      and current_date <= '2022-05-25' --end_date\n ;\n\n/******************************************************************************************\n   Create extract tables\n******************************************************************************************/\n\ncreate or replace table ${Database}.jobs.NPP09654_gocat_follow_up as select name_urn, forename, email, pet_name, cell, pack as batch, kog_pack from ${Database}.temp.NPP09654_follow_up;\n\ndrop table if exists ${Database}.temp.NPP09654_supps;\ndrop table if exists ${Database}.temp.NPP09654_e_supps;\ndrop table if exists ${Database}.temp.NPP09654_cid_petnames;\n\n/******************************************************************************************\n   COMMS HISTORY\n******************************************************************************************/\n\ninsert into ${Database}.db.comms_hist\n(\n    programme_id,\n    campaign_id,\n    promotion_id,\n    cell_id,\n    pack_id,\n    control_cell,\n    name_urn,\n    drop_date,\n    email,\n    brand_preference,\n    brand_engagement,\n    response_date,\n    data_brand_id\n)\nselect\n    'E',\n    'NPP09654',\n    'NPP09654_FUP',\n    cell,\n    pack,\n     0,\n     name_urn,\n     current_date,\n     email,\n     brand_preference,\n     brand_engagement,\n     current_date,\n     brand_id\nfrom ${Database}.temp.NPP09654_follow_up\n;\n\n-- ===========================================================================================\n-- EOC\n-- ===========================================================================================\n\n\n--alter warehouse set warehouse_size = 'Xsmall';\n\ninsert into tbw.db.monitoring\n(monitoring_timestamp,client,process,description,sub_description,value)\nselect  current_timestamp::timestamp_ntz\n,       '${Database}'\n,       'BUILD'\n,       'Proc 20 Email Outputs'\n,       'SCRIPT'\n,       'FINISHED'\n;\n"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]},"197223":{"id":197223,"inputCardinality":"ZERO","outputCardinality":"MANY","connectorHint":"UNCONDITIONAL","executionHint":"FLOW","implementationID":444132438,"x":-656,"y":-112,"width":32,"height":32,"inputConnectorIDs":[],"outputSuccessConnectorIDs":[],"outputFailureConnectorIDs":[],"outputUnconditionalConnectorIDs":[197226],"outputTrueConnectorIDs":[],"outputFalseConnectorIDs":[],"exportMappings":{},"parameters":{"1":{"slot":1,"name":"Start","elements":{"1":{"slot":1,"values":{"1":{"slot":1,"type":"STRING","value":"Start 0"}}}},"visible":true}},"expectedFailure":null,"activationStatus":"ENABLED","outputIterationConnectorIDs":[],"inputIterationConnectorIDs":[]}},"successConnectors":{"197227":{"id":197227,"sourceID":197222,"targetID":197220}},"failureConnectors":{"197225":{"id":197225,"sourceID":197222,"targetID":197221}},"unconditionalConnectors":{"197226":{"id":197226,"sourceID":197223,"targetID":197222}},"trueConnectors":{},"falseConnectors":{},"iterationConnectors":{},"noteConnectors":{},"notes":{},"variables":{"DateForQueue":{"definition":{"name":"DateForQueue","type":"DATETIME","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"2020-01-01"},"GA_Unique":{"definition":{"name":"GA_Unique","type":"DECIMAL","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":""},"SkipCode":{"definition":{"name":"SkipCode","type":"TEXT","scope":"TASKBATCH","description":"","visibility":"PUBLIC"},"value":"0"}},"grids":{}},"info":{"name":"Proc20 EmailOutput","description":null,"type":"ORCHESTRATION","tag":"ddcf07d0-d116-43af-9626-287730336393"}}